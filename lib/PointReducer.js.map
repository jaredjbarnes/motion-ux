{"version":3,"sources":["../src/PointReducer.js"],"names":["PointReducer","points","reducedPoints","Array","length","percentage","x","innerLength","y","nextPoint","point"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;IAEqBA,Y;;;AACnB,wBAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,aAAL,GAAqB,IAAIC,KAAJ,CAAUF,MAAM,CAACG,MAAjB,CAArB;AACD;;;;4BAEOC,U,EAAY;AAClB,UAAMJ,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,aAAa,GAAG,KAAKA,aAA3B;AACA,UAAME,MAAM,GAAGH,MAAM,CAACG,MAAtB;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC/BJ,QAAAA,aAAa,CAACI,CAAD,CAAb,GAAmBL,MAAM,CAACK,CAAD,CAAzB;AACD;;AAED,WAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGF,MAApB,EAA4BE,EAAC,EAA7B,EAAiC;AAC/B,YAAMC,WAAW,GAAGH,MAAM,GAAGE,EAAT,GAAa,CAAjC;;AAEA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAApB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC,cAAMC,SAAS,GAAGP,aAAa,CAACM,CAAC,GAAG,CAAL,CAA/B;AACA,cAAME,KAAK,GAAGR,aAAa,CAACM,CAAD,CAA3B;AAEAN,UAAAA,aAAa,CAACM,CAAD,CAAb,GAAmB,CAACC,SAAS,GAAGC,KAAb,IAAsBL,UAAtB,GAAmCK,KAAtD;AACD;AACF;;AAED,aAAOR,aAAa,CAAC,CAAD,CAApB;AACD","sourcesContent":["// This could be done with a reducer and recursion to be more readable, however,\n// it is memory expensive, because it creates a function every invocation as well\n// as new arrays on every recursive invocation. This should be fast and have no memory chern.\n\nexport default class PointReducer {\n  constructor(points) {\n    this.points = points;\n    this.reducedPoints = new Array(points.length);\n  }\n\n  valueAt(percentage) {\n    const points = this.points;\n    const reducedPoints = this.reducedPoints;\n    const length = points.length;\n\n    for (let x = 0; x < length; x++) {\n      reducedPoints[x] = points[x];\n    }\n\n    for (let x = 0; x < length; x++) {\n      const innerLength = length - x - 1;\n\n      for (let y = 0; y < innerLength; y++) {\n        const nextPoint = reducedPoints[y + 1];\n        const point = reducedPoints[y];\n\n        reducedPoints[y] = (nextPoint - point) * percentage + point;\n      }\n    }\n\n    return reducedPoints[0];\n  }\n}\n"],"file":"PointReducer.js"}