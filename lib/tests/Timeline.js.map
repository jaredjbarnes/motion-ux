{"version":3,"sources":["../../src/tests/Timeline.js"],"names":["exports","name","timeline","Timeline","property","startAt","endAt","from","to","values","render","getCurrentValues","assert","strictEqual","opacity","throws","message","value","path","display"],"mappings":"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","sourcesContent":["import Timeline from \"../Timeline.js\";\nimport MockClock from \"../MockClock.js\";\nimport assert from \"assert\";\n\nexports[\"Timeline: Get current values as 0.\"] = () => {\n  const name = \"my-animation\";\n  const timeline = new Timeline([\n    {\n      name: name,\n      property: \"opacity\",\n      startAt: 0,\n      endAt: 1,\n      from: \"0\",\n      to: \"1\",\n    },\n  ]);\n\n  const values = timeline.render(0).getCurrentValues();\n\n  assert.strictEqual(values[name].opacity, \"0\");\n};\n\nexports[\"Timeline: Animated value types do not match.\"] = () => {\n  const name = \"my-animation\";\n\n  assert.throws(\n    () => {\n      new Timeline([\n        {\n          name: name,\n          property: \"opacity\",\n          startAt: 0,\n          endAt: 1,\n          from: \"0px\",\n          to: \"1\",\n        },\n      ]);\n    },\n    {\n      message: `Invalid Animation: The value types that are being animated do not match. From: \"0px\", To:\"1\", Controls: []`,\n    }\n  );\n};\n\nexports[\"Timeline: Valid Path.\"] = () => {\n  const name = \"my-animation\";\n  const from =\n    \"M 10 315 L 110 215 A 30 50 0 0 1 162.55 162.45 L 172.55 152.45 A 30 50 -45 0 1 215.1 109.9 L 315 10\";\n  const to =\n    \"M 10 315 L 110 400 A 30 50 0 0 1 162.55 162.45 L 172.55 152.45 A 30 50 -45 0 1 215.1 149.9 L 315 10\";\n\n  const timeline = new Timeline([\n    {\n      name: name,\n      property: \"path\",\n      startAt: 0,\n      endAt: 1,\n      from: from,\n      to: to,\n    },\n  ]);\n\n  timeline.render(1);\n  const value = timeline.getCurrentValues()[name].path;\n\n  assert.strictEqual(value, to);\n};\n\nexports[\"Timeline: Curved Path.\"] = () => {\n  const name = \"my-animation\";\n  const from = \"M 0 0 C 0 0, 0 0, 0 0\";\n  const to = \"M 10 10 C 150 150, 30 30, 20 20\";\n\n  const timeline = new Timeline([\n    {\n      name: name,\n      property: \"path\",\n      startAt: 0,\n      endAt: 1,\n      from: from,\n      to: to,\n    },\n  ]);\n\n  timeline.render(1);\n  const value = timeline.getCurrentValues()[name].path;\n\n  assert.strictEqual(value, to);\n};\n\nexports[\"Timeline: Multiple startAts on same property.\"] = () => {\n  const name = \"my-animation\";\n  const timeline = new Timeline([\n    {\n      name: name,\n      property: \"opacity\",\n      startAt: 0,\n      endAt: 1,\n      from: \"1\",\n      to: \"0\",\n    },\n    {\n      name: name,\n      property: \"display\",\n      startAt: 0.01,\n      endAt: 0.01,\n      from: \"none\",\n      to: \"block\",\n    },\n    {\n      name: name,\n      property: \"display\",\n      startAt: 0.25,\n      endAt: 0.25,\n      from: \"block\",\n      to: \"none\",\n    },\n    {\n      name: name,\n      property: \"display\",\n      startAt: 0.5,\n      endAt: 0.5,\n      from: \"none\",\n      to: \"block\",\n    },\n    {\n      name: name,\n      property: \"display\",\n      startAt: 0.99,\n      endAt: 0.99,\n      from: \"block\",\n      to: \"none\",\n    },\n  ]);\n\n  timeline.render(1);\n\n  let values = timeline.getCurrentValues()[name];\n  let opacity = values.opacity;\n  let display = values.display;\n\n  assert.strictEqual(display, \"none\");\n  assert.strictEqual(opacity, \"0\");\n\n  timeline.render(0.3);\n  values = timeline.getCurrentValues()[name];\n\n  opacity = values.opacity;\n  display = values.display;\n\n  assert.strictEqual(display, \"none\");\n  assert.strictEqual(opacity, \"0.7\");\n\n  timeline.render(0.49);\n  values = timeline.getCurrentValues()[name];\n\n  opacity = values.opacity;\n  display = values.display;\n\n  assert.strictEqual(display, \"none\");\n  assert.strictEqual(opacity, \"0.51\");\n\n  timeline.render(0.75);\n  values = timeline.getCurrentValues()[name];\n\n  opacity = values.opacity;\n  display = values.display;\n\n  assert.strictEqual(display, \"block\");\n  assert.strictEqual(opacity, \"0.25\");\n\n  timeline.render(0);\n  values = timeline.getCurrentValues()[name];\n\n  opacity = values.opacity;\n  display = values.display;\n\n  assert.strictEqual(display, \"none\");\n  assert.strictEqual(opacity, \"1\");\n};\n"],"file":"Timeline.js"}