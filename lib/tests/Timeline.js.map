{"version":3,"sources":["../../src/tests/Timeline.js"],"names":["exports","name","clock","MockClock","timeline","Timeline","animations","property","startAt","endAt","from","to","duration","values","getValuesAt","assert","equal","opacity","play","observe","scrubber","observers","length","state","dispose","throws","message","seek","value","getCurrentValues","path","display"],"mappings":"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","sourcesContent":["import Timeline from \"../Timeline.js\";\nimport MockClock from \"../MockClock.js\";\nimport assert from \"assert\";\n\nexports[\"Timeline: Get current values as 0.\"] = () => {\n  const name = \"my-animation\";\n  const clock = new MockClock();\n\n  const timeline = new Timeline({\n    animations: [\n      {\n        name: name,\n        property: \"opacity\",\n        startAt: 0,\n        endAt: 1,\n        from: \"0\",\n        to: \"1\"\n      }\n    ],\n    duration: 1000,\n    clock: clock\n  });\n\n  const values = timeline.getValuesAt(0);\n\n  assert.equal(values[name].opacity, 0);\n};\n\nexports[\"Timeline: Dispose.\"] = () => {\n  const name = \"my-animation\";\n  const clock = new MockClock();\n\n  const timeline = new Timeline({\n    animations: [\n      {\n        name: name,\n        property: \"opacity\",\n        startAt: 0,\n        endAt: 1,\n        from: \"0\",\n        to: \"1\"\n      }\n    ],\n    duration: 1000,\n    clock\n  });\n\n  timeline.play();\n\n  timeline.observe(\"RENDER\", () => {});\n  assert.equal(timeline.scrubber.observers.length, 1);\n  assert.equal(timeline.scrubber.state, 1);\n\n  timeline.dispose();\n  assert.equal(timeline.scrubber.observers.length, 0);\n  assert.equal(timeline.scrubber.state, 0);\n};\n\nexports[\"Timeline: Animated value types do not match.\"] = () => {\n  const name = \"my-animation\";\n  const clock = new MockClock();\n\n  assert.throws(\n    () => {\n      new Timeline({\n        animations: [\n          {\n            name: name,\n            property: \"opacity\",\n            startAt: 0,\n            endAt: 1,\n            from: \"0px\",\n            to: \"1\"\n          }\n        ],\n        duration: 1000,\n        clock\n      });\n    },\n    {\n      message: `Invalid Animation: The value types that are being animated do not match. From: \"0px\", To:\"1\", Controls: []`\n    }\n  );\n};\n\nexports[\"Timeline: Valid Path.\"] = () => {\n  const name = \"my-animation\";\n  const clock = new MockClock();\n  const from =\n    \"M 10 315 L 110 215 A 30 50 0 0 1 162.55 162.45 L 172.55 152.45 A 30 50 -45 0 1 215.1 109.9 L 315 10\";\n  const to =\n    \"M 10 315 L 110 400 A 30 50 0 0 1 162.55 162.45 L 172.55 152.45 A 30 50 -45 0 1 215.1 149.9 L 315 10\";\n\n  const timeline = new Timeline({\n    animations: [\n      {\n        name: name,\n        property: \"path\",\n        startAt: 0,\n        endAt: 1,\n        from: from,\n        to: to\n      }\n    ],\n    duration: 1000,\n    clock\n  });\n\n  timeline.seek(1);\n  const value = timeline.getCurrentValues()[name].path;\n\n  assert.equal(value, to);\n};\n\nexports[\"Timeline: Curved Path.\"] = () => {\n  const name = \"my-animation\";\n  const clock = new MockClock();\n  const from = \"M 0 0 C 0 0, 0 0, 0 0\";\n  const to = \"M 10 10 C 150 150, 30 30, 20 20\";\n\n  const timeline = new Timeline({\n    animations: [\n      {\n        name: name,\n        property: \"path\",\n        startAt: 0,\n        endAt: 1,\n        from: from,\n        to: to\n      }\n    ],\n    duration: 1000,\n    clock\n  });\n\n  timeline.seek(1);\n  const value = timeline.getCurrentValues()[name].path;\n\n  assert.equal(value, to);\n};\n\nexports[\"Timeline: Mutliple startAts on same property.\"] = () => {\n  const name = \"my-animation\";\n  const clock = new MockClock();\n\n  const timeline = new Timeline({\n    animations: [\n      {\n        name: name,\n        property: \"opacity\",\n        startAt: 0,\n        endAt: 1,\n        from: \"1\",\n        to: \"0\"\n      },\n      {\n        name: name,\n        property: \"display\",\n        startAt: 0.01,\n        endAt: 0.01,\n        from: \"none\",\n        to: \"block\"\n      },\n      {\n        name: name,\n        property: \"display\",\n        startAt: 0.25,\n        endAt: 0.25,\n        from: \"block\",\n        to: \"none\"\n      },\n      {\n        name: name,\n        property: \"display\",\n        startAt: 0.5,\n        endAt: 0.5,\n        from: \"none\",\n        to: \"block\"\n      },\n      {\n        name: name,\n        property: \"display\",\n        startAt: 0.99,\n        endAt: 0.99,\n        from: \"block\",\n        to: \"none\"\n      }\n    ],\n    duration: 1000,\n    clock\n  });\n\n  timeline.seek(1);\n\n  let values = timeline.getCurrentValues()[name];\n  let opacity = values.opacity;\n  let display = values.display;\n\n  assert.equal(display, \"none\");\n  assert.equal(opacity, \"0\");\n\n  timeline.seek(0.3);\n  values = timeline.getCurrentValues()[name];\n\n  opacity = values.opacity;\n  display = values.display;\n\n  assert.equal(display, \"none\");\n  assert.equal(opacity, \"0.7\");\n\n  timeline.seek(0.49);\n  values = timeline.getCurrentValues()[name];\n\n  opacity = values.opacity;\n  display = values.display;\n\n  assert.equal(display, \"none\");\n  assert.equal(opacity, \"0.51\");\n\n  timeline.seek(0.75);\n  values = timeline.getCurrentValues()[name];\n\n  opacity = values.opacity;\n  display = values.display;\n\n  assert.equal(display, \"block\");\n  assert.equal(opacity, \"0.25\");\n\n  timeline.seek(0);\n  values = timeline.getCurrentValues()[name];\n\n  opacity = values.opacity;\n  display = values.display;\n\n  assert.equal(display, \"none\");\n  assert.equal(opacity, \"1\");\n};\n"],"file":"Timeline.js"}