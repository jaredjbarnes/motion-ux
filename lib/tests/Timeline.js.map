{"version":3,"sources":["../../src/tests/Timeline.js"],"names":["exports","target","clock","MockClock","timeline","Timeline","animations","name","startAt","endAt","from","to","duration","values","getValuesAt","assert","equal","next","value","opacity","play","observe","scrubber","observers","length","state","dispose"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,OAAO,CAAC,oCAAD,CAAP,GAAgD,YAAM;AACpD,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,KAAK,GAAG,IAAIC,kBAAJ,EAAd;AAEA,MAAMC,QAAQ,GAAG,IAAIC,iBAAJ,CAAa;AAC5BC,IAAAA,UAAU,EAAE,CACV;AACEL,MAAAA,MAAM,EAAEA,MADV;AAEEM,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,OAAO,EAAE,CAHX;AAIEC,MAAAA,KAAK,EAAE,CAJT;AAKEC,MAAAA,IAAI,EAAE,GALR;AAMEC,MAAAA,EAAE,EAAE;AANN,KADU,CADgB;AAW5BC,IAAAA,QAAQ,EAAE,IAXkB;AAY5BV,IAAAA,KAAK,EAAEA;AAZqB,GAAb,CAAjB;AAeA,MAAMW,MAAM,GAAGT,QAAQ,CAACU,WAAT,CAAqB,CAArB,CAAf;;AAEAC,kBAAOC,KAAP,CAAaH,MAAM,CAACA,MAAP,GAAgBI,IAAhB,GAAuBC,KAAvB,CAA6BC,OAA1C,EAAmD,CAAnD;AACD,CAtBD;;AAwBAnB,OAAO,CAAC,oBAAD,CAAP,GAAgC,YAAM;AACpC,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,KAAK,GAAG,IAAIC,kBAAJ,EAAd;AAEA,MAAMC,QAAQ,GAAG,IAAIC,iBAAJ,CAAa;AAC5BC,IAAAA,UAAU,EAAE,CACV;AACEL,MAAAA,MAAM,EAAEA,MADV;AAEEM,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,OAAO,EAAE,CAHX;AAIEC,MAAAA,KAAK,EAAE,CAJT;AAKEC,MAAAA,IAAI,EAAE,GALR;AAMEC,MAAAA,EAAE,EAAE;AANN,KADU,CADgB;AAW5BC,IAAAA,QAAQ,EAAE,IAXkB;AAY5BV,IAAAA,KAAK,EAALA;AAZ4B,GAAb,CAAjB;AAeAE,EAAAA,QAAQ,CAACgB,IAAT;AAEAhB,EAAAA,QAAQ,CAACiB,OAAT,CAAiB,QAAjB,EAA2B,YAAM,CAAE,CAAnC;;AACAN,kBAAOC,KAAP,CAAaZ,QAAQ,CAACkB,QAAT,CAAkBC,SAAlB,CAA4BC,MAAzC,EAAiD,CAAjD;;AACAT,kBAAOC,KAAP,CAAaZ,QAAQ,CAACkB,QAAT,CAAkBG,KAA/B,EAAsC,CAAtC;;AAEArB,EAAAA,QAAQ,CAACsB,OAAT;;AACAX,kBAAOC,KAAP,CAAaZ,QAAQ,CAACkB,QAAT,CAAkBC,SAAlB,CAA4BC,MAAzC,EAAiD,CAAjD;;AACAT,kBAAOC,KAAP,CAAaZ,QAAQ,CAACkB,QAAT,CAAkBG,KAA/B,EAAsC,CAAtC;AACD,CA5BD","sourcesContent":["import Timeline from \"../Timeline.js\";\nimport MockClock from \"../MockClock.js\";\nimport assert from \"assert\";\n\nexports[\"Timeline: Get current values as 0.\"] = () => {\n  const target = {};\n  const clock = new MockClock();\n\n  const timeline = new Timeline({\n    animations: [\n      {\n        target: target,\n        name: \"opacity\",\n        startAt: 0,\n        endAt: 1,\n        from: \"0\",\n        to: \"1\"\n      }\n    ],\n    duration: 1000,\n    clock: clock\n  });\n\n  const values = timeline.getValuesAt(0);\n\n  assert.equal(values.values().next().value.opacity, 0);\n};\n\nexports[\"Timeline: Dispose.\"] = () => {\n  const target = {};\n  const clock = new MockClock();\n\n  const timeline = new Timeline({\n    animations: [\n      {\n        target: target,\n        name: \"opacity\",\n        startAt: 0,\n        endAt: 1,\n        from: \"0\",\n        to: \"1\"\n      }\n    ],\n    duration: 1000,\n    clock\n  });\n\n  timeline.play();\n\n  timeline.observe(\"RENDER\", () => {});\n  assert.equal(timeline.scrubber.observers.length, 1);\n  assert.equal(timeline.scrubber.state, 1);\n\n  timeline.dispose();\n  assert.equal(timeline.scrubber.observers.length, 0);\n  assert.equal(timeline.scrubber.state, 0);\n};\n"],"file":"Timeline.js"}