{"version":3,"sources":["../../src/tests/SlopeTimelineBuilder.js"],"names":["exports","timeline","Timeline","name","property","from","to","startAt","endAt","easing","easings","linear","builder","SlopeTimelineBuilder","slopeTimeline","build","render","values","getCurrentValues","assert","strictEqual","test","left","value"],"mappings":"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","sourcesContent":["import assert from \"assert\";\nimport easings from \"../easings.js\";\nimport SlopeTimelineBuilder from \"../SlopeTimelineBuilder.js\";\nimport Timeline from \"../Timeline.js\";\n\nexports[\"SlopeTimelineBuilder: Forward\"] = () => {\n  const timeline = new Timeline([\n    {\n      name: \"test\",\n      property: \"left\",\n      from: \"100\",\n      to: \"200\",\n      startAt: 0,\n      endAt: 1,\n      easing: easings.linear,\n    },\n  ]);\n\n  const builder = new SlopeTimelineBuilder();\n  const slopeTimeline = builder.build(timeline, 0.5, 1000, 1000, 1);\n  slopeTimeline.render(1);\n  const values = slopeTimeline.getCurrentValues();\n\n  assert.strictEqual(values.test.left.value, \"249.99999999990905\");\n};\n\nexports[\"SlopeTimelineBuilder: Forward with longer duration.\"] = () => {\n  const timeline = new Timeline([\n    {\n      name: \"test\",\n      property: \"left\",\n      from: \"100\",\n      to: \"200\",\n      startAt: 0,\n      endAt: 1,\n      easing: easings.linear,\n    },\n  ]);\n\n  const builder = new SlopeTimelineBuilder();\n  const slopeTimeline = builder.build(timeline, 0.5, 1000, 2000, 1);\n  slopeTimeline.render(1);\n  const values = slopeTimeline.getCurrentValues();\n\n  assert.strictEqual(values.test.left.value, \"349.9999999998181\");\n};\n\nexports[\"SlopeTimelineBuilder: Backward\"] = () => {\n  const timeline = new Timeline([\n    {\n      name: \"test\",\n      property: \"left\",\n      from: \"100\",\n      to: \"200\",\n      startAt: 0,\n      endAt: 1,\n      easing: easings.linear,\n    },\n  ]);\n\n  const builder = new SlopeTimelineBuilder();\n  const slopeTimeline = builder.build(timeline, 0.5, 1000, 1000, -1);\n  slopeTimeline.render(1);\n  const values = slopeTimeline.getCurrentValues();\n\n  assert.strictEqual(values.test.left.value, \"50.00000000009095\");\n};\n\nexports[\"SlopeTimelineBuilder: Stopped\"] = () => {\n  const timeline = new Timeline([\n    {\n      name: \"test\",\n      property: \"left\",\n      from: \"100\",\n      to: \"200\",\n      startAt: 0,\n      endAt: 1,\n      easing: easings.linear,\n    },\n  ]);\n\n  const builder = new SlopeTimelineBuilder();\n  const slopeTimeline = builder.build(timeline, 0.5, 1000, 1000, 0);\n  slopeTimeline.render(1);\n  const values = slopeTimeline.getCurrentValues();\n\n  assert.strictEqual(values.test.left.value, \"150\");\n};\n"],"file":"SlopeTimelineBuilder.js"}