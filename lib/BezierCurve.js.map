{"version":3,"sources":["../src/BezierCurve.js"],"names":["BezierCurve","points","setPoints","reducedPoints","Array","length","Object","freeze","percentage","x","innerLength","y","nextPoint","point","slice"],"mappings":";;;;;;;;;;;;;IAAqBA,W;;;AACnB,uBAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKC,SAAL,CAAeD,MAAf;AACD;;;;8BAESA,M,EAAQ;AAChB,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKE,aAAL,GAAqB,IAAIC,KAAJ,CAAUH,MAAM,CAACI,MAAjB,CAArB;AAEAC,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKN,MAAnB;AACD;;;4BAEOO,U,EAAY;AAClB,UAAMP,MAAM,GAAG,KAAKA,MAApB;AACA,UAAME,aAAa,GAAG,KAAKA,aAA3B;AACA,UAAME,MAAM,GAAGJ,MAAM,CAACI,MAAtB;;AAEA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAC/BN,QAAAA,aAAa,CAACM,CAAD,CAAb,GAAmBR,MAAM,CAACQ,CAAD,CAAzB;AACD;;AAED,WAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGJ,MAApB,EAA4BI,EAAC,EAA7B,EAAiC;AAC/B,YAAMC,WAAW,GAAGL,MAAM,GAAGI,EAAT,GAAa,CAAjC;;AAEA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAApB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC,cAAMC,SAAS,GAAGT,aAAa,CAACQ,CAAC,GAAG,CAAL,CAA/B;AACA,cAAME,KAAK,GAAGV,aAAa,CAACQ,CAAD,CAA3B;AAEAR,UAAAA,aAAa,CAACQ,CAAD,CAAb,GAAmB,CAACC,SAAS,GAAGC,KAAb,IAAsBL,UAAtB,GAAmCK,KAAtD;AACD;AACF;;AAED,aAAOV,aAAa,CAAC,CAAD,CAApB;AACD;;;4BAEO;AACN,aAAO,IAAIH,WAAJ,CAAgB,KAAKC,MAAL,CAAYa,KAAZ,EAAhB,CAAP;AACD","sourcesContent":["export default class BezierCurve {\n  constructor(points) {\n    this.setPoints(points);\n  }\n\n  setPoints(points) {\n    this.points = points;\n    this.reducedPoints = new Array(points.length);\n\n    Object.freeze(this.points);\n  }\n\n  valueAt(percentage) {\n    const points = this.points;\n    const reducedPoints = this.reducedPoints;\n    const length = points.length;\n\n    for (let x = 0; x < length; x++) {\n      reducedPoints[x] = points[x];\n    }\n\n    for (let x = 0; x < length; x++) {\n      const innerLength = length - x - 1;\n\n      for (let y = 0; y < innerLength; y++) {\n        const nextPoint = reducedPoints[y + 1];\n        const point = reducedPoints[y];\n\n        reducedPoints[y] = (nextPoint - point) * percentage + point;\n      }\n    }\n\n    return reducedPoints[0];\n  }\n\n  clone() {\n    return new BezierCurve(this.points.slice());\n  }\n}\n"],"file":"BezierCurve.js"}