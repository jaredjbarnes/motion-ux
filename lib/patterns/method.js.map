{"version":3,"sources":["../../src/patterns/method.js"],"names":["openParen","Literal","closeParen","values","RecursivePattern","args","RepeatComposite","divider","optionalArgs","OptionalComposite","method","AndComposite","name","optionalSpaces"],"mappings":";;;;;;;AAAA;;AAQA;;AACA;;AACA;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,6BAAJ,CAAY,YAAZ,EAA0B,GAA1B,CAAlB;AACA,IAAMC,UAAU,GAAG,IAAID,6BAAJ,CAAY,aAAZ,EAA2B,GAA3B,CAAnB;AACA,IAAME,MAAM,GAAG,IAAIC,sCAAJ,CAAqB,QAArB,CAAf;AACA,IAAMC,IAAI,GAAG,IAAIC,qCAAJ,CAAoB,WAApB,EAAiCH,MAAjC,EAAyCI,gBAAzC,CAAb;AACA,IAAMC,YAAY,GAAG,IAAIC,uCAAJ,CAAsBJ,IAAtB,CAArB;AAEA,IAAMK,MAAM,GAAG,IAAIC,kCAAJ,CAAiB,QAAjB,EAA2B,CACxCC,aADwC,EAExCZ,SAFwC,EAGxCa,uBAHwC,EAIxCL,YAJwC,EAKxCK,uBALwC,EAMxCX,UANwC,CAA3B,CAAf;eASeQ,M","sourcesContent":["import {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n  RecursivePattern,\n  OptionalComposite\n} from \"clarity-pattern-parser\";\n\nimport name from \"./name.js\";\nimport optionalSpaces from \"./optionalSpaces.js\";\nimport divider from \"./divider.js\";\n\nconst openParen = new Literal(\"open-paren\", \"(\");\nconst closeParen = new Literal(\"close-paren\", \")\");\nconst values = new RecursivePattern(\"values\");\nconst args = new RepeatComposite(\"arguments\", values, divider);\nconst optionalArgs = new OptionalComposite(args);\n\nconst method = new AndComposite(\"method\", [\n  name,\n  openParen,\n  optionalSpaces,\n  optionalArgs,\n  optionalSpaces,\n  closeParen\n]);\n\nexport default method;\n"],"file":"method.js"}