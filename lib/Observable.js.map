{"version":3,"sources":["../src/Observable.js"],"names":["Observable","observers","time","callback","observer","TimeObserver","index","indexOf","splice","push","type","Observer","event","forEach","notify"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;IAEqBA,U;;;AACjB,wBAAa;AAAA;;AACT,SAAKC,SAAL,GAAiB,EAAjB;AACH;;;;gCAEWC,I,EAAMC,Q,EAAS;AAAA;;AACvB,UAAMC,QAAQ,GAAG,IAAIC,qBAAJ,CAAiBH,IAAjB,EAAuBC,QAAvB,EAAiC,YAAI;AAClD,YAAMG,KAAK,GAAG,KAAI,CAACL,SAAL,CAAeM,OAAf,CAAuBH,QAAvB,CAAd;;AACA,YAAIE,KAAK,GAAG,CAAC,CAAb,EAAe;AACX,UAAA,KAAI,CAACL,SAAL,CAAeO,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACH;AACJ,OALgB,CAAjB;AAOA,WAAKL,SAAL,CAAeQ,IAAf,CAAoBL,QAApB;AACA,aAAOA,QAAP;AACH;;;4BAEOM,I,EAAMP,Q,EAAS;AAAA;;AACnB,UAAMC,QAAQ,GAAG,IAAIO,iBAAJ,CAAaD,IAAb,EAAmBP,QAAnB,EAA6B,YAAI;AAC9C,YAAMG,KAAK,GAAG,MAAI,CAACL,SAAL,CAAeM,OAAf,CAAuBH,QAAvB,CAAd;;AACA,YAAIE,KAAK,GAAG,CAAC,CAAb,EAAe;AACX,UAAA,MAAI,CAACL,SAAL,CAAeO,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACH;AACJ,OALgB,CAAjB;AAOA,WAAKL,SAAL,CAAeQ,IAAf,CAAoBL,QAApB;AACA,aAAOA,QAAP;AACH;;;2BAEMQ,K,EAAM;AACT,WAAKX,SAAL,CAAeY,OAAf,CAAuB,UAACT,QAAD,EAAY;AAC/BA,QAAAA,QAAQ,CAACU,MAAT,CAAgBF,KAAhB;AACH,OAFD;AAGH;;;8BAEQ;AACL,WAAKX,SAAL,GAAiB,EAAjB;AACH","sourcesContent":["import Observer from \"./Observer.js\";\nimport TimeObserver from \"./TimeObserver.js\";\n\nexport default class Observable {\n    constructor(){\n        this.observers = [];\n    }\n\n    observeTime(time, callback){\n        const observer = new TimeObserver(time, callback, ()=>{\n            const index = this.observers.indexOf(observer);\n            if (index > -1){\n                this.observers.splice(index, 1);\n            }\n        });\n\n        this.observers.push(observer);\n        return observer;\n    }\n\n    observe(type, callback){\n        const observer = new Observer(type, callback, ()=>{\n            const index = this.observers.indexOf(observer);\n            if (index > -1){\n                this.observers.splice(index, 1);\n            }\n        });\n\n        this.observers.push(observer);\n        return observer;\n    }\n\n    notify(event){\n        this.observers.forEach((observer)=>{\n            observer.notify(event);\n        })\n    }\n\n    dispose(){\n        this.observers = [];\n    }\n}"],"file":"Observable.js"}