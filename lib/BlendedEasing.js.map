{"version":3,"sources":["../src/BlendedEasing.js"],"names":["BlendedEasing","options","easingA","easingB","offset","firstControlPoint","getTangent","points","slice","splice","bezierCurve","BezierCurve","validateOptions","deltaX","rise","valueAt","run","percentage","value","Error"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEqBA,a;;;AACnB,yBAAYC,OAAZ,EAAqB;AAAA;;AACnBA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,SAAKC,OAAL,GAAeD,OAAO,CAACC,OAAvB;AACA,SAAKC,OAAL,GAAeF,OAAO,CAACE,OAAvB;AACA,SAAKC,MAAL,GAAcH,OAAO,CAACG,MAAtB;AAEA,QAAMC,iBAAiB,GAAG,KAAKC,UAAL,EAA1B;AACA,QAAMC,MAAM,GAAG,KAAKJ,OAAL,CAAaI,MAAb,CAAoBC,KAApB,EAAf;AACAD,IAAAA,MAAM,CAACE,MAAP,CAAc,CAAd,EAAiB,CAAjB,EAAoBJ,iBAApB;AAEA,SAAKK,WAAL,GAAmB,IAAIC,oBAAJ,CAAgBJ,MAAhB,CAAnB;AACA,SAAKK,eAAL;AACD;;;;iCAEY;AACX,UAAMC,MAAM,GAAG,MAAf;AACA,UAAMC,IAAI,GACR,KAAKZ,OAAL,CAAaa,OAAb,CAAqBF,MAAM,GAAG,KAAKT,MAAnC,IACA,KAAKF,OAAL,CAAaa,OAAb,CAAqB,KAAKX,MAA1B,CAFF;AAGA,UAAMY,GAAG,GAAGH,MAAZ;AAEA,aAAQC,IAAI,GAAGE,GAAR,GAAe,KAAKZ,MAA3B;AACD;;;4BAEOa,U,EAAY;AAClB,UAAMC,KAAK,GAAG,KAAKR,WAAL,CAAiBK,OAAjB,CAAyBE,UAAzB,CAAd;AACA,aAAOC,KAAP;AACD;;;sCAEiB;AAChB,UACE,OAAO,KAAKhB,OAAL,CAAaa,OAApB,KAAgC,UAAhC,IACA,OAAO,KAAKZ,OAAL,CAAaY,OAApB,KAAgC,UAFlC,EAGE;AACA,cAAM,IAAII,KAAJ,CACJ,oEADI,CAAN;AAGD;AACF","sourcesContent":["import BezierCurve from \"./BezierCurve.js\";\n\nexport default class BlendedEasing {\n  constructor(options) {\n    options = options || {};\n    this.easingA = options.easingA;\n    this.easingB = options.easingB;\n    this.offset = options.offset;\n\n    const firstControlPoint = this.getTangent();\n    const points = this.easingB.points.slice();\n    points.splice(1, 0, firstControlPoint);\n\n    this.bezierCurve = new BezierCurve(points);\n    this.validateOptions();\n  }\n\n  getTangent() {\n    const deltaX = 0.0001;\n    const rise =\n      this.easingA.valueAt(deltaX + this.offset) -\n      this.easingA.valueAt(this.offset);\n    const run = deltaX;\n\n    return (rise / run) * this.offset;\n  }\n\n  valueAt(percentage) {\n    const value = this.bezierCurve.valueAt(percentage);\n    return value;\n  }\n\n  validateOptions() {\n    if (\n      typeof this.easingA.valueAt !== \"function\" ||\n      typeof this.easingB.valueAt !== \"function\"\n    ) {\n      throw new Error(\n        \"Both bezierCurveA and BezierCurveB need to have valueAt functions.\"\n      );\n    }\n  }\n}\n"],"file":"BlendedEasing.js"}