{"version":3,"sources":["../src/BlendedEasing.js"],"names":["BlendedEasing","options","easingA","offset","to","easingB","validateOptions","slope","getSlope","from","BezierCurve","easing","Easing","deltaX","rise","valueAt","run","percentage","adjustedPercentage","toValue","fromValue","Math","min","Error"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;IAEqBA,a;;;AACnB,yBAAYC,OAAZ,EAAqB;AAAA;;AACnBA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,SAAKC,OAAL,GAAeD,OAAO,CAACC,OAAvB;AACA,SAAKC,MAAL,GAAcF,OAAO,CAACE,MAAtB;AACA,SAAKC,EAAL,GAAUH,OAAO,CAACI,OAAlB;AAEA,SAAKC,eAAL;AAEA,SAAKC,KAAL,GAAa,KAAKC,QAAL,EAAb;AACA,SAAKC,IAAL,GAAY,IAAIC,oBAAJ,CAAgB,CAAC,CAAD,EAAI,KAAKH,KAAT,CAAhB,CAAZ;AACA,SAAKI,MAAL,GAAc,IAAIC,eAAJ,CAAW,CACvB,CADuB,EAEvB,CAFuB,EAGvB,CAHuB,EAIvB,CAJuB,EAKvB,CAAC,CALsB,EAMvB,GANuB,EAOvB,GAPuB,EAQvB,IARuB,EASvB,IATuB,EAUvB,IAVuB,EAWvB,CAXuB,EAYvB,CAZuB,EAavB,CAbuB,CAAX,CAAd;AAeD,G,CAED;;;;;+BACW;AACT,UAAMC,MAAM,GAAG,IAAf;AAEA,UAAIC,IAAJ;;AAEA,UAAI,KAAKX,MAAL,GAAc,CAAlB,EAAqB;AACnBW,QAAAA,IAAI,GACF,KAAKZ,OAAL,CAAaa,OAAb,CAAqBF,MAAM,GAAG,KAAKV,MAAnC,IACA,KAAKD,OAAL,CAAaa,OAAb,CAAqB,KAAKZ,MAA1B,CAFF;AAGD,OAJD,MAIO;AACLW,QAAAA,IAAI,GAAG,KAAKZ,OAAL,CAAaa,OAAb,CAAqB,CAArB,IAA0B,KAAKb,OAAL,CAAaa,OAAb,CAAqB,IAAIF,MAAzB,CAAjC;AACD;;AAED,UAAMG,GAAG,GAAGH,MAAZ;AAEA,aAAOC,IAAI,GAAGE,GAAd;AACD;;;4BAEOC,U,EAAY;AAClB,UAAMC,kBAAkB,GAAG,KAAKP,MAAL,CAAYI,OAAZ,CAAoBE,UAApB,CAA3B;AACA,UAAME,OAAO,GAAG,KAAKf,EAAL,CAAQW,OAAR,CAAgBE,UAAhB,CAAhB;AACA,UAAMG,SAAS,GAAG,KAAKlB,OAAL,CAAaa,OAAb,CAChBM,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKnB,MAAL,GAAcc,UAA1B,CADgB,IAEd,KAAKf,OAAL,CAAaa,OAAb,CAAqB,KAAKZ,MAA1B,CAFJ;AAIA,aAAOiB,SAAS,GAAG,CAACD,OAAO,GAAGC,SAAX,IAAwBF,kBAA3C;AACD;;;sCAEiB;AAChB,UACE,OAAO,KAAKhB,OAAL,CAAaa,OAApB,KAAgC,UAAhC,IACA,OAAO,KAAKX,EAAL,CAAQW,OAAf,KAA2B,UAF7B,EAGE;AACA,cAAM,IAAIQ,KAAJ,CACJ,2DADI,CAAN;AAGD;AACF","sourcesContent":["import BezierCurve from \"./BezierCurve.js\";\nimport Easing from \"./Easing.js\";\n\nexport default class BlendedEasing {\n  constructor(options) {\n    options = options || {};\n    this.easingA = options.easingA;\n    this.offset = options.offset;\n    this.to = options.easingB;\n\n    this.validateOptions();\n\n    this.slope = this.getSlope();\n    this.from = new BezierCurve([0, this.slope]);\n    this.easing = new Easing([\n      0,\n      0,\n      2,\n      2,\n      -1,\n      1.5,\n      1.5,\n      0.75,\n      1.25,\n      0.85,\n      1,\n      1,\n      1,\n    ]);\n  }\n\n  // Use differential calculas to get slope.\n  getSlope() {\n    const deltaX = 0.01;\n\n    let rise;\n\n    if (this.offset < 1) {\n      rise =\n        this.easingA.valueAt(deltaX + this.offset) -\n        this.easingA.valueAt(this.offset);\n    } else {\n      rise = this.easingA.valueAt(1) - this.easingA.valueAt(1 - deltaX);\n    }\n\n    const run = deltaX;\n\n    return rise / run;\n  }\n\n  valueAt(percentage) {\n    const adjustedPercentage = this.easing.valueAt(percentage);\n    const toValue = this.to.valueAt(percentage);\n    const fromValue = this.easingA.valueAt(\n      Math.min(1, this.offset + percentage)\n    ) - this.easingA.valueAt(this.offset);\n\n    return fromValue + (toValue - fromValue) * adjustedPercentage;\n  }\n\n  validateOptions() {\n    if (\n      typeof this.easingA.valueAt !== \"function\" ||\n      typeof this.to.valueAt !== \"function\"\n    ) {\n      throw new Error(\n        \"Both easingA and easingB need to have a valueAt function.\"\n      );\n    }\n  }\n}\n"],"file":"BlendedEasing.js"}