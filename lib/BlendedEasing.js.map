{"version":3,"sources":["../src/BlendedEasing.js"],"names":["BlendedEasing","options","easingA","easingB","offset","slope","getSlope","points","slice","from","BezierCurve","to","easing","validateOptions","deltaX","rise","valueAt","run","percentage","adjustedPercentage","toValue","fromValue","Error"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEqBA,a;;;AACnB,yBAAYC,OAAZ,EAAqB;AAAA;;AACnBA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,SAAKC,OAAL,GAAeD,OAAO,CAACC,OAAvB;AACA,SAAKC,OAAL,GAAeF,OAAO,CAACE,OAAvB;AACA,SAAKC,MAAL,GAAcH,OAAO,CAACG,MAAtB;AAEA,QAAMC,KAAK,GAAG,KAAKC,QAAL,EAAd;AACA,QAAMC,MAAM,GAAG,KAAKJ,OAAL,CAAaI,MAAb,CAAoBC,KAApB,EAAf;AAEA,SAAKC,IAAL,GAAY,IAAIC,oBAAJ,CAAgB,CAAC,CAAD,EAAIL,KAAJ,CAAhB,CAAZ;AACA,SAAKM,EAAL,GAAU,IAAID,oBAAJ,CAAgBH,MAAhB,CAAV;AACA,SAAKK,MAAL,GAAc,IAAIF,oBAAJ,CAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAhB,CAAd;AAEA,SAAKG,eAAL;AACD;;;;+BAEU;AACT,UAAMC,MAAM,GAAG,MAAf;AACA,UAAMC,IAAI,GACR,KAAKb,OAAL,CAAac,OAAb,CAAqBF,MAAM,GAAG,KAAKV,MAAnC,IACA,KAAKF,OAAL,CAAac,OAAb,CAAqB,KAAKZ,MAA1B,CAFF;AAGA,UAAMa,GAAG,GAAGH,MAAZ;AAEA,aAAOC,IAAI,GAAGE,GAAd;AACD;;;4BAEOC,U,EAAY;AAClB,UAAMC,kBAAkB,GAAG,KAAKP,MAAL,CAAYI,OAAZ,CAAoBE,UAApB,CAA3B;AAEA,UAAME,OAAO,GAAG,KAAKT,EAAL,CAAQK,OAAR,CAAgBE,UAAhB,CAAhB;AACA,UAAMG,SAAS,GAAG,KAAKZ,IAAL,CAAUO,OAAV,CAAkBE,UAAlB,CAAlB;AAEA,aAAOG,SAAS,GAAG,CAACD,OAAO,GAAGC,SAAX,IAAwBF,kBAA3C;AACD;;;sCAEiB;AAChB,UACE,OAAO,KAAKjB,OAAL,CAAac,OAApB,KAAgC,UAAhC,IACA,OAAO,KAAKb,OAAL,CAAaa,OAApB,KAAgC,UAFlC,EAGE;AACA,cAAM,IAAIM,KAAJ,CACJ,oEADI,CAAN;AAGD;AACF","sourcesContent":["import BezierCurve from \"./BezierCurve.js\";\n\nexport default class BlendedEasing {\n  constructor(options) {\n    options = options || {};\n    this.easingA = options.easingA;\n    this.easingB = options.easingB;\n    this.offset = options.offset;\n\n    const slope = this.getSlope();\n    const points = this.easingB.points.slice();\n\n    this.from = new BezierCurve([0, slope]);\n    this.to = new BezierCurve(points);\n    this.easing = new BezierCurve([0, 0, 0, 1, 1, 1, 1, 1, 1]);\n\n    this.validateOptions();\n  }\n\n  getSlope() {\n    const deltaX = 0.0001;\n    const rise =\n      this.easingA.valueAt(deltaX + this.offset) -\n      this.easingA.valueAt(this.offset);\n    const run = deltaX;\n\n    return rise / run;\n  }\n\n  valueAt(percentage) {\n    const adjustedPercentage = this.easing.valueAt(percentage);\n\n    const toValue = this.to.valueAt(percentage);\n    const fromValue = this.from.valueAt(percentage);\n\n    return fromValue + (toValue - fromValue) * adjustedPercentage;\n  }\n\n  validateOptions() {\n    if (\n      typeof this.easingA.valueAt !== \"function\" ||\n      typeof this.easingB.valueAt !== \"function\"\n    ) {\n      throw new Error(\n        \"Both bezierCurveA and BezierCurveB need to have valueAt functions.\"\n      );\n    }\n  }\n}\n"],"file":"BlendedEasing.js"}