{"version":3,"sources":["../src/BlendedTimeline.js"],"names":["BlendedTimeline","fromTimeline","toTimeline","easing","fromAnimations","getCurrentValues","toAnimations","animations","Object","keys","map","name","fromAnimation","toAnimation","property","from","to","Animation","startAt","endAt","controls","easings","linear","flat","time","update","Timeline"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,e;;;;;AACnB,2BAAYC,YAAZ,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8C;AAAA;;AAAA;;AAC5C,QAAMC,cAAc,GAAGH,YAAY,CAACI,gBAAb,EAAvB;AACA,QAAMC,YAAY,GAAGJ,UAAU,CAACG,gBAAX,EAArB;AAEA,QAAME,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYL,cAAZ,EAChBM,GADgB,CACZ,UAACC,IAAD,EAAU;AACb,UAAMC,aAAa,GAAGR,cAAc,CAACO,IAAD,CAApC;AACA,UAAME,WAAW,GAAGP,YAAY,CAACK,IAAD,CAAhC;AAEA,aAAOH,MAAM,CAACC,IAAP,CAAYG,aAAZ,EAA2BF,GAA3B,CAA+B,UAACI,QAAD,EAAc;AAClD,YAAMC,IAAI,GAAGH,aAAa,CAACE,QAAD,CAA1B;AACA,YAAME,EAAE,GAAGH,WAAW,CAACC,QAAD,CAAtB;AAEA,eAAO,IAAIG,kBAAJ,CAAc;AACnBN,UAAAA,IAAI,EAAJA,IADmB;AAEnBG,UAAAA,QAAQ,EAARA,QAFmB;AAGnBI,UAAAA,OAAO,EAAE,CAHU;AAInBC,UAAAA,KAAK,EAAE,CAJY;AAKnBJ,UAAAA,IAAI,EAAJA,IALmB;AAMnBC,UAAAA,EAAE,EAAFA,EANmB;AAOnBI,UAAAA,QAAQ,EAAE,EAPS;AAQnBjB,UAAAA,MAAM,EAAEA,MAAM,IAAIkB,iBAAQC;AARP,SAAd,CAAP;AAUD,OAdM,CAAP;AAeD,KApBgB,EAqBhBC,IArBgB,EAAnB;AAuBA,yFAAMhB,UAAN;AAEA,UAAKN,YAAL,GAAoBA,YAApB;AACA,UAAKC,UAAL,GAAkBA,UAAlB;AA9B4C;AA+B7C;;;;2BAEMsB,I,EAAM;AACX,WAAKvB,YAAL,CAAkBwB,MAAlB,CAAyBD,IAAzB;AACA,WAAKtB,UAAL,CAAgBuB,MAAhB,CAAuBD,IAAvB;;AAEA,kFAAaA,IAAb;AAED;;;;EAxC0CE,kB","sourcesContent":["import Timeline from \"./Timeline.js\";\nimport Animation from \"./Animation.js\";\nimport easings from \"./easings.js\";\n\nexport default class BlendedTimeline extends Timeline {\n  constructor(fromTimeline, toTimeline, easing) {\n    const fromAnimations = fromTimeline.getCurrentValues();\n    const toAnimations = toTimeline.getCurrentValues();\n\n    const animations = Object.keys(fromAnimations)\n      .map((name) => {\n        const fromAnimation = fromAnimations[name];\n        const toAnimation = toAnimations[name];\n\n        return Object.keys(fromAnimation).map((property) => {\n          const from = fromAnimation[property];\n          const to = toAnimation[property];\n\n          return new Animation({\n            name,\n            property,\n            startAt: 0,\n            endAt: 1,\n            from,\n            to,\n            controls: [],\n            easing: easing || easings.linear,\n          });\n        });\n      })\n      .flat();\n\n    super(animations);\n\n    this.fromTimeline = fromTimeline;\n    this.toTimeline = toTimeline;\n  }\n\n  update(time) {\n    this.fromTimeline.update(time);\n    this.toTimeline.update(time);\n\n    super.update(time);\n\n  }\n}\n"],"file":"BlendedTimeline.js"}