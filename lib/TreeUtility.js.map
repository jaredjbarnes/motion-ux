{"version":3,"sources":["../src/TreeUtility.js"],"names":["TreeUtility","nodeA","nodeB","nodeASequence","nodeBSequence","nodeAVisitor","Visitor","node","push","name","visitDown","nodeBVisitor","join"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEqBA,W;;;;;;;;;2CACMC,K,EAAOC,K,EAAM;AAChC,UAAMC,aAAa,GAAG,EAAtB;AACA,UAAMC,aAAa,GAAG,EAAtB;AAEA,UAAMC,YAAY,GAAG,IAAIC,gBAAJ,CAAY,UAACC,IAAD,EAAQ;AACrCJ,QAAAA,aAAa,CAACK,IAAd,CAAmBD,IAAI,CAACE,IAAxB;AACH,OAFoB,CAArB;AAGAJ,MAAAA,YAAY,CAACK,SAAb,CAAuBT,KAAvB;AAEA,UAAMU,YAAY,GAAG,IAAIL,gBAAJ,CAAY,UAACC,IAAD,EAAQ;AACrCH,QAAAA,aAAa,CAACI,IAAd,CAAmBD,IAAI,CAACE,IAAxB;AACH,OAFoB,CAArB;AAGAE,MAAAA,YAAY,CAACD,SAAb,CAAuBR,KAAvB;AAEA,aAAOC,aAAa,CAACS,IAAd,CAAmB,GAAnB,MAA4BR,aAAa,CAACQ,IAAd,CAAmB,GAAnB,CAAnC;AACH","sourcesContent":["import Visitor from \"./Visitor.js\";\n\nexport default class TreeUtility {\n    areTreeStructuresEqual(nodeA, nodeB){\n        const nodeASequence = [];\n        const nodeBSequence = [];\n\n        const nodeAVisitor = new Visitor((node)=>{\n            nodeASequence.push(node.name);\n        });\n        nodeAVisitor.visitDown(nodeA);\n\n        const nodeBVisitor = new Visitor((node)=>{\n            nodeBSequence.push(node.name);\n        });\n        nodeBVisitor.visitDown(nodeB);\n\n        return nodeASequence.join(\"|\") === nodeBSequence.join(\"|\");\n    }\n}"],"file":"TreeUtility.js"}