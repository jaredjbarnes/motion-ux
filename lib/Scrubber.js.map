{"version":3,"sources":["../src/Scrubber.js"],"names":["repeatDirections","DEFAULT","ALTERNATE","states","FORWARD","REVERSE","STOPPED","Scrubber","clock","duration","timeScale","render","repeatDirection","_timeScale","_progress","_duration","_lastTimestamp","_animationFrame","_iterations","_repeat","_repeatDirection","state","notify","type","now","_loop","cancelAnimationFrame","requestAnimationFrame","tick","timestamp","deltaTime","step","progress","seek","stop","lastProgress","value","Observable"],"mappings":"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","sourcesContent":["import Observable from \"./Observable.js\";\n\nconst repeatDirections = {\n  DEFAULT: 0,\n  ALTERNATE: 1\n};\n\nconst states = {\n  FORWARD: 1,\n  REVERSE: -1,\n  STOPPED: 0\n};\n\nexport default class Scrubber extends Observable {\n  static get repeatDirections() {\n    return repeatDirections;\n  }\n\n  static get states() {\n    return states;\n  }\n\n  constructor({\n    clock,\n    duration,\n    timeScale,\n    render,\n    repeatDirection = Scrubber.repeatDirections.DEFAULT\n  }) {\n    super();\n    this._timeScale = 1;\n    this._progress = 0;\n    this._duration = 0;\n    this._lastTimestamp = 0;\n    this._animationFrame = null;\n    this._iterations = 0;\n    this._repeat = 1;\n    this._repeatDirection = repeatDirection;\n\n    this.clock = clock;\n    this.state = Scrubber.states.STOPPED;\n    this.timeScale = timeScale;\n    this.duration = duration;\n    this.render = render;\n  }\n\n  get progress() {\n    return this._progress;\n  }\n\n  get timeScale() {\n    return this._timeScale;\n  }\n\n  set timeScale(value) {\n    if (value > 0) {\n      this._timeScale = value;\n    }\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(value) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing.\n    if (value === 0 || value < 0) {\n      value = 0.00001;\n    }\n\n    this._duration = value;\n  }\n\n  get repeat() {\n    return this._repeat;\n  }\n\n  set repeat(value) {\n    if (typeof value !== \"number\" && value > 0) {\n      return;\n    }\n\n    this._repeat = value;\n  }\n\n  get repeatDirection() {\n    return this._repeatDirection;\n  }\n\n  set repeatDirection(value) {\n    if ((value !== 0) & (value !== 1)) {\n      return;\n    }\n\n    this._repeatDirection = value;\n  }\n\n  play() {\n    if (this.state !== Scrubber.states.FORWARD) {\n      this.notify({\n        type: \"PLAYED\"\n      });\n\n      this._lastTimestamp = this.clock.now();\n      this.state = Scrubber.states.FORWARD;\n      this._loop();\n    }\n  }\n\n  _loop() {\n    this.clock.cancelAnimationFrame(this._animationFrame);\n\n    this._animationFrame = this.clock.requestAnimationFrame(() => {\n      this._loop();\n      this.tick();\n    });\n  }\n\n  tick() {\n    const timestamp = this.clock.now();\n    const deltaTime = timestamp - this._lastTimestamp;\n    let step = deltaTime / this.duration * this._timeScale;\n\n    if (step > 1) {\n      step = 1;\n    }\n\n    if (deltaTime === 0) {\n      return;\n    }\n\n    if (this.state === Scrubber.states.REVERSE) {\n      let progress = this._progress - step;\n      const repeatDirection = this.repeatDirection;\n      const ALTERNATE = Scrubber.repeatDirections.ALTERNATE;\n\n      if (progress <= 0) {\n        this._iterations++;\n\n        if (this._iterations >= this._repeat) {\n          this.seek(0);\n          this.stop();\n          return;\n        }\n\n        if (repeatDirection === ALTERNATE) {\n          progress = progress * -1;\n          this.seek(progress);\n          this.state = Scrubber.states.FORWARD;\n        } else {\n          progress = 1 + progress;\n          this.seek(progress);\n          this.state = Scrubber.states.REVERSE;\n        }\n      } else {\n        this.seek(progress);\n      }\n    } else if (this.state === Scrubber.states.FORWARD) {\n      let progress = this._progress + step;\n      const repeatDirection = this.repeatDirection;\n      const ALTERNATE = Scrubber.repeatDirections.ALTERNATE;\n\n      if (progress >= 1) {\n        this._iterations++;\n\n        if (this._iterations >= this._repeat) {\n          this.seek(1);\n          this.stop();\n          return;\n        }\n\n        if (repeatDirection === ALTERNATE) {\n          progress = 1 - (progress - 1);\n          this.seek(progress);\n          this.state = Scrubber.states.REVERSE;\n        } else {\n          progress = progress - 1;\n          this.seek(progress);\n          this.state = Scrubber.states.FORWARD;\n        }\n      } else {\n        this.seek(progress);\n      }\n    }\n\n    this._lastTimestamp = timestamp;\n  }\n\n  stop() {\n    if (this.state !== Scrubber.states.STOPPED) {\n      this.notify({\n        type: \"STOPPED\"\n      });\n\n      this.state = Scrubber.states.STOPPED;\n      this.clock.cancelAnimationFrame(this._animationFrame);\n    }\n  }\n\n  reverse() {\n    if (this.state !== Scrubber.states.REVERSE) {\n      this.notify({\n        type: \"REVERSED\"\n      });\n\n      this._lastTimestamp = this.clock.now();\n      this.state = Scrubber.states.REVERSE;\n      this._loop();\n    }\n  }\n\n  seek(progress) {\n    const lastProgress = this._progress;\n    this._progress = progress;\n\n    this.render();\n\n    this.notify({\n      type: \"RENDER\",\n      progress: progress,\n      lastProgress: lastProgress\n    });\n  }\n}\n"],"file":"Scrubber.js"}