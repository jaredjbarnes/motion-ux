{"version":3,"sources":["../src/AnimatorCreator.js"],"names":["AnimatorCreator","animationOptions","_assertAnimationOptions","_convertAnimationsToTimelineOptions","_sortTimelineOptions","_createAnimators","Array","isArray","Error","timelineOptions","map","animationOption","TimelineOption","sort","a","b","startAt","animators","options","points","from","controls","to","point","values","parse","Cursor","error","ValuesNodeAnimator"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,e;;;AACnB,2BAAYC,gBAAZ,EAA8B;AAAA;;AAC5B,SAAKA,gBAAL,GAAwBA,gBAAxB;;AAEA,SAAKC,uBAAL;;AACA,SAAKC,mCAAL;;AACA,SAAKC,oBAAL;;AACA,SAAKC,gBAAL;AACD;;;;8CAEyB;AACxB,UAAI,CAACC,KAAK,CAACC,OAAN,CAAc,KAAKN,gBAAnB,CAAL,EAA2C;AACzC,cAAM,IAAIO,KAAJ,CAAU,qCAAV,CAAN;AACD;AACF;;;0DAEqC;AACpC,WAAKC,eAAL,GAAuB,KAAKR,gBAAL,CAAsBS,GAAtB,CACrB,UAAAC,eAAe;AAAA,eAAI,IAAIC,uBAAJ,CAAmBD,eAAnB,CAAJ;AAAA,OADM,CAAvB;AAGD;;;2CAEsB;AACrB,WAAKF,eAAL,CAAqBI,IAArB,CAA0B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAClC,eAAOD,CAAC,CAACE,OAAF,GAAYD,CAAC,CAACC,OAArB;AACD,OAFD;AAGD;;;uCAEkB;AACjB,WAAKC,SAAL,GAAiB,KAAKR,eAAL,CAAqBC,GAArB,CAAyB,UAAAQ,OAAO,EAAI;AACnD,YAAIC,MAAM,IAAID,OAAO,CAACE,IAAZ,4BAAqBF,OAAO,CAACG,QAA7B,IAAuCH,OAAO,CAACI,EAA/C,EAAV;AACA,YAAID,QAAJ;;AAEA,YAAI;AACFA,UAAAA,QAAQ,GAAGF,MAAM,CAACT,GAAP,CAAW,UAAAa,KAAK;AAAA,mBACzBC,gBAAOC,KAAP,CAAa,IAAIC,4BAAJ,CAAWH,KAAX,CAAb,CADyB;AAAA,WAAhB,CAAX;AAGD,SAJD,CAIE,OAAOI,KAAP,EAAc;AACd,gBAAM,IAAInB,KAAJ,4CAA8CU,OAAO,CAACG,QAAtD,EAAN;AACD;;AAED,eAAO,IAAIO,2BAAJ,mBACFV,OADE;AAELG,UAAAA,QAAQ,EAARA;AAFK,WAAP;AAID,OAhBgB,CAAjB;AAiBD;;;mCAEc;AACb,aAAO,KAAKJ,SAAZ;AACD","sourcesContent":["import ValuesNodeAnimator from \"./animators/ValuesNodeAnimator.js\";\nimport values from \"./patterns/values.js\";\nimport { Cursor } from \"clarity-pattern-parser\";\nimport TimelineOption from \"./TimelineOption.js\";\n\nexport default class AnimatorCreator {\n  constructor(animationOptions) {\n    this.animationOptions = animationOptions;\n\n    this._assertAnimationOptions();\n    this._convertAnimationsToTimelineOptions();\n    this._sortTimelineOptions();\n    this._createAnimators();\n  }\n\n  _assertAnimationOptions() {\n    if (!Array.isArray(this.animationOptions)) {\n      throw new Error(\"Expected animations to be an array.\");\n    }\n  }\n\n  _convertAnimationsToTimelineOptions() {\n    this.timelineOptions = this.animationOptions.map(\n      animationOption => new TimelineOption(animationOption)\n    );\n  }\n\n  _sortTimelineOptions() {\n    this.timelineOptions.sort((a, b) => {\n      return a.startAt - b.startAt;\n    });\n  }\n\n  _createAnimators() {\n    this.animators = this.timelineOptions.map(options => {\n      let points = [options.from, ...options.controls, options.to];\n      let controls;\n\n      try {\n        controls = points.map(point =>\n          values.parse(new Cursor(point))\n        );\n      } catch (error) {\n        throw new Error(`Parse Error: could not parse css ${options.controls}`);\n      }\n\n      return new ValuesNodeAnimator({\n        ...options,\n        controls\n      });\n    });\n  }\n\n  getAnimators() {\n    return this.animators;\n  }\n}\n"],"file":"AnimatorCreator.js"}