{"version":3,"sources":["../src/AnimatorCreator.js"],"names":["AnimatorCreator","animationOptions","_assertAnimationOptions","_convertAnimationsToTimelineOptions","_sortTimelineOptions","_createAnimators","Array","isArray","Error","timelineOptions","map","animationOption","TimelineOption","sort","a","b","startAt","animators","options","fromNode","toNode","values","parse","Cursor","from","to","error","ValuesNodeAnimator"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;IAEqBA,e;;;AACnB,2BAAYC,gBAAZ,EAA8B;AAAA;;AAC5B,SAAKA,gBAAL,GAAwBA,gBAAxB;;AAEA,SAAKC,uBAAL;;AACA,SAAKC,mCAAL;;AACA,SAAKC,oBAAL;;AACA,SAAKC,gBAAL;AACD;;;;8CAEyB;AACxB,UAAI,CAACC,KAAK,CAACC,OAAN,CAAc,KAAKN,gBAAnB,CAAL,EAA2C;AACzC,cAAM,IAAIO,KAAJ,CAAU,qCAAV,CAAN;AACD;AACF;;;0DAEqC;AACpC,WAAKC,eAAL,GAAuB,KAAKR,gBAAL,CAAsBS,GAAtB,CACrB,UAAAC,eAAe;AAAA,eAAI,IAAIC,uBAAJ,CAAmBD,eAAnB,CAAJ;AAAA,OADM,CAAvB;AAGD;;;2CAEsB;AACrB,WAAKF,eAAL,CAAqBI,IAArB,CAA0B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAClC,eAAOD,CAAC,CAACE,OAAF,GAAYD,CAAC,CAACC,OAArB;AACD,OAFD;AAGD;;;uCAEkB;AACjB,WAAKC,SAAL,GAAiB,KAAKR,eAAL,CAAqBC,GAArB,CAAyB,UAAAQ,OAAO,EAAI;AACnD,YAAIC,QAAJ;AACA,YAAIC,MAAJ;;AAEA,YAAI;AACFD,UAAAA,QAAQ,GAAGE,gBAAOC,KAAP,CAAa,IAAIC,4BAAJ,CAAWL,OAAO,CAACM,IAAnB,CAAb,CAAX;AACAJ,UAAAA,MAAM,GAAGC,gBAAOC,KAAP,CAAa,IAAIC,4BAAJ,CAAWL,OAAO,CAACO,EAAnB,CAAb,CAAT;AACD,SAHD,CAGE,OAAOC,KAAP,EAAc;AACd,gBAAM,IAAIlB,KAAJ,4CACgCU,OAAO,CAACO,EADxC,kBACkDP,OAAO,CAACM,IAD1D,EAAN;AAGD;;AAED,eAAO,IAAIG,2BAAJ,mBACFT,OADE;AAELC,UAAAA,QAAQ,EAARA,QAFK;AAGLC,UAAAA,MAAM,EAANA;AAHK,WAAP;AAKD,OAlBgB,CAAjB;AAmBD;;;mCAEc;AACb,aAAO,KAAKH,SAAZ;AACD","sourcesContent":["import ValuesNodeAnimator from \"./animators/ValuesNodeAnimator.js\";\nimport values from \"./patterns/values.js\";\nimport { Cursor } from \"clarity-pattern-parser\";\nimport TimelineOption from \"./TimelineOption.js\";\n\nexport default class AnimatorCreator {\n  constructor(animationOptions) {\n    this.animationOptions = animationOptions;\n\n    this._assertAnimationOptions();\n    this._convertAnimationsToTimelineOptions();\n    this._sortTimelineOptions();\n    this._createAnimators();\n  }\n\n  _assertAnimationOptions() {\n    if (!Array.isArray(this.animationOptions)) {\n      throw new Error(\"Expected animations to be an array.\");\n    }\n  }\n\n  _convertAnimationsToTimelineOptions() {\n    this.timelineOptions = this.animationOptions.map(\n      animationOption => new TimelineOption(animationOption)\n    );\n  }\n\n  _sortTimelineOptions() {\n    this.timelineOptions.sort((a, b) => {\n      return a.startAt - b.startAt;\n    });\n  }\n\n  _createAnimators() {\n    this.animators = this.timelineOptions.map(options => {\n      let fromNode;\n      let toNode;\n\n      try {\n        fromNode = values.parse(new Cursor(options.from));\n        toNode = values.parse(new Cursor(options.to));\n      } catch (error) {\n        throw new Error(\n          `Parse Error: could not parse css ${options.to}, or ${options.from}`\n        );\n      }\n\n      return new ValuesNodeAnimator({\n        ...options,\n        fromNode,\n        toNode\n      });\n    });\n  }\n\n  getAnimators() {\n    return this.animators;\n  }\n}\n"],"file":"AnimatorCreator.js"}