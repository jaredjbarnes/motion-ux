{"version":3,"sources":["../src/Animator.js"],"names":["visitor","GraphsVisitor","Animator","animation","visit","bind","convertNumberNodes","progress","bezierCurve","BezierCurve","nodes","fromNode","controlNodes","toNode","resultNode","setCallback","visitDown","slice","length","name","forEach","node","value","Number","pop","relativeProgress","startAt","duration","endAt","progressWithEasing","easing","valueAt","points","map","setPoints","toString","Array","isArray","children","from","to"],"mappings":"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","sourcesContent":["import BezierCurve from \"./BezierCurve.js\";\nimport GraphsVisitor from \"./GraphsVisitor.js\";\n\nconst visitor = new GraphsVisitor();\n\nexport default class Animator {\n  constructor(animation) {\n    this.animation = animation;\n    this.visit = this.visit.bind(this);\n    this.convertNumberNodes = this.convertNumberNodes.bind(this);\n    this.progress = 0;\n    this.bezierCurve = new BezierCurve([]);\n    this.nodes = [\n      this.animation.fromNode,\n      ...this.animation.controlNodes,\n      this.animation.toNode,\n      this.animation.resultNode,\n    ];\n\n    visitor.setCallback(this.convertNumberNodes);\n    visitor.visitDown(this.nodes.slice(0, this.nodes.length - 1));\n  }\n\n  convertNumberNodes(...nodes) {\n    if (nodes[0].name === \"number\") {\n      nodes.forEach((node) => {\n        node.value = Number(node.value);\n      });\n    }\n  }\n\n  visit(...nodes) {\n    const resultNode = nodes.pop();\n    const progress = this.progress;\n\n    if (nodes[0].name === \"number\") {\n      const relativeProgress = progress - this.animation.startAt;\n      const duration = this.animation.endAt - this.animation.startAt;\n      const progressWithEasing =\n        this.animation.easing.valueAt(relativeProgress) * duration;\n\n      const points = nodes.map((node) => node.value);\n      this.bezierCurve.setPoints(points);\n      resultNode.value = this.bezierCurve\n        .valueAt(progressWithEasing)\n        .toString();\n    } else {\n      if (!Array.isArray(resultNode.children)) {\n        if (progress <= this.animation.startAt) {\n          resultNode.value = nodes[0].value;\n        } else if (progress > this.animation.startAt) {\n          resultNode.value = nodes[nodes.length - 1].value;\n        }\n      }\n    }\n  }\n\n  render(progress) {\n    if (progress <= this.animation.startAt) {\n      return this.animation.from;\n    }\n\n    if (progress >= this.animation.endAt) {\n      return this.animation.to;\n    }\n\n    this.progress = progress;\n\n    visitor.setCallback(this.visit);\n    visitor.visitDown(this.nodes);\n\n    return this.animation.resultNode.toString();\n  }\n}\n"],"file":"Animator.js"}