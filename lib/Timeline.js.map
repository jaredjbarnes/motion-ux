{"version":3,"sources":["../src/Timeline.js"],"names":["sortDesc","animatorA","animatorB","animation","startAt","sortAsc","Timeline","animations","_currentValues","_initialValues","animators","map","Animator","Animation","createCurrentValues","createInitialValues","sort","reduce","results","animator","name","property","from","Object","keys","forEach","animationName","currentValues","initialValues","time","applyInitialValues","filter","render","min","Math","max","endAt"],"mappings":"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","sourcesContent":["import Animator from \"./Animator.js\";\nimport Animation from \"./Animation.js\";\n\nconst sortDesc = (animatorA, animatorB) => {\n  return animatorB.animation.startAt - animatorA.animation.startAt;\n};\n\nconst sortAsc = (animatorA, animatorB) => {\n  return animatorA.animation.startAt - animatorB.animation.startAt;\n};\n\nexport default class Timeline {\n  constructor(animations) {\n    this._currentValues = {};\n    this._initialValues = {};\n\n    this.animators = animations.map(\n      (animation) => new Animator(new Animation(animation))\n    );\n\n    this.createCurrentValues();\n    this.createInitialValues();\n\n    // Sort by time.\n    this.animators.sort(sortAsc);\n  }\n\n  createCurrentValues() {\n    this._currentValues = this.animators.reduce((results, animator) => {\n      let animation = results[animator.animation.name];\n\n      if (animation == null) {\n        animation = results[animator.animation.name] = {};\n      }\n\n      if (animation[animator.animation.property] == null) {\n        animation[animator.animation.property] = animator.animation.from;\n      }\n\n      return results;\n    }, {});\n  }\n\n  createInitialValues() {\n    this.animators.sort(sortDesc);\n\n    this._initialValues = this.animators.reduce((results, animator) => {\n      let animation = results[animator.animation.name];\n\n      if (animation == null) {\n        animation = results[animator.animation.name] = {};\n      }\n\n      animation[animator.animation.property] = animator.animation.from;\n\n      return results;\n    }, {});\n  }\n\n  applyInitialValues() {\n    Object.keys(this._currentValues).forEach((animationName) => {\n      Object.keys(this._currentValues[animationName]).forEach((property) => {\n        const currentValues = this._currentValues[animationName];\n        const initialValues = this._initialValues[animationName];\n\n        currentValues[property] = initialValues[property];\n      });\n    });\n  }\n\n  render(time) {\n    this.applyInitialValues();\n    const currentValues = this._currentValues;\n\n    // Animate the values that are less than the current time.\n    this.animators\n      .filter((animator) => {\n        return animator.animation.startAt <= time;\n      })\n      .forEach((animator) => {\n        const animation = currentValues[animator.animation.name];\n        animation[animator.animation.property] = animator.render(time);\n      });\n\n    this.animators\n      .filter((animator) => {\n        const min = Math.max(animator.animation.startAt, time);\n        const max = Math.min(animator.animation.endAt, time);\n\n        return min <= max;\n      })\n      .forEach((animator) => {\n        const animation = currentValues[animator.animation.name];\n        animation[animator.animation.property] = animator.render(time);\n      });\n\n    return this;\n  }\n\n  getCurrentValues() {\n    return this._currentValues;\n  }\n}\n"],"file":"Timeline.js"}