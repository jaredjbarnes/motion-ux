{"version":3,"sources":["../src/Timeline.js"],"names":["defaultClock","DefaultClock","repeatDirections","DEFAULT","ALTERNATE","states","FORWARD","REVERSE","STOPPED","sortDesc","animatorA","animatorB","animation","startAt","sortAsc","Timeline","animations","clock","duration","timeScale","repeatDirection","_timeScale","_progress","_duration","_lastTimestamp","_animationFrame","_iterations","_repeat","_repeatDirection","tick","bind","currentValues","initialValues","state","animators","map","Animator","Animation","createCurrentValues","createInitialValues","sort","reduce","results","animator","name","property","from","Object","keys","forEach","animationName","now","register","notify","type","timestamp","deltaTime","step","progress","seek","stop","unregister","lastProgress","getValuesAt","time","applyInitialValues","filter","render","min","Math","max","endAt","value","Observable"],"mappings":"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","sourcesContent":["import Observable from \"./Observable.js\";\nimport DefaultClock from \"./DefaultClock.js\";\nimport Animator from \"./Animator.js\";\nimport Animation from \"./Animation.js\";\n\nconst defaultClock = new DefaultClock();\n\nconst repeatDirections = {\n  DEFAULT: 0,\n  ALTERNATE: 1,\n};\n\nconst states = {\n  FORWARD: 1,\n  REVERSE: -1,\n  STOPPED: 0,\n};\n\nconst sortDesc = (animatorA, animatorB) => {\n  return animatorB.animation.startAt - animatorA.animation.startAt;\n};\n\nconst sortAsc = (animatorA, animatorB) => {\n  return animatorA.animation.startAt - animatorB.animation.startAt;\n};\n\nexport default class Timeline extends Observable {\n  static get repeatDirections() {\n    return repeatDirections;\n  }\n\n  static get states() {\n    return states;\n  }\n\n  constructor({\n    animations,\n    clock,\n    duration,\n    timeScale,\n    repeatDirection = Timeline.repeatDirections.DEFAULT,\n  }) {\n    super();\n    this._timeScale = 1;\n    this._progress = 0;\n    this._duration = 0;\n    this._lastTimestamp = 0;\n    this._animationFrame = null;\n    this._iterations = 0;\n    this._repeat = 1;\n    this._repeatDirection = repeatDirection;\n    this.tick = this.tick.bind(this);\n    this.currentValues = {};\n    this.initialValues = {};\n\n    this.clock = clock || defaultClock;\n    this.state = Timeline.states.STOPPED;\n    this.timeScale = timeScale;\n    this.duration = duration;\n\n    this.animators = animations.map(\n      (animation) => new Animator(new Animation(animation))\n    );\n\n    this.createCurrentValues();\n    this.createInitialValues();\n\n    // Sort by time.\n    this.animators.sort(sortAsc);\n  }\n\n  get progress() {\n    return this._progress;\n  }\n\n  get timeScale() {\n    return this._timeScale;\n  }\n\n  set timeScale(value) {\n    if (value > 0) {\n      this._timeScale = value;\n    }\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(value) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing. All Math blows up if the duration is \"0\".\n    if (value <= 0) {\n      value = 0.00001;\n    }\n\n    this._duration = value;\n  }\n\n  get repeat() {\n    return this._repeat;\n  }\n\n  set repeat(value) {\n    if (typeof value !== \"number\" && value > 0) {\n      return;\n    }\n\n    this._repeat = value;\n  }\n\n  get repeatDirection() {\n    return this._repeatDirection;\n  }\n\n  set repeatDirection(value) {\n    if ((value !== 0) & (value !== 1)) {\n      return;\n    }\n\n    this._repeatDirection = value;\n  }\n\n  createCurrentValues() {\n    this.currentValues = this.animators.reduce((results, animator) => {\n      let animation = results[animator.animation.name];\n\n      if (animation == null) {\n        animation = results[animator.animation.name] = {};\n      }\n\n      if (animation[animator.animation.property] == null) {\n        animation[animator.animation.property] = animator.animation.from;\n      }\n\n      return results;\n    }, {});\n  }\n\n  createInitialValues() {\n    this.animators.sort(sortDesc);\n\n    this.initialValues = this.animators.reduce((results, animator) => {\n      let animation = results[animator.animation.name];\n\n      if (animation == null) {\n        animation = results[animator.animation.name] = {};\n      }\n\n      animation[animator.animation.property] = animator.animation.from;\n\n      return results;\n    }, {});\n  }\n\n  applyInitialValues() {\n    Object.keys(this.currentValues).forEach((animationName) => {\n      Object.keys(this.currentValues[animationName]).forEach((property) => {\n        this.currentValues[animationName][property] = this.initialValues[\n          animationName\n        ][property];\n      });\n    });\n  }\n\n  play() {\n    if (this.state !== Timeline.states.FORWARD) {\n      this._lastTimestamp = this.clock.now();\n      this.state = Timeline.states.FORWARD;\n      this.clock.register(this.tick);\n\n      this.notify({\n        type: \"PLAYED\",\n      });\n    }\n  }\n\n  tick() {\n    const timestamp = this.clock.now();\n    const deltaTime = timestamp - this._lastTimestamp;\n    let step = (deltaTime / this.duration) * this._timeScale;\n\n    if (step > 1) {\n      step = 1;\n    }\n\n    if (deltaTime === 0) {\n      return;\n    }\n\n    if (this.state === Timeline.states.REVERSE) {\n      let progress = this._progress - step;\n      const repeatDirection = this.repeatDirection;\n      const ALTERNATE = Timeline.repeatDirections.ALTERNATE;\n\n      if (progress <= 0) {\n        this._iterations++;\n\n        if (this._iterations >= this._repeat) {\n          this.seek(0);\n          this.stop();\n          return;\n        }\n\n        if (repeatDirection === ALTERNATE) {\n          progress = progress * -1;\n          this.seek(progress);\n          this.state = Timeline.states.FORWARD;\n        } else {\n          progress = 1 + progress;\n          this.seek(progress);\n          this.state = Timeline.states.REVERSE;\n        }\n      } else {\n        this.seek(progress);\n      }\n    } else if (this.state === Timeline.states.FORWARD) {\n      let progress = this._progress + step;\n      const repeatDirection = this.repeatDirection;\n      const ALTERNATE = Timeline.repeatDirections.ALTERNATE;\n\n      if (progress >= 1) {\n        this._iterations++;\n\n        if (this._iterations >= this._repeat) {\n          this.seek(1);\n          this.stop();\n          return;\n        }\n\n        if (repeatDirection === ALTERNATE) {\n          progress = 1 - (progress - 1);\n          this.seek(progress);\n          this.state = Timeline.states.REVERSE;\n        } else {\n          progress = progress - 1;\n          this.seek(progress);\n          this.state = Timeline.states.FORWARD;\n        }\n      } else {\n        this.seek(progress);\n      }\n    }\n\n    this._lastTimestamp = timestamp;\n  }\n\n  stop() {\n    if (this.state !== Timeline.states.STOPPED) {\n      this.state = Timeline.states.STOPPED;\n      this.clock.unregister(this.tick);\n\n      this.notify({\n        type: \"STOPPED\",\n      });\n    }\n  }\n\n  reverse() {\n    if (this.state !== Timeline.states.REVERSE) {\n      this._lastTimestamp = this.clock.now();\n      this.state = Timeline.states.REVERSE;\n      this.clock.register(this.tick);\n\n      this.notify({\n        type: \"REVERSED\",\n      });\n    }\n  }\n\n  seek(progress) {\n    const lastProgress = this._progress;\n    this._progress = progress;\n\n    const animations = this.getValuesAt(progress);\n\n    this.notify({\n      type: \"RENDER\",\n      progress: progress,\n      lastProgress: lastProgress,\n      animations,\n    });\n  }\n\n  getValuesAt(time) {\n    this.applyInitialValues();\n    const results = this.currentValues;\n\n    // Animate the values that are less than the current time.\n    this.animators\n      .filter((animator) => {\n        return animator.animation.startAt <= time;\n      })\n      .forEach((animator) => {\n        const animation = results[animator.animation.name];\n        animation[animator.animation.property] = animator.render(time);\n      });\n\n    this.animators\n      .filter((animator) => {\n        const min = Math.max(animator.animation.startAt, time);\n        const max = Math.min(animator.animation.endAt, time);\n\n        return min <= max;\n      })\n      .forEach((animator) => {\n        const animation = results[animator.animation.name];\n        animation[animator.animation.property] = animator.render(time);\n      });\n\n    return results;\n  }\n\n  getCurrentValues() {\n    return this.currentValues;\n  }\n\n  dispose() {\n    this.stop();\n    super.dispose();\n  }\n}\n"],"file":"Timeline.js"}