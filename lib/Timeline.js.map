{"version":3,"sources":["../src/Timeline.js"],"names":["sortAsc","animatorA","animatorB","animation","startAt","Timeline","animations","animators","Map","_time","initialize","_currentValues","map","Animation","fromSimpleConfig","Animator","createCurrentValues","sort","reduce","results","animator","name","property","result","clone","currentValue","value","graph","graphHash","visitedMap","length","x","key","has","set","assignValue","time","forEach","render","saveCurrentValues"],"mappings":"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","sourcesContent":["import Animator from \"./Animator.js\";\nimport Animation from \"./Animation.js\";\n\nconst sortAsc = (animatorA, animatorB) => {\n  return animatorA.animation.startAt - animatorB.animation.startAt;\n};\n\nexport default class Timeline {\n  constructor(animations) {\n    this.animators = new Map();\n    this._time = 0;\n\n    this.initialize(animations);\n  }\n\n  initialize(animations) {\n    this._currentValues = {};\n\n    this.animators = animations\n      .map((animation) => {\n        if (animation instanceof Animation) {\n          return animation;\n        } else {\n          return Animation.fromSimpleConfig(animation);\n        }\n      })\n      .map((animation) => new Animator(animation));\n\n    this.createCurrentValues();\n\n    // Sort by time.\n    this.animators.sort(sortAsc);\n  }\n\n  createCurrentValues() {\n    this._currentValues = this.animators.reduce((results, animator) => {\n      const name = animator.animation.name;\n      const property = animator.animation.property;\n\n      let animation = results[name];\n\n      if (animation == null) {\n        animation = results[name] = {};\n      }\n\n      if (animation[property] == null) {\n        animation[property] = animator.animation.result.clone();\n      }\n\n      return results;\n    }, {});\n  }\n\n  assignValue(animation) {\n    const currentValue = this._currentValues[animation.name][\n      animation.property\n    ];\n\n    currentValue.value = animation.result.value;\n    currentValue.graph = animation.result.graph;\n    currentValue.graphHash = animation.result.graphHash;\n  }\n\n  saveCurrentValues() {\n    const visitedMap = new Map();\n    const animators = this.animators;\n    const length = animators.length;\n\n    // Assign all values at least once.\n    // This initials values beyond the time we are at.\n    for (let x = 0; x < length; x++) {\n      const animation = animators[x].animation;\n      const key = `${animation.name}|${animation.property}`;\n\n      if (!visitedMap.has(key)) {\n        visitedMap.set(key, true);\n        this.assignValue(animation);\n      }\n    }\n\n    // Assign if the value if the start at was before the time now.\n    // Since we have it sorted, the most current will win.\n    for (let x = 0; x < length; x++) {\n      const animation = animators[x].animation;\n\n      if (animation.startAt <= this._time) {\n        this.assignValue(animation);\n      }\n    }\n  }\n\n  render(time) {\n    this._time = time;\n    // Render all animations\n    this.animators.forEach((animator) => {\n      animator.render(time);\n    });\n\n    this.saveCurrentValues();\n\n    return this;\n  }\n\n  getCurrentValues() {\n    return this._currentValues;\n  }\n}\n"],"file":"Timeline.js"}