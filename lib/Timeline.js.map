{"version":3,"sources":["../src/Timeline.js"],"names":["defaultClock","DefaultClock","Timeline","Scrubber","repeatDirections","animations","duration","clock","animationOptions","render","bind","scrubber","_assertAnimations","_convertAnimations","_createAnimators","Array","isArray","Error","map","animation","TimelineOption","sort","a","b","startAt","animators","options","fromNode","toNode","values","parse","Cursor","from","to","error","ValuesNodeAnimator","play","reverse","stop","progress","seek","filter","animator","forEach","min","Math","max","endAt","target","name","observeTime","apply","arguments","observe","value","timeScale","repeat","repeatDirection"],"mappings":"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","sourcesContent":["import DefaultClock from \"./DefaultClock.js\";\nimport TimelineOption from \"./TimelineOption.js\";\nimport Scrubber from \"./Scrubber.js\";\nimport ValuesNodeAnimator from \"./animators/ValuesNodeAnimator.js\";\nimport values from \"./patterns/values.js\";\nimport { Cursor } from \"../node_modules/clarity-pattern-parser/src/index.js\";\n\nconst defaultClock = new DefaultClock();\n\nexport default class Timeline {\n  static get repeatDirections() {\n    return Scrubber.repeatDirections;\n  }\n\n  constructor({ animations, duration, clock = defaultClock }) {\n    this.clock = clock;\n    this.animations = animations;\n    this.animationOptions = [];\n    this.render = this.render.bind(this);\n    this.scrubber = new Scrubber({\n      clock,\n      duration,\n      render: this.render\n    });\n    this.duration = duration;\n\n    this._assertAnimations();\n    this._convertAnimations();\n    this._createAnimators();\n  }\n\n  _assertAnimations() {\n    if (!Array.isArray(this.animations)) {\n      throw new Error(\"Expected animations to be an array.\");\n    }\n  }\n\n  _convertAnimations() {\n    this.animationOptions = this.animations.map(\n      animation => new TimelineOption(animation)\n    );\n  }\n\n  _createAnimators() {\n    this.animationOptions.sort((a, b) => {\n      return a.startAt - b.startAt;\n    });\n\n    this.animators = this.animationOptions.map(options => {\n      let fromNode;\n      let toNode;\n\n      try {\n        fromNode = values.parse(new Cursor(options.from));\n        toNode = values.parse(new Cursor(options.to));\n      } catch (error) {\n        throw new Error(\n          `Parse Error: could not parse css ${options.to}, or ${options.from}`\n        );\n      }\n\n      return new ValuesNodeAnimator({\n        ...options,\n        fromNode,\n        toNode\n      });\n    });\n  }\n\n  get duration() {\n    return this.scrubber.duration;\n  }\n\n  set duration(value) {\n    this.scrubber.duration = value;\n  }\n\n  get timeScale() {\n    return this.scrubber.timeScale;\n  }\n\n  set timeScale(value) {\n    this.scrubber.timeScale = value;\n  }\n\n  get repeat() {\n    return this.scrubber.repeat;\n  }\n\n  set repeat(value) {\n    this.scrubber.repeat = value;\n  }\n\n  get repeatDirection() {\n    return this.scrubber.repeatDirection;\n  }\n\n  set repeatDirection(value) {\n    this.scrubber.repeatDirection = value;\n  }\n\n  play() {\n    this.scrubber.play();\n  }\n\n  reverse() {\n    this.scrubber.reverse();\n  }\n\n  stop() {\n    this.scrubber.stop();\n  }\n\n  seek(progress) {\n    this.scrubber.seek(progress);\n  }\n\n  render() {\n    const progress = this.scrubber.progress;\n\n    this.animators\n      .filter(animator => {\n        return animator.options.startAt <= progress;\n      })\n      .forEach(animator =>\n        animator.render(this.scrubber.progress, this.duration)\n      );\n\n    this.animators\n      .filter(animator => {\n        const min = Math.max(animator.options.startAt, progress);\n        const max = Math.min(animator.options.endAt, progress);\n\n        return min <= max;\n      })\n      .forEach(\n        animator =>\n          (animator.options.target[animator.options.name] = animator.render(\n            this.scrubber.progress,\n            this.duration\n          ))\n      );\n  }\n\n  observeTime() {\n    this.scrubber.observeTime.apply(this.scrubber, arguments);\n  }\n\n  observe() {\n    this.scrubber.observe.apply(this.scrubber, arguments);\n  }\n}\n"],"file":"Timeline.js"}