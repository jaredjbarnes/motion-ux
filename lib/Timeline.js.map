{"version":3,"sources":["../src/Timeline.js"],"names":["defaultClock","DefaultClock","repeatDirections","DEFAULT","ALTERNATE","states","FORWARD","REVERSE","STOPPED","Scrubber","animations","clock","duration","timeScale","repeatDirection","_timeScale","_progress","_duration","_lastTimestamp","_animationFrame","_iterations","_repeat","_repeatDirection","tick","bind","state","animators","map","animation","Animator","Animation","notify","type","now","register","timestamp","deltaTime","step","progress","seek","stop","unregister","lastProgress","render","values","getValuesAt","results","filter","animator","name","property","from","startAt","forEach","min","Math","max","endAt","value","Observable"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAG,IAAIC,qBAAJ,EAArB;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAE,CADc;AAEvBC,EAAAA,SAAS,EAAE;AAFY,CAAzB;AAKA,IAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,CADI;AAEbC,EAAAA,OAAO,EAAE,CAAC,CAFG;AAGbC,EAAAA,OAAO,EAAE;AAHI,CAAf;;IAMqBC,Q;;;;;;;wBACW;AAC5B,aAAOP,gBAAP;AACD;;;wBAEmB;AAClB,aAAOG,MAAP;AACD;;;AAED,0BAMG;AAAA;;AAAA,QALDK,UAKC,QALDA,UAKC;AAAA,QAJDC,KAIC,QAJDA,KAIC;AAAA,QAHDC,QAGC,QAHDA,QAGC;AAAA,QAFDC,SAEC,QAFDA,SAEC;AAAA,oCADDC,eACC;AAAA,QADDA,eACC,qCADiBL,QAAQ,CAACP,gBAAT,CAA0BC,OAC3C;;AAAA;;AACD;AACA,UAAKY,UAAL,GAAkB,CAAlB;AACA,UAAKC,SAAL,GAAiB,CAAjB;AACA,UAAKC,SAAL,GAAiB,CAAjB;AACA,UAAKC,cAAL,GAAsB,CAAtB;AACA,UAAKC,eAAL,GAAuB,IAAvB;AACA,UAAKC,WAAL,GAAmB,CAAnB;AACA,UAAKC,OAAL,GAAe,CAAf;AACA,UAAKC,gBAAL,GAAwBR,eAAxB;AACA,UAAKS,IAAL,GAAY,MAAKA,IAAL,CAAUC,IAAV,+BAAZ;AAEA,UAAKb,KAAL,GAAaA,KAAK,IAAIX,YAAtB;AACA,UAAKyB,KAAL,GAAahB,QAAQ,CAACJ,MAAT,CAAgBG,OAA7B;AACA,UAAKK,SAAL,GAAiBA,SAAjB;AACA,UAAKD,QAAL,GAAgBA,QAAhB;AAEA,UAAKc,SAAL,GAAiBhB,UAAU,CAACiB,GAAX,CACf,UAACC,SAAD;AAAA,aAAe,IAAIC,iBAAJ,CAAa,IAAIC,kBAAJ,CAAcF,SAAd,CAAb,CAAf;AAAA,KADe,CAAjB;AAjBC;AAoBF;;;;2BAyDM;AACL,UAAI,KAAKH,KAAL,KAAehB,QAAQ,CAACJ,MAAT,CAAgBC,OAAnC,EAA4C;AAC1C,aAAKyB,MAAL,CAAY;AACVC,UAAAA,IAAI,EAAE;AADI,SAAZ;AAIA,aAAKd,cAAL,GAAsB,KAAKP,KAAL,CAAWsB,GAAX,EAAtB;AACA,aAAKR,KAAL,GAAahB,QAAQ,CAACJ,MAAT,CAAgBC,OAA7B;AACA,aAAKK,KAAL,CAAWuB,QAAX,CAAoB,KAAKX,IAAzB;AACD;AACF;;;2BAEM;AACL,UAAMY,SAAS,GAAG,KAAKxB,KAAL,CAAWsB,GAAX,EAAlB;AACA,UAAMG,SAAS,GAAGD,SAAS,GAAG,KAAKjB,cAAnC;AACA,UAAImB,IAAI,GAAID,SAAS,GAAG,KAAKxB,QAAlB,GAA8B,KAAKG,UAA9C;;AAEA,UAAIsB,IAAI,GAAG,CAAX,EAAc;AACZA,QAAAA,IAAI,GAAG,CAAP;AACD;;AAED,UAAID,SAAS,KAAK,CAAlB,EAAqB;AACnB;AACD;;AAED,UAAI,KAAKX,KAAL,KAAehB,QAAQ,CAACJ,MAAT,CAAgBE,OAAnC,EAA4C;AAC1C,YAAI+B,QAAQ,GAAG,KAAKtB,SAAL,GAAiBqB,IAAhC;AACA,YAAMvB,eAAe,GAAG,KAAKA,eAA7B;AACA,YAAMV,SAAS,GAAGK,QAAQ,CAACP,gBAAT,CAA0BE,SAA5C;;AAEA,YAAIkC,QAAQ,IAAI,CAAhB,EAAmB;AACjB,eAAKlB,WAAL;;AAEA,cAAI,KAAKA,WAAL,IAAoB,KAAKC,OAA7B,EAAsC;AACpC,iBAAKkB,IAAL,CAAU,CAAV;AACA,iBAAKC,IAAL;AACA;AACD;;AAED,cAAI1B,eAAe,KAAKV,SAAxB,EAAmC;AACjCkC,YAAAA,QAAQ,GAAGA,QAAQ,GAAG,CAAC,CAAvB;AACA,iBAAKC,IAAL,CAAUD,QAAV;AACA,iBAAKb,KAAL,GAAahB,QAAQ,CAACJ,MAAT,CAAgBC,OAA7B;AACD,WAJD,MAIO;AACLgC,YAAAA,QAAQ,GAAG,IAAIA,QAAf;AACA,iBAAKC,IAAL,CAAUD,QAAV;AACA,iBAAKb,KAAL,GAAahB,QAAQ,CAACJ,MAAT,CAAgBE,OAA7B;AACD;AACF,SAlBD,MAkBO;AACL,eAAKgC,IAAL,CAAUD,QAAV;AACD;AACF,OA1BD,MA0BO,IAAI,KAAKb,KAAL,KAAehB,QAAQ,CAACJ,MAAT,CAAgBC,OAAnC,EAA4C;AACjD,YAAIgC,SAAQ,GAAG,KAAKtB,SAAL,GAAiBqB,IAAhC;;AACA,YAAMvB,gBAAe,GAAG,KAAKA,eAA7B;AACA,YAAMV,UAAS,GAAGK,QAAQ,CAACP,gBAAT,CAA0BE,SAA5C;;AAEA,YAAIkC,SAAQ,IAAI,CAAhB,EAAmB;AACjB,eAAKlB,WAAL;;AAEA,cAAI,KAAKA,WAAL,IAAoB,KAAKC,OAA7B,EAAsC;AACpC,iBAAKkB,IAAL,CAAU,CAAV;AACA,iBAAKC,IAAL;AACA;AACD;;AAED,cAAI1B,gBAAe,KAAKV,UAAxB,EAAmC;AACjCkC,YAAAA,SAAQ,GAAG,KAAKA,SAAQ,GAAG,CAAhB,CAAX;AACA,iBAAKC,IAAL,CAAUD,SAAV;AACA,iBAAKb,KAAL,GAAahB,QAAQ,CAACJ,MAAT,CAAgBE,OAA7B;AACD,WAJD,MAIO;AACL+B,YAAAA,SAAQ,GAAGA,SAAQ,GAAG,CAAtB;AACA,iBAAKC,IAAL,CAAUD,SAAV;AACA,iBAAKb,KAAL,GAAahB,QAAQ,CAACJ,MAAT,CAAgBC,OAA7B;AACD;AACF,SAlBD,MAkBO;AACL,eAAKiC,IAAL,CAAUD,SAAV;AACD;AACF;;AAED,WAAKpB,cAAL,GAAsBiB,SAAtB;AACD;;;2BAEM;AACL,UAAI,KAAKV,KAAL,KAAehB,QAAQ,CAACJ,MAAT,CAAgBG,OAAnC,EAA4C;AAC1C,aAAKuB,MAAL,CAAY;AACVC,UAAAA,IAAI,EAAE;AADI,SAAZ;AAIA,aAAKP,KAAL,GAAahB,QAAQ,CAACJ,MAAT,CAAgBG,OAA7B;AACA,aAAKG,KAAL,CAAW8B,UAAX,CAAsB,KAAKlB,IAA3B;AACD;AACF;;;8BAES;AACR,UAAI,KAAKE,KAAL,KAAehB,QAAQ,CAACJ,MAAT,CAAgBE,OAAnC,EAA4C;AAC1C,aAAKwB,MAAL,CAAY;AACVC,UAAAA,IAAI,EAAE;AADI,SAAZ;AAIA,aAAKd,cAAL,GAAsB,KAAKP,KAAL,CAAWsB,GAAX,EAAtB;AACA,aAAKR,KAAL,GAAahB,QAAQ,CAACJ,MAAT,CAAgBE,OAA7B;AACA,aAAKI,KAAL,CAAWuB,QAAX,CAAoB,KAAKX,IAAzB;AACD;AACF;;;yBAEIe,Q,EAAU;AACb,UAAMI,YAAY,GAAG,KAAK1B,SAA1B;AACA,WAAKA,SAAL,GAAiBsB,QAAjB;AAEA,UAAM5B,UAAU,GAAG,KAAKiC,MAAL,EAAnB;AAEA,WAAKZ,MAAL,CAAY;AACVC,QAAAA,IAAI,EAAE,QADI;AAEVM,QAAAA,QAAQ,EAAEA,QAFA;AAGVI,QAAAA,YAAY,EAAEA,YAHJ;AAIVhC,QAAAA,UAAU,EAAVA;AAJU,OAAZ;AAMD;;;6BAEQ;AACP,UAAM4B,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMM,MAAM,GAAG,KAAKC,WAAL,CAAiBP,QAAjB,CAAf;AACA,aAAOM,MAAP;AACD;;;gCAEWN,Q,EAAU;AACpB,UAAMQ,OAAO,GAAG,EAAhB;AAEA,WAAKpB,SAAL,CACGqB,MADH,CACU,UAACC,QAAD,EAAc;AACpB,YAAIpB,SAAS,GAAGkB,OAAO,CAACE,QAAQ,CAACpB,SAAT,CAAmBqB,IAApB,CAAvB;;AAEA,YAAIrB,SAAS,IAAI,IAAjB,EAAuB;AACrBA,UAAAA,SAAS,GAAGkB,OAAO,CAACE,QAAQ,CAACpB,SAAT,CAAmBqB,IAApB,CAAP,GAAmC,EAA/C;AACD;;AAED,YAAIrB,SAAS,CAACoB,QAAQ,CAACpB,SAAT,CAAmBsB,QAApB,CAAT,IAA0C,IAA9C,EAAoD;AAClDtB,UAAAA,SAAS,CAACoB,QAAQ,CAACpB,SAAT,CAAmBsB,QAApB,CAAT,GAAyCF,QAAQ,CAACpB,SAAT,CAAmBuB,IAA5D;AACD;;AAED,eAAOH,QAAQ,CAACpB,SAAT,CAAmBwB,OAAnB,IAA8Bd,QAArC;AACD,OAbH,EAcGe,OAdH,CAcW,UAACL,QAAD,EAAc;AACrB,YAAMpB,SAAS,GAAGkB,OAAO,CAACE,QAAQ,CAACpB,SAAT,CAAmBqB,IAApB,CAAzB;AACArB,QAAAA,SAAS,CAACoB,QAAQ,CAACpB,SAAT,CAAmBsB,QAApB,CAAT,GAAyCF,QAAQ,CAACL,MAAT,CAAgBL,QAAhB,CAAzC;AACD,OAjBH;AAmBA,WAAKZ,SAAL,CACGqB,MADH,CACU,UAACC,QAAD,EAAc;AACpB,YAAMM,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASR,QAAQ,CAACpB,SAAT,CAAmBwB,OAA5B,EAAqCd,QAArC,CAAZ;AACA,YAAMkB,GAAG,GAAGD,IAAI,CAACD,GAAL,CAASN,QAAQ,CAACpB,SAAT,CAAmB6B,KAA5B,EAAmCnB,QAAnC,CAAZ;AAEA,eAAOgB,GAAG,IAAIE,GAAd;AACD,OANH,EAOGH,OAPH,CAOW,UAACL,QAAD,EAAc;AACrB,YAAMpB,SAAS,GAAGkB,OAAO,CAACE,QAAQ,CAACpB,SAAT,CAAmBqB,IAApB,CAAzB;AACArB,QAAAA,SAAS,CAACoB,QAAQ,CAACpB,SAAT,CAAmBsB,QAApB,CAAT,GAAyCF,QAAQ,CAACL,MAAT,CAAgBL,QAAhB,CAAzC;AACD,OAVH;AAYA,aAAOQ,OAAP;AACD;;;uCAEkB;AACjB,aAAO,KAAKD,WAAL,CAAiB,KAAKP,QAAtB,CAAP;AACD;;;8BAES;AACR,WAAKE,IAAL;;AACA;AACD;;;wBAhOc;AACb,aAAO,KAAKxB,SAAZ;AACD;;;wBAEe;AACd,aAAO,KAAKD,UAAZ;AACD,K;sBAEa2C,K,EAAO;AACnB,UAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,aAAK3C,UAAL,GAAkB2C,KAAlB;AACD;AACF;;;wBAEc;AACb,aAAO,KAAKzC,SAAZ;AACD,K;sBAEYyC,K,EAAO;AAClB,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,QAAAA,KAAK,GAAG,CAAR;AACD,OAHiB,CAKlB;;;AACA,UAAIA,KAAK,IAAI,CAAb,EAAgB;AACdA,QAAAA,KAAK,GAAG,OAAR;AACD;;AAED,WAAKzC,SAAL,GAAiByC,KAAjB;AACD;;;wBAEY;AACX,aAAO,KAAKrC,OAAZ;AACD,K;sBAEUqC,K,EAAO;AAChB,UAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAAzC,EAA4C;AAC1C;AACD;;AAED,WAAKrC,OAAL,GAAeqC,KAAf;AACD;;;wBAEqB;AACpB,aAAO,KAAKpC,gBAAZ;AACD,K;sBAEmBoC,K,EAAO;AACzB,UAAKA,KAAK,KAAK,CAAX,GAAiBA,KAAK,KAAK,CAA/B,EAAmC;AACjC;AACD;;AAED,WAAKpC,gBAAL,GAAwBoC,KAAxB;AACD;;;;EA1FmCC,oB","sourcesContent":["import Observable from \"./Observable.js\";\nimport DefaultClock from \"./DefaultClock.js\";\nimport Animator from \"./Animator.js\";\nimport Animation from \"./Animation.js\";\n\nconst defaultClock = new DefaultClock();\n\nconst repeatDirections = {\n  DEFAULT: 0,\n  ALTERNATE: 1,\n};\n\nconst states = {\n  FORWARD: 1,\n  REVERSE: -1,\n  STOPPED: 0,\n};\n\nexport default class Scrubber extends Observable {\n  static get repeatDirections() {\n    return repeatDirections;\n  }\n\n  static get states() {\n    return states;\n  }\n\n  constructor({\n    animations,\n    clock,\n    duration,\n    timeScale,\n    repeatDirection = Scrubber.repeatDirections.DEFAULT,\n  }) {\n    super();\n    this._timeScale = 1;\n    this._progress = 0;\n    this._duration = 0;\n    this._lastTimestamp = 0;\n    this._animationFrame = null;\n    this._iterations = 0;\n    this._repeat = 1;\n    this._repeatDirection = repeatDirection;\n    this.tick = this.tick.bind(this);\n\n    this.clock = clock || defaultClock;\n    this.state = Scrubber.states.STOPPED;\n    this.timeScale = timeScale;\n    this.duration = duration;\n\n    this.animators = animations.map(\n      (animation) => new Animator(new Animation(animation))\n    );\n  }\n\n  get progress() {\n    return this._progress;\n  }\n\n  get timeScale() {\n    return this._timeScale;\n  }\n\n  set timeScale(value) {\n    if (value > 0) {\n      this._timeScale = value;\n    }\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(value) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing. All Math blows up if the duration is \"0\".\n    if (value <= 0) {\n      value = 0.00001;\n    }\n\n    this._duration = value;\n  }\n\n  get repeat() {\n    return this._repeat;\n  }\n\n  set repeat(value) {\n    if (typeof value !== \"number\" && value > 0) {\n      return;\n    }\n\n    this._repeat = value;\n  }\n\n  get repeatDirection() {\n    return this._repeatDirection;\n  }\n\n  set repeatDirection(value) {\n    if ((value !== 0) & (value !== 1)) {\n      return;\n    }\n\n    this._repeatDirection = value;\n  }\n\n  play() {\n    if (this.state !== Scrubber.states.FORWARD) {\n      this.notify({\n        type: \"PLAYED\",\n      });\n\n      this._lastTimestamp = this.clock.now();\n      this.state = Scrubber.states.FORWARD;\n      this.clock.register(this.tick);\n    }\n  }\n\n  tick() {\n    const timestamp = this.clock.now();\n    const deltaTime = timestamp - this._lastTimestamp;\n    let step = (deltaTime / this.duration) * this._timeScale;\n\n    if (step > 1) {\n      step = 1;\n    }\n\n    if (deltaTime === 0) {\n      return;\n    }\n\n    if (this.state === Scrubber.states.REVERSE) {\n      let progress = this._progress - step;\n      const repeatDirection = this.repeatDirection;\n      const ALTERNATE = Scrubber.repeatDirections.ALTERNATE;\n\n      if (progress <= 0) {\n        this._iterations++;\n\n        if (this._iterations >= this._repeat) {\n          this.seek(0);\n          this.stop();\n          return;\n        }\n\n        if (repeatDirection === ALTERNATE) {\n          progress = progress * -1;\n          this.seek(progress);\n          this.state = Scrubber.states.FORWARD;\n        } else {\n          progress = 1 + progress;\n          this.seek(progress);\n          this.state = Scrubber.states.REVERSE;\n        }\n      } else {\n        this.seek(progress);\n      }\n    } else if (this.state === Scrubber.states.FORWARD) {\n      let progress = this._progress + step;\n      const repeatDirection = this.repeatDirection;\n      const ALTERNATE = Scrubber.repeatDirections.ALTERNATE;\n\n      if (progress >= 1) {\n        this._iterations++;\n\n        if (this._iterations >= this._repeat) {\n          this.seek(1);\n          this.stop();\n          return;\n        }\n\n        if (repeatDirection === ALTERNATE) {\n          progress = 1 - (progress - 1);\n          this.seek(progress);\n          this.state = Scrubber.states.REVERSE;\n        } else {\n          progress = progress - 1;\n          this.seek(progress);\n          this.state = Scrubber.states.FORWARD;\n        }\n      } else {\n        this.seek(progress);\n      }\n    }\n\n    this._lastTimestamp = timestamp;\n  }\n\n  stop() {\n    if (this.state !== Scrubber.states.STOPPED) {\n      this.notify({\n        type: \"STOPPED\",\n      });\n\n      this.state = Scrubber.states.STOPPED;\n      this.clock.unregister(this.tick);\n    }\n  }\n\n  reverse() {\n    if (this.state !== Scrubber.states.REVERSE) {\n      this.notify({\n        type: \"REVERSED\",\n      });\n\n      this._lastTimestamp = this.clock.now();\n      this.state = Scrubber.states.REVERSE;\n      this.clock.register(this.tick);\n    }\n  }\n\n  seek(progress) {\n    const lastProgress = this._progress;\n    this._progress = progress;\n\n    const animations = this.render();\n\n    this.notify({\n      type: \"RENDER\",\n      progress: progress,\n      lastProgress: lastProgress,\n      animations,\n    });\n  }\n\n  render() {\n    const progress = this.progress;\n    const values = this.getValuesAt(progress);\n    return values;\n  }\n\n  getValuesAt(progress) {\n    const results = {};\n\n    this.animators\n      .filter((animator) => {\n        let animation = results[animator.animation.name];\n\n        if (animation == null) {\n          animation = results[animator.animation.name] = {};\n        }\n\n        if (animation[animator.animation.property] == null) {\n          animation[animator.animation.property] = animator.animation.from;\n        }\n\n        return animator.animation.startAt <= progress;\n      })\n      .forEach((animator) => {\n        const animation = results[animator.animation.name];\n        animation[animator.animation.property] = animator.render(progress);\n      });\n\n    this.animators\n      .filter((animator) => {\n        const min = Math.max(animator.animation.startAt, progress);\n        const max = Math.min(animator.animation.endAt, progress);\n\n        return min <= max;\n      })\n      .forEach((animator) => {\n        const animation = results[animator.animation.name];\n        animation[animator.animation.property] = animator.render(progress);\n      });\n\n    return results;\n  }\n\n  getCurrentValues() {\n    return this.getValuesAt(this.progress);\n  }\n\n  dispose() {\n    this.stop();\n    super.dispose();\n  }\n}\n"],"file":"Timeline.js"}