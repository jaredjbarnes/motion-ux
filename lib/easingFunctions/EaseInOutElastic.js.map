{"version":3,"sources":["../../src/easingFunctions/EaseInOutElastic.js"],"names":["EaseInOutElastic","tension","func","t","b","c","d","s","p","a","Math","abs","PI","asin","pow","sin","FunctionEasing"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;IAEqBA,gB;;;;;AACnB,4BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,QAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAO;AAClB,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,CAAC,GAAG,OAAR;AACA,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,CAAC,GAAGJ,CAAR;AAEA,UAAIF,CAAC,IAAI,CAAT,EAAY,OAAOC,CAAP;AACZ,UAAI,CAACD,CAAC,IAAIG,CAAC,GAAG,CAAV,KAAgB,CAApB,EAAuB,OAAOF,CAAC,GAAGC,CAAX;AACvB,UAAI,CAACG,CAAL,EAAQA,CAAC,GAAGF,CAAC,IAAI,MAAM,MAAKL,OAAf,CAAL;;AACR,UAAIQ,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASN,CAAT,CAAR,EAAqB;AACnBI,QAAAA,CAAC,GAAGJ,CAAJ;AACA,YAAIE,CAAC,GAAGC,CAAC,GAAG,CAAZ;AACD,OAHD,MAGO,IAAID,CAAC,GAAIC,CAAC,IAAI,IAAIE,IAAI,CAACE,EAAb,CAAF,GAAsBF,IAAI,CAACG,IAAL,CAAUR,CAAC,GAAGI,CAAd,CAA9B;;AACP,UAAIN,CAAC,GAAG,CAAR,EACE,OACE,CAAC,GAAD,IACGM,CAAC,GACAC,IAAI,CAACI,GAAL,CAAS,CAAT,EAAY,MAAMX,CAAC,IAAI,CAAX,CAAZ,CADD,GAECO,IAAI,CAACK,GAAL,CAAU,CAACZ,CAAC,GAAGG,CAAJ,GAAQC,CAAT,KAAe,IAAIG,IAAI,CAACE,EAAxB,CAAD,GAAgCJ,CAAzC,CAHJ,IAIAJ,CALF;AAOF,aACEK,CAAC,GACCC,IAAI,CAACI,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,IAAOX,CAAC,IAAI,CAAZ,CAAZ,CADF,GAEEO,IAAI,CAACK,GAAL,CAAU,CAACZ,CAAC,GAAGG,CAAJ,GAAQC,CAAT,KAAe,IAAIG,IAAI,CAACE,EAAxB,CAAD,GAAgCJ,CAAzC,CAFF,GAGE,GAHF,GAIAH,CAJA,GAKAD,CANF;AAQD,KA/BD;;AAiCA,0FAAMF,IAAN;AACA,UAAKD,OAAL,GAAeA,OAAO,KAAK,QAAZ,GAAuBA,OAAvB,GAAiC,CAAhD;AAnCmB;AAoCpB;;;EArC2Ce,wB","sourcesContent":["import FunctionEasing from \"../FunctionEasing.js\";\n\nexport default class EaseInOutElastic extends FunctionEasing {\n  constructor(tension) {\n    const func = (t) => {\n      var b = 0;\n      var c = 1;\n      var d = 1;\n      var s = 1.70158;\n      var p = 0;\n      var a = c;\n\n      if (t == 0) return b;\n      if ((t /= d / 2) == 2) return b + c;\n      if (!p) p = d * (0.3 / this.tension);\n      if (a < Math.abs(c)) {\n        a = c;\n        var s = p / 4;\n      } else var s = (p / (2 * Math.PI)) * Math.asin(c / a);\n      if (t < 1)\n        return (\n          -0.5 *\n            (a *\n              Math.pow(2, 10 * (t -= 1)) *\n              Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\n          b\n        );\n      return (\n        a *\n          Math.pow(2, -10 * (t -= 1)) *\n          Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\n          0.5 +\n        c +\n        b\n      );\n    };\n\n    super(func);\n    this.tension = tension === \"number\" ? tension : 1;\n  }\n}\n"],"file":"EaseInOutElastic.js"}