{"version":3,"sources":["../../src/animators/FunctionAnimator.js"],"names":["functionRegEx","FunctionAnimator","options","target","progress","value","duration","functions","unit","change","fromFunctions","toFunctions","parseFromFunctions","parseToFunctions","assertValues","assignAnimator","result","lastIndex","exec","from","functionName","trim","fromValues","toValues","animators","values","split","map","to","functionData","Error","Object","keys","forEach","length","fromValue","index","toValue","animationOptions","AnimationOptions","name","toString","startAt","endAt","easing","ColorAnimator","isMatch","UnitAnimator","UnitArrayAnimator","animator","render","join","isMatchWithFrom","test","isMatchWithTo"],"mappings":"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","sourcesContent":["import ColorAnimator from \"./ColorAnimator.js\";\nimport AnimationOptions from \"../AnimationOptions.js\";\nimport UnitAnimator from \"./UnitAnimator.js\";\nimport UnitArrayAnimator from \"./UnitArrayAnimator.js\";\n\nconst functionRegEx = /(.*?)\\((.+?)\\)/g;\n\nexport default class FunctionAnimator {\n  constructor(options) {\n    this.target = options.target;\n    this.options = options;\n    this.progress = null;\n    this.value = null;\n    this.duration = null;\n    this.functions = null;\n    this.unit = null;\n    this.change = null;\n    this.fromFunctions = null;\n    this.toFunctions = null;\n\n    this.parseFromFunctions();\n    this.parseToFunctions();\n    this.assertValues();\n    this.assignAnimator();\n  }\n\n  parseFromFunctions() {\n    let result;\n    this.functions = {};\n\n    functionRegEx.lastIndex = 0;\n    while ((result = functionRegEx.exec(this.options.from))) {\n      const functionName = result[1].trim();\n\n      this.functions[functionName] = {\n        fromValues: null,\n        toValues: null,\n        animators: null,\n        values: []\n      };\n\n      this.functions[functionName].fromValues = result[2]\n        .split(\",\")\n        .map(value => value.trim());\n    }\n  }\n\n  parseToFunctions() {\n    let result;\n\n    functionRegEx.lastIndex = 0;\n    while ((result = functionRegEx.exec(this.options.to))) {\n      const functionName = result[1].trim();\n      const functionData = this.functions[functionName];\n\n      if (functionData == null) {\n        throw new Error(\n          `Couldn't find corresponding from function with name: \"${functionName}\"`\n        );\n      }\n\n      functionData.toValues = result[2].split(\",\").map(value => value.trim());\n    }\n  }\n\n  assertValues() {\n    Object.keys(this.functions).forEach(functionName => {\n      const { toValues, fromValues } = this.functions[functionName];\n\n      if (toValues.length !== fromValues.length) {\n        throw new Error(\n          \"The 'from' arguments have a different length than the 'to' arguments.\"\n        );\n      }\n    });\n  }\n\n  assignAnimator() {\n    Object.keys(this.functions).forEach(functionName => {\n      const functionData = this.functions[functionName];\n\n      functionData.animators = functionData.fromValues.map(\n        (fromValue, index) => {\n          const toValue = functionData.toValues[index];\n\n          if (fromValue == null || fromValue === \"\") {\n            throw new Error(\n              `Invalid function arguments: ${this.options.from}.`\n            );\n          }\n\n          if (toValue == null || toValue === \"\") {\n            throw new Error(\n              `Invalid function arguments: ${this.options.to}.`\n            );\n          }\n\n          const animationOptions = new AnimationOptions({\n            name: index.toString(),\n            target: functionData.values,\n            from: fromValue,\n            to: toValue,\n            startAt: this.options.startAt,\n            endAt: this.options.endAt,\n            easing: this.options.easing\n          });\n\n          if (\n            ColorAnimator.isMatch(animationOptions) &&\n            ColorAnimator.isMatch(animationOptions)\n          ) {\n            return new ColorAnimator(animationOptions);\n          }\n\n          if (\n            UnitAnimator.isMatch(animationOptions) &&\n            UnitAnimator.isMatch(animationOptions)\n          ) {\n            return new UnitAnimator(animationOptions);\n          }\n\n          if (\n            UnitArrayAnimator.isMatch(animationOptions) &&\n            UnitArrayAnimator.isMatch(animationOptions)\n          ) {\n            return new UnitArrayAnimator(animationOptions);\n          }\n        }\n      );\n    });\n  }\n\n  render(progress, duration) {\n    const value = Object.keys(this.functions)\n      .map(functionName => {\n        const functionData = this.functions[functionName];\n\n        functionData.animators.map((animator, index) => {\n          animator.render(progress, duration);\n        });\n\n        return `${functionName}(${functionData.values.join(\", \")})`;\n      })\n      .join(\" \");\n\n    this.target[this.options.name] = value;\n  }\n\n  toString() {\n    return this.value;\n  }\n\n  static isMatch(options) {\n    functionRegEx.lastIndex = 0;\n    const isMatchWithFrom = functionRegEx.test(options.from);\n    functionRegEx.lastIndex = 0;\n    const isMatchWithTo = functionRegEx.test(options.to);\n\n    return isMatchWithFrom && isMatchWithTo;\n  }\n}\n"],"file":"FunctionAnimator.js"}