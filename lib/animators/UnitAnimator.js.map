{"version":3,"sources":["../../src/animators/UnitAnimator.js"],"names":["UnitAnimator","options","target","progress","value","duration","fromValue","toValue","unit","change","parseFromValue","parseToValue","calculateChange","parseUnit","startAt","name","from","endAt","to","calculateProgress","toString","unitRegEx","lastIndex","Number","exec","valueOf","toUnit","fromUnit","Error","easingProgress","easing","test"],"mappings":"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","sourcesContent":["import unitRegEx from \"./unitRegEx.js\";\n\nexport default class UnitAnimator {\n  constructor(options) {\n    this.target = options.target;\n    this.options = options;\n    this.progress = null;\n    this.value = null;\n    this.duration = null;\n    this.fromValue = null;\n    this.toValue = null;\n    this.unit = null;\n    this.change = null;\n\n    this.parseFromValue();\n    this.parseToValue();\n    this.calculateChange();\n    this.parseUnit();\n  }\n\n  render(progress, duration) {\n    this.progress = progress;\n    this.duration = duration;\n\n    if (progress <= this.options.startAt) {\n      this.target[this.options.name] = this.options.from;\n      return;\n    }\n\n    if (progress >= this.options.endAt) {\n      this.target[this.options.name] = this.options.to;\n      return;\n    }\n\n    this.calculateProgress();\n    const value = this.toString();\n    this.target[this.options.name] = value;\n  }\n\n  parseFromValue() {\n    if (this.fromValue == null) {\n      unitRegEx.lastIndex = 0;\n      this.fromValue = new Number(\n        unitRegEx.exec(this.options.from)[1]\n      ).valueOf();\n    }\n  }\n\n  parseToValue() {\n    if (this.toValue == null) {\n      unitRegEx.lastIndex = 0;\n      this.toValue = new Number(unitRegEx.exec(this.options.to)[1]).valueOf();\n    }\n  }\n\n  parseUnit() {\n    if (this.unit == null) {\n      unitRegEx.lastIndex = 0;\n      const toUnit = unitRegEx.exec(this.options.to)[2];\n\n      unitRegEx.lastIndex = 0;\n      const fromUnit = unitRegEx.exec(this.options.from)[2];\n\n      if (toUnit !== fromUnit) {\n        throw new Error(\n          `The \"from\" and \"to\" values of \"${this.options.name}\" are not the same unit type.`\n        );\n      }\n\n      this.unit = toUnit || \"\";\n    }\n  }\n\n  calculateChange() {\n    if (this.change == null) {\n      this.change = this.toValue - this.fromValue;\n    }\n  }\n\n  calculateProgress() {\n    const progress = this.progress - this.options.startAt;\n    const duration = this.options.endAt - this.options.startAt;\n\n    const easingProgress = this.options.easing(progress, 0, 1, duration);\n    this.value = this.fromValue + easingProgress * this.change;\n  }\n\n  toString() {\n    return `${this.value}${this.unit}`;\n  }\n\n  static isMatch(options) {\n    unitRegEx.lastIndex = 0;\n    return unitRegEx.test(options.to) && unitRegEx.test(options.from);\n  }\n}\n"],"file":"UnitAnimator.js"}