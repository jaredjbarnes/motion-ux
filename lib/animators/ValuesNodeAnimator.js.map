{"version":3,"sources":["../../src/animators/ValuesNodeAnimator.js"],"names":["ValuesNodeAnimator","options","nameToAnimatorMap","number","NumberNodeAnimator","unit","UnitNodeAnimator","method","MethodNodeAnimator","name","NameNodeAnimator","hex","HexNodeAnimator","normalizeNodes","createAnimators","fromNode","toNode","animators","children","map","from","index","to","startAt","endAt","easing","filter","node","progress","animator","render","join"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;IAEqBA,kB;;;AACnB,8BAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeA,OAAf;AAEA,SAAKC,iBAAL,GAAyB;AACvBC,MAAAA,MAAM,EAAEC,2BADe;AAEvBC,MAAAA,IAAI,EAAEC,yBAFiB;AAGvBC,MAAAA,MAAM,EAAEC,2BAHe;AAIvBC,MAAAA,IAAI,EAAEC,yBAJiB;AAKvBC,MAAAA,GAAG,EAAEC;AALkB,KAAzB;AAQA,SAAKC,cAAL;AACA,SAAKC,eAAL;AACD;;;;sCAEiB;AAAA;;AAChB,UAAMC,QAAQ,GAAG,KAAKd,OAAL,CAAac,QAA9B;AACA,UAAMC,MAAM,GAAG,KAAKf,OAAL,CAAae,MAA5B;AAEA,WAAKC,SAAL,GAAiBF,QAAQ,CAACG,QAAT,CAAkBC,GAAlB,CAAsB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACtD,YAAMC,EAAE,GAAGN,MAAM,CAACE,QAAP,CAAgBG,KAAhB,CAAX;AAEA,YAAMpB,OAAO,GAAG;AACdsB,UAAAA,OAAO,EAAE,KAAI,CAACtB,OAAL,CAAasB,OADR;AAEdC,UAAAA,KAAK,EAAE,KAAI,CAACvB,OAAL,CAAauB,KAFN;AAGdT,UAAAA,QAAQ,EAAEK,IAHI;AAIdJ,UAAAA,MAAM,EAAEM,EAJM;AAKdG,UAAAA,MAAM,EAAE,KAAI,CAACxB,OAAL,CAAawB;AALP,SAAhB;AAQA,eAAO,IAAI,KAAI,CAACvB,iBAAL,CAAuBkB,IAAI,CAACX,IAA5B,CAAJ,CAAsCR,OAAtC,CAAP;AACD,OAZgB,CAAjB;AAaD;;;qCAEgB;AACf,WAAKA,OAAL,CAAac,QAAb,CAAsBG,QAAtB,GAAiC,KAAKjB,OAAL,CAAac,QAAb,CAAsBG,QAAtB,CAA+BQ,MAA/B,CAC/B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAAClB,IAAL,IAAa,QAAjB;AAAA,OAD2B,CAAjC;AAIA,WAAKR,OAAL,CAAae,MAAb,CAAoBE,QAApB,GAA+B,KAAKjB,OAAL,CAAae,MAAb,CAAoBE,QAApB,CAA6BQ,MAA7B,CAC7B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAAClB,IAAL,IAAa,QAAjB;AAAA,OADyB,CAA/B;AAGD;;;2BAEMmB,Q,EAAU;AACf,aAAO,KAAKX,SAAL,CAAeE,GAAf,CAAmB,UAAAU,QAAQ;AAAA,eAAIA,QAAQ,CAACC,MAAT,CAAgBF,QAAhB,CAAJ;AAAA,OAA3B,EAA0DG,IAA1D,CAA+D,GAA/D,CAAP;AACD","sourcesContent":["import NumberNodeAnimator from \"./NumberNodeAnimator.js\";\nimport HexNodeAnimator from \"./HexNodeAnimator.js\";\nimport UnitNodeAnimator from \"./UnitNodeAnimator.js\";\nimport MethodNodeAnimator from \"./MethodNodeAnimator.js\";\nimport NameNodeAnimator from \"./NameNodeAnimator.js\";\n\nexport default class ValuesNodeAnimator {\n  constructor(options) {\n    this.options = options;\n\n    this.nameToAnimatorMap = {\n      number: NumberNodeAnimator,\n      unit: UnitNodeAnimator,\n      method: MethodNodeAnimator,\n      name: NameNodeAnimator,\n      hex: HexNodeAnimator\n    };\n\n    this.normalizeNodes();\n    this.createAnimators();\n  }\n\n  createAnimators() {\n    const fromNode = this.options.fromNode;\n    const toNode = this.options.toNode;\n\n    this.animators = fromNode.children.map((from, index) => {\n      const to = toNode.children[index];\n\n      const options = {\n        startAt: this.options.startAt,\n        endAt: this.options.endAt,\n        fromNode: from,\n        toNode: to,\n        easing: this.options.easing\n      };\n      \n      return new this.nameToAnimatorMap[from.name](options);\n    });\n  }\n\n  normalizeNodes() {\n    this.options.fromNode.children = this.options.fromNode.children.filter(\n      node => node.name != \"spaces\"\n    );\n\n    this.options.toNode.children = this.options.toNode.children.filter(\n      node => node.name != \"spaces\"\n    );\n  }\n\n  render(progress) {\n    return this.animators.map(animator => animator.render(progress)).join(\" \");\n  }\n}\n"],"file":"ValuesNodeAnimator.js"}