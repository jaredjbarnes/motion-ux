{"version":3,"sources":["../../src/animators/RgbAnimator.js"],"names":["RgbAnimator","options","target","progress","values","duration","fromValue","toValue","change","parsefromValue","parsetoValue","calculateChange","calculateProgress","startAt","name","from","endAt","to","toRgb","rgbRegex","lastIndex","exec","slice","map","value","Number","valueOf","red","green","blue","progressWithEasing","easing","Math","max","min","test"],"mappings":"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","sourcesContent":["import rgbRegex from \"./rgbRegEx.js\";\n\nexport default class RgbAnimator {\n  constructor(options) {\n    this.target = options.target;\n    this.options = options;\n    this.progress = null;\n    this.values = null;\n    this.duration = null;\n    this.fromValue = null;\n    this.toValue = null;\n    this.change = null;\n\n    this.parsefromValue();\n    this.parsetoValue();\n    this.calculateChange();\n    this.calculateProgress();\n  }\n\n  render(progress, duration) {\n    this.progress = progress;\n    this.duration = duration;\n\n    if (progress <= this.options.startAt){\n      this.target[this.options.name] = this.options.from;\n      return;\n    }\n\n    if (progress >= this.options.endAt){\n      this.target[this.options.name] = this.options.to;\n      return;\n    }\n    \n    this.calculateProgress();\n    this.target[this.options.name] = this.toRgb();\n  }\n\n  parsefromValue() {\n    if (this.fromValue == null) {\n      rgbRegex.lastIndex = 0;\n      this.fromValue = rgbRegex\n        .exec(this.options.from)\n        .slice(1)\n        .map(value => new Number(value).valueOf());\n    }\n  }\n\n  parsetoValue() {\n    if (this.toValue == null) {\n      rgbRegex.lastIndex = 0;\n      this.toValue = rgbRegex\n        .exec(this.options.to)\n        .slice(1)\n        .map(value => new Number(value).valueOf());\n    }\n  }\n\n  calculateChange() {\n    if (this.change == null) {\n      const red = this.toValue[0] - this.fromValue[0];\n      const green = this.toValue[1] - this.fromValue[1];\n      const blue = this.toValue[2] - this.fromValue[2];\n\n      this.change = [red, green, blue];\n    }\n  }\n\n  calculateProgress() {\n    const progress = this.progress - this.options.startAt;\n    const duration =(this.options.endAt - this.options.startAt);\n    const progressWithEasing = this.options.easing(progress, 0, 1, duration);\n\n    let red = this.fromValue[0] + this.change[0] * progressWithEasing;\n    let green = this.fromValue[1] + this.change[1] * progressWithEasing;\n    let blue = this.fromValue[2] + this.change[2] * progressWithEasing;\n\n    red = Math.max(0, red);\n    red = Math.min(255, red);\n\n    green = Math.max(0, green);\n    green = Math.min(255, green);\n\n    blue = Math.max(0, blue);\n    blue = Math.min(255, blue);\n\n    this.values = [red, green, blue];\n  }\n\n  toRgb() {\n    const [red, green, blue] = this.values;\n    return `rgb(${red}, ${green}, ${blue})`;\n  }\n\n  static isMatch(options) {\n    rgbRegex.lastIndex = 0;\n    return rgbRegex.test(options.from) && rgbRegex.test(options.to);\n  }\n}\n"],"file":"RgbAnimator.js"}