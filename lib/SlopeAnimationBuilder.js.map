{"version":3,"sources":["../src/SlopeAnimationBuilder.js"],"names":["FORWARD","BACKWARD","SlopeAnimationBuilder","animation","slopeAnimation","direction","newDuration","duration","offset","delta","deltaStepValues","scaledValues","deltaValues","nowValues","diffValues","derivativeValues","toValues","graphOperator","GraphOperator","values","Object","keys","reduce","clone","name","property","cacheValues","calculate","createSlopeTimeline","update","cloneValues","getCurrentValues","scaleValues","cacheDeltaStepValues","cacheScaleValues","cacheDeltaValueForward","cacheDeltaValueBackward","cacheDeltaValueStopped","forEach","assign","graph","scale","now","diff","deltaStep","derivative","scaled","to","subtract","divide","multiply","add","value","toString","keyframes","map","Keyframe","from","controls","startAt","endAt","easing","easings","linear","flat","Animation"],"mappings":"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","sourcesContent":["import easings from \"./easings.js\";\nimport GraphOperator from \"./GraphOperator.js\";\nimport Keyframe from \"./Keyframe.js\";\nimport Animation from \"./Animation.js\";\n\nconst FORWARD = 1;\nconst BACKWARD = -1;\n\nexport default class SlopeAnimationBuilder {\n  constructor() {\n    this.animation = null;\n    this.slopeAnimation = null;\n    this.direction = 0;\n    this.newDuration = 0;\n    this.duration = 0;\n    this.offset = 0;\n    this.delta = 0.0001;\n    this.deltaStepValues = null;\n    this.scaledValues = null;\n    this.deltaValues = null;\n    this.nowValues = null;\n    this.diffValues = null;\n    this.derivativeValues = null;\n    this.scaledValues = null;\n    this.toValues = null;\n    this.graphOperator = new GraphOperator();\n  }\n\n  cloneValues(values) {\n    return Object.keys(values).reduce((clone, name) => {\n      clone[name] = Object.keys(values[name]).reduce((clone, property) => {\n        clone[property] = values[name][property].clone();\n        return clone;\n      }, {});\n      return clone;\n    }, {});\n  }\n\n  build(animation, offset, duration, newDuration, direction) {\n    this.animation = animation;\n    this.offset = offset;\n    this.duration = duration;\n    this.newDuration = newDuration;\n    this.direction = direction;\n\n    this.cacheValues();\n    this.calculate();\n    this.createSlopeTimeline();\n\n    return this.slopeAnimation;\n  }\n\n  cacheValues() {\n    this.animation.update(this.offset);\n    this.nowValues = this.cloneValues(this.animation.getCurrentValues());\n\n    this.deltaStepValues = this.cloneValues(this.nowValues);\n    this.scaleValues = this.cloneValues(this.nowValues);\n    this.diffValues = this.cloneValues(this.nowValues);\n    this.derivativeValues = this.cloneValues(this.nowValues);\n    this.scaledValues = this.cloneValues(this.nowValues);\n    this.toValues = this.cloneValues(this.nowValues);\n\n    this.cacheDeltaStepValues();\n    this.cacheScaleValues();\n\n    if (this.direction === FORWARD) {\n      this.cacheDeltaValueForward();\n    } else if (this.direction === BACKWARD) {\n      this.cacheDeltaValueBackward();\n    } else {\n      this.cacheDeltaValueStopped();\n    }\n  }\n\n  cacheDeltaStepValues() {\n    Object.keys(this.deltaStepValues).forEach((name) => {\n      Object.keys(this.deltaStepValues[name]).forEach((property) => {\n        this.graphOperator.assign(\n          this.deltaStepValues[name][property].graph,\n          this.delta\n        );\n      });\n    });\n  }\n\n  cacheScaleValues() {\n    const scale = this.newDuration / this.duration;\n\n    Object.keys(this.scaleValues).forEach((name) => {\n      Object.keys(this.scaleValues[name]).forEach((property) => {\n        this.graphOperator.assign(\n          this.scaleValues[name][property].graph,\n          scale\n        );\n      });\n    });\n  }\n\n  cacheDeltaValueForward() {\n    this.animation.update(this.offset + this.delta);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  cacheDeltaValueBackward() {\n    this.animation.update(this.offset - this.delta);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  cacheDeltaValueStopped() {\n    this.animation.update(this.offset);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  calculate() {\n    Object.keys(this.nowValues).forEach((name) => {\n      Object.keys(this.nowValues[name]).forEach((property) => {\n        const now = this.nowValues[name][property].graph;\n        const delta = this.deltaValues[name][property].graph;\n        const diff = this.diffValues[name][property].graph;\n\n        const deltaStep = this.deltaStepValues[name][property].graph;\n        const derivative = this.derivativeValues[name][property].graph;\n        const scale = this.scaleValues[name][property].graph;\n        const scaled = this.scaledValues[name][property].graph;\n        const to = this.toValues[name][property].graph;\n\n        this.graphOperator.subtract([delta, now, diff]);\n        this.graphOperator.divide([diff, deltaStep, derivative]);\n        this.graphOperator.multiply([derivative, scale, scaled]);\n        this.graphOperator.add([now, scaled, to]);\n\n        // Lets update the ParsedValue.value.\n        this.toValues[name][property].value = to.toString();\n      });\n    });\n  }\n\n  createSlopeTimeline() {\n    const keyframes = Object.keys(this.nowValues)\n      .map((name) => {\n        return Object.keys(this.nowValues[name]).map((property) => {\n          return new Keyframe({\n            name,\n            property,\n            from: this.nowValues[name][property],\n            controls: [],\n            to: this.toValues[name][property],\n            startAt: 0,\n            endAt: 1,\n            easing: easings.linear,\n          });\n        });\n      })\n      .flat();\n\n    this.slopeAnimation = new Animation(keyframes);\n  }\n}\n"],"file":"SlopeAnimationBuilder.js"}