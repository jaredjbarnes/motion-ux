{"version":3,"sources":["../src/GraphOperator.js"],"names":["GraphOperator","graphsVisitor","GraphsVisitor","visitor","Visitor","graphOperations","GraphOperations","graph","number","setCallback","node","name","value","visitDown","graphs","add","subtract","multiply","divide"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;IAEqBA,a;;;AACnB,2BAAc;AAAA;;AACZ,SAAKC,aAAL,GAAqB,IAAIC,sBAAJ,EAArB;AACA,SAAKC,OAAL,GAAe,IAAIC,gBAAJ,EAAf;AACA,SAAKC,eAAL,GAAuB,IAAIC,wBAAJ,EAAvB;AACD;;;;2BAEMC,K,EAAOC,M,EAAQ;AACpB,WAAKL,OAAL,CAAaM,WAAb,CAAyB,UAACC,IAAD,EAAU;AACjC,YAAIA,IAAI,CAACC,IAAL,KAAc,QAAlB,EAA4B;AAC1BD,UAAAA,IAAI,CAACE,KAAL,GAAaJ,MAAb;AACD;AACF,OAJD;AAMA,WAAKL,OAAL,CAAaU,SAAb,CAAuBN,KAAvB;AACD;;;wBAEGO,M,EAAQ;AACV,WAAKb,aAAL,CAAmBQ,WAAnB,CAA+B,KAAKJ,eAAL,CAAqBU,GAApD;AACA,WAAKd,aAAL,CAAmBY,SAAnB,CAA6BC,MAA7B;AACD;;;6BAEQA,M,EAAQ;AACf,WAAKb,aAAL,CAAmBQ,WAAnB,CAA+B,KAAKJ,eAAL,CAAqBW,QAApD;AACA,WAAKf,aAAL,CAAmBY,SAAnB,CAA6BC,MAA7B;AACD;;;6BAEQA,M,EAAQ;AACf,WAAKb,aAAL,CAAmBQ,WAAnB,CAA+B,KAAKJ,eAAL,CAAqBY,QAApD;AACA,WAAKhB,aAAL,CAAmBY,SAAnB,CAA6BC,MAA7B;AACD;;;2BAEMA,M,EAAQ;AACb,WAAKb,aAAL,CAAmBQ,WAAnB,CAA+B,KAAKJ,eAAL,CAAqBa,MAApD;AACA,WAAKjB,aAAL,CAAmBY,SAAnB,CAA6BC,MAA7B;AACD","sourcesContent":["import GraphOperations from \"./GraphOperations.js\";\nimport GraphsVisitor from \"./GraphsVisitor.js\";\nimport Visitor from \"./Visitor.js\";\n\nexport default class GraphOperator {\n  constructor() {\n    this.graphsVisitor = new GraphsVisitor();\n    this.visitor = new Visitor();\n    this.graphOperations = new GraphOperations();\n  }\n\n  assign(graph, number) {\n    this.visitor.setCallback((node) => {\n      if (node.name === \"number\") {\n        node.value = number;\n      }\n    });\n\n    this.visitor.visitDown(graph);\n  }\n\n  add(graphs) {\n    this.graphsVisitor.setCallback(this.graphOperations.add);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  subtract(graphs) {\n    this.graphsVisitor.setCallback(this.graphOperations.subtract);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  multiply(graphs) {\n    this.graphsVisitor.setCallback(this.graphOperations.multiply);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  divide(graphs) {\n    this.graphsVisitor.setCallback(this.graphOperations.divide);\n    this.graphsVisitor.visitDown(graphs);\n  }\n}\n"],"file":"GraphOperator.js"}