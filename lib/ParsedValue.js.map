{"version":3,"sources":["../src/ParsedValue.js"],"names":["treeUtility","TreeUtility","treeNormalizer","TreeNormalizer","ParsedValue","value","graph","graphHash","normalize","cssValue","parse","Cursor","convertNumberNodesToNumberValues","sequenceHash","clone"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,WAAW,GAAG,IAAIC,oBAAJ,EAApB;AACA,IAAMC,cAAc,GAAG,IAAIC,uBAAJ,EAAvB;;IAEqBC,W;;;AACnB,uBAAYC,KAAZ,EAAmBC,KAAnB,EAA0BC,SAA1B,EAAqC;AAAA;;AACnC,SAAKF,KAAL,GAAaA,KAAb;;AAEA,QAAI,OAAOC,KAAP,KAAiB,WAArB,EAAkC;AAChC,WAAKA,KAAL,GAAaJ,cAAc,CAACM,SAAf,CAAyBC,kBAASC,KAAT,CAAe,IAAIC,4BAAJ,CAAWN,KAAX,CAAf,CAAzB,CAAb;AACAL,MAAAA,WAAW,CAACY,gCAAZ,CAA6C,KAAKN,KAAlD;AACD,KAHD,MAGO;AACL,WAAKA,KAAL,GAAaA,KAAb;AACD;;AAED,QAAI,OAAOC,SAAP,KAAqB,WAAzB,EAAsC;AACpC,WAAKA,SAAL,GAAiBP,WAAW,CAACa,YAAZ,CAAyB,KAAKP,KAA9B,CAAjB;AACD,KAFD,MAEO;AACL,WAAKC,SAAL,GAAiBA,SAAjB;AACD;AACF;;;;4BAEO;AACN,aAAO,IAAIH,WAAJ,CAAgB,KAAKC,KAArB,EAA4B,KAAKC,KAAL,CAAWQ,KAAX,EAA5B,EAAgD,KAAKP,SAArD,CAAP;AACD","sourcesContent":["import cssValue from \"./patterns/cssValue.js\";\nimport TreeNormalizer from \"./TreeNormalizer.js\";\nimport TreeUtility from \"./TreeUtility.js\";\nimport { Cursor } from \"clarity-pattern-parser\";\n\nconst treeUtility = new TreeUtility();\nconst treeNormalizer = new TreeNormalizer();\n\nexport default class ParsedValue {\n  constructor(value, graph, graphHash) {\n    this.value = value;\n\n    if (typeof graph === \"undefined\") {\n      this.graph = treeNormalizer.normalize(cssValue.parse(new Cursor(value)));\n      treeUtility.convertNumberNodesToNumberValues(this.graph);\n    } else {\n      this.graph = graph;\n    }\n\n    if (typeof graphHash === \"undefined\") {\n      this.graphHash = treeUtility.sequenceHash(this.graph);\n    } else {\n      this.graphHash = graphHash;\n    }\n  }\n\n  clone() {\n    return new ParsedValue(this.value, this.graph.clone(), this.graphHash);\n  }\n}\n"],"file":"ParsedValue.js"}