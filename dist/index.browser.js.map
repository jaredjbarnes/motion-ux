{"version":3,"file":"index.browser.js","sources":["../src/math.ts","../src/BezierCurve.ts","../src/deepClone.ts","../src/Animator.ts","../src/Animation.ts","../src/Observer.ts","../src/TimeObserver.ts","../src/Observable.ts","../src/DefaultClock.ts","../src/Player.ts","../src/easingFunctions/easeInQuad.ts","../src/easingFunctions/easeOutQuad.ts","../src/easingFunctions/easeInOutQuad.ts","../src/easingFunctions/easeInElastic.ts","../src/easingFunctions/easeInOutElastic.ts","../src/easingFunctions/easeOutElastic.ts","../src/easingFunctions/easeInOutBack.ts","../src/easingFunctions/easeOutBounce.ts","../src/easingFunctions/easeInBounce.ts","../src/easingFunctions/easeInOutBounce.ts","../src/easingFunctions/easeInCubic.ts","../src/easingFunctions/easeOutCubic.ts","../src/easingFunctions/easeInOutCubic.ts","../src/easingFunctions/easeInQuart.ts","../src/easingFunctions/easeOutQuart.ts","../src/easingFunctions/easeInOutQuart.ts","../src/easingFunctions/easeInQuint.ts","../src/easingFunctions/easeOutQuint.ts","../src/easingFunctions/easeInOutQuint.ts","../src/easingFunctions/easeInSine.ts","../src/easingFunctions/easeOutSine.ts","../src/easingFunctions/easeInOutSine.ts","../src/easingFunctions/easeInExpo.ts","../src/easingFunctions/easeOutExpo.ts","../src/easingFunctions/easeInOutExpo.ts","../src/easingFunctions/easeInCirc.ts","../src/easingFunctions/easeOutCirc.ts","../src/easingFunctions/easeInOutCirc.ts","../src/easingFunctions/easeInBack.ts","../src/easingFunctions/easeOutBack.ts","../src/easingFunctions/easeLinear.ts","../src/easings.ts","../src/ObjectVisitor.ts","../src/ObjectsVisitor.ts","../src/ObjectOperator.ts","../src/Keyframe.ts","../node_modules/clarity-pattern-parser/dist/index.esm.js","../src/patterns/divider.ts","../src/patterns/number.ts","../src/patterns/unit.ts","../src/patterns/hex.ts","../src/patterns/name.ts","../src/patterns/optionalSpaces.ts","../src/patterns/method.ts","../src/patterns/array.ts","../src/patterns/spaces.ts","../src/patterns/expression.ts","../src/patterns/value.ts","../src/patterns/values.ts","../src/patterns/cssValue.ts","../src/CssKeyframe.ts","../src/createDynamicEasing.ts","../src/CssKeyframesGenerator.ts","../src/SlopeAnimationBuilder.ts","../src/ExtendedAnimation.ts","../src/BlendedAnimation.ts","../src/KeyframesGenerator.ts","../src/Motion.ts","../src/patterns/path.ts","../src/PathAnimation.ts","../src/UniformPathAnimation.ts","../src/createAnimation.ts","../src/createCssAnimation.ts","../src/SvgPath.ts","../src/PointPath.ts"],"sourcesContent":["// https://en.wikipedia.org/wiki/Simpson%27s_rule\nexport function simpsonsRule(\n  lowerBound: number,\n  upperBound: number,\n  f: (x: number) => number,\n  n: number = 4\n) {\n  let stripAmount = f(lowerBound);\n  const stepAmount = (upperBound - lowerBound) / n;\n  let currentX = lowerBound;\n\n  for (let x = 0; x < n - 1; x++) {\n    currentX += stepAmount;\n    let coefficient = 4;\n\n    if (x % 2 !== 0) {\n      coefficient = 2;\n    }\n\n    stripAmount += coefficient * f(currentX);\n  }\n\n  stripAmount += f(upperBound);\n\n  return (stepAmount / 3) * stripAmount;\n}\n\n// https://en.wikipedia.org/wiki/Bernstein_polynomial\nexport function bernsteinPolynomial(v: number, n: number, x: number) {\n  if (v > n || v < 0) {\n    return 0;\n  }\n\n  // https://en.wikipedia.org/wiki/Binomial_coefficient\n  const binomialCoefficient = nChooseK(n, v);\n\n  // This is almost a 10 times faster than math.pow.\n  let tValue = x;\n  for (let i = 1; i < v; i++) {\n    tValue *= x;\n  }\n  tValue = v <= 0 ? 1 : tValue;\n\n  const remainder = 1 - x;\n  let remainingT = remainder;\n  for (let i = 1; i < n - v; i++) {\n    remainingT *= remainder;\n  }\n  remainingT = n - v <= 0 ? 1 : remainingT;\n\n  return binomialCoefficient * tValue * remainingT;\n}\n\n// We cache factorials so we can save on computations.\nconst factorialCache = new Map<number, number>();\n\n// https://en.wikipedia.org/wiki/Factorial\nexport function factorial(num: number) {\n  const cache = factorialCache.get(num);\n\n  if (cache != null){\n    return cache;\n  }\n\n  let result = 1;\n  for (let i = 2; i <= num; i++) result = result * i;\n\n  factorialCache.set(num, result);\n  return result;\n}\n\n// We cache nChooseK so we can save on computations.\nconst nChooseKCache = new Map<string, number>();\nexport function nChooseK(n: number, k: number) {\n  const key = `${n}|${k}`;\n  const cache = nChooseKCache.get(key);\n\n  if (cache != null) {\n    return cache;\n  }\n\n  const result = factorial(n) / (factorial(k) * factorial(n - k));\n  nChooseKCache.set(key, result);\n  return result;\n}\n\nexport function newtonsMethod(\n  fn: (x: number) => number,\n  deltaFn: (x: number) => number,\n  startAt: number,\n  maxIterations = Infinity,\n  tolerance = 0.001\n) {\n  let x = startAt;\n  let lastX = Infinity;\n  let difference = Math.abs(x - lastX);\n  let count = 0;\n\n  while (difference > tolerance) {\n    if (count >= maxIterations) {\n      return Infinity;\n    }\n    x = x - fn(x) / deltaFn(x);\n    difference = Math.abs(x - lastX);\n    lastX = x;\n    count++;\n  }\n\n  return x;\n}\n","import { bernsteinPolynomial } from \"./math\";\n\nconst defaultPoints: number[] = [];\n\nfunction valueAt(x: number, points: number[]) {\n  const pointCoefficients = points;\n  const n = pointCoefficients.length - 1;\n  let result = 0;\n\n  for (let v = 0; v <= n; v++) {\n    const pointCoefficient = pointCoefficients[v];\n    result += bernsteinPolynomial(v, n, x) * pointCoefficient;\n  }\n  return result;\n}\n\nfunction deltaAt(x: number, points: number[]) {\n  const pointCoefficients = points;\n  const n = pointCoefficients.length - 1;\n  let result = 0;\n\n  for (let v = 0; v <= n; v++) {\n    const pointCoefficient = pointCoefficients[v];\n    result +=\n      n *\n      (bernsteinPolynomial(v - 1, n - 1, x) -\n        bernsteinPolynomial(v, n - 1, x)) *\n      pointCoefficient;\n  }\n\n  return result;\n}\nexport default class BezierCurve {\n  private points: number[] = defaultPoints;\n  private normalizedPoints: number[] = defaultPoints;\n\n  constructor(points: number[]) {\n    this.setPoints(points);\n  }\n\n  setPoints(coefficients: number[]) {\n    this.points = coefficients;\n    const root = this.points[0];\n    this.normalizedPoints = this.points.map((point) => {\n      return point - root;\n    });\n\n    Object.freeze(this.points);\n    Object.freeze(this.normalizedPoints);\n  }\n\n  valueAt(x: number) {\n    return valueAt(x, this.points);\n  }\n\n  normalizedValueAt(x: number) {\n    return valueAt(x, this.normalizedPoints);\n  }\n\n  deltaAt(x: number) {\n    return deltaAt(x, this.points);\n  }\n\n  normalizedDeltaAt(x: number) {\n    return deltaAt(x, this.normalizedPoints);\n  }\n\n  sumAt(x: number) {\n    const pointCoefficients = this.normalizedPoints;\n    const n = pointCoefficients.length - 1;\n    let result = 0;\n\n    for (let v = 0; v <= n; v++) {\n      const pointCoefficient = pointCoefficients[v];\n      let innerSum = 0;\n\n      for (let j = v + 1; j <= n + 1; j++) {\n        innerSum += bernsteinPolynomial(j, n + 1, x);\n      }\n\n      result += (1 / (n + 1)) * innerSum * pointCoefficient;\n    }\n\n    return result;\n  }\n\n  area(lowerBound: number, upperBound: number) {\n    return this.sumAt(upperBound) - this.sumAt(lowerBound);\n  }\n\n  clone() {\n    return new BezierCurve(this.points.slice());\n  }\n}\n","export function deepClone<T>(value: T): T {\n  return JSON.parse(JSON.stringify(value));\n}\n","import BezierCurve from \"./BezierCurve\";\nimport { deepClone } from \"./deepClone\";\nimport Keyframe from \"./Keyframe\";\n\nconst emptyArray: any[] = [];\n\nexport default class Animator<T> {\n  private _initialValue: T;\n  private _initialDelta: T;\n  private _value: T;\n  private _delta: T;\n  private _keyframe: Keyframe<T>;\n  private _bezierCurve: BezierCurve;\n  private _time: number;\n\n  get keyframe() {\n    return this._keyframe;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  get delta() {\n    return this._delta;\n  }\n\n  get initialDelta() {\n    return this._initialDelta;\n  }\n\n  get initialValue() {\n    return this._initialValue;\n  }\n\n  constructor(keyframe: Keyframe<T>) {\n    this._keyframe = keyframe;\n    this._time = 0;\n    this._bezierCurve = new BezierCurve([]);\n    this._value = deepClone(keyframe.from);\n    this._delta = deepClone(keyframe.from);\n\n    this.update(0);\n\n    this._initialValue = deepClone(this._value);\n    this._initialDelta = deepClone(this._delta);\n  }\n\n  private getNumberValue(\n    from: number,\n    controls: number[] = emptyArray,\n    to: number\n  ) {\n    const elapsedTime = this._time - this._keyframe.startAt;\n    const animationDuration = this._keyframe.endAt - this._keyframe.startAt;\n    const timeWithEasing = this._keyframe.easing(\n      elapsedTime / animationDuration\n    );\n    const points = [from, ...controls, to];\n    this._bezierCurve.setPoints(points);\n    return this._bezierCurve.valueAt(timeWithEasing);\n  }\n\n  private getDeltaValue(\n    from: number,\n    controls: number[] = emptyArray,\n    to: number\n  ) {\n    const elapsedTime = this._time - this._keyframe.startAt;\n    const animationDuration = this._keyframe.endAt - this._keyframe.startAt;\n    const timeWithEasing = this._keyframe.easing(\n      elapsedTime / animationDuration\n    );\n    const points = [from, ...controls, to];\n    this._bezierCurve.setPoints(points);\n    return this._bezierCurve.deltaAt(timeWithEasing);\n  }\n\n  private getStringValue(from: any, to: any) {\n    if (this._time >= this._keyframe.startAt) {\n      return to;\n    } else {\n      return from;\n    }\n  }\n\n  private traverse(\n    fromObject: any,\n    controlsObject: any,\n    toObject: any,\n    resultObject: any,\n    deltaObject: any\n  ) {\n    for (let key in fromObject) {\n      const from = fromObject[key];\n      const to = toObject[key];\n      const controls = controlsObject.map((c: any) => c[key]);\n      const isNumber = typeof from === \"number\";\n      const isString = typeof from === \"string\";\n      const isObject = typeof from === \"object\" && from != null;\n\n      if (isNumber) {\n        resultObject[key] = this.getNumberValue(from, controls, to);\n        deltaObject[key] = this.getDeltaValue(from, controls, to);\n      } else if (isString) {\n        resultObject[key] = this.getStringValue(from, to);\n        deltaObject[key] = to;\n      } else if (isObject) {\n        this.traverse(\n          fromObject[key],\n          controls || emptyArray,\n          toObject[key],\n          resultObject[key],\n          deltaObject[key]\n        );\n      } else {\n        throw new Error(\"Only strings, numbers, and objects are animatable.\");\n      }\n    }\n  }\n\n  update(time: number) {\n    const isNull = this._keyframe.from == null;\n    const isString = typeof this._keyframe.from === \"string\";\n    const isNumber = typeof this._keyframe.from === \"number\";\n    const isObject = typeof this._keyframe.from === \"object\" && !isNull;\n\n    this._time = time;\n\n    if (isString) {\n      this._value = this.getStringValue(this._keyframe.from, this._keyframe.to);\n      this._delta = this._keyframe.to;\n    } else if (isNumber) {\n      this._value = this.getNumberValue(\n        this._keyframe.from as number,\n        this._keyframe.controls as number[],\n        this._keyframe.to as number\n      ) as any as T;\n\n      this._delta = this.getDeltaValue(\n        this._keyframe.from as number,\n        this._keyframe.controls as number[],\n        this._keyframe.to as number\n      ) as any as T;\n    } else if (isObject) {\n      this.traverse(\n        this._keyframe.from,\n        this._keyframe.controls,\n        this._keyframe.to,\n        this._value,\n        this._delta\n      );\n    } else {\n      throw new Error(\"Only strings, numbers, and objects are animatable.\");\n    }\n  }\n}\n","import Animator from \"./Animator\";\nimport Keyframe, { generateInitialDelta } from \"./Keyframe\";\n\nexport type AnimationState<T> = { [key: string]: T };\n\nexport interface IAnimation<T> {\n  name: string;\n  currentValues: T;\n  update(time: number): IAnimation<T>;\n  clone(): IAnimation<T>;\n}\n\nconst sortTime = (animatorA: Animator<any>, animatorB: Animator<any>) => {\n  return animatorA.keyframe.startAt - animatorB.keyframe.startAt;\n};\n\nexport default class Animation<T> implements IAnimation<T> {\n  protected animators: Animator<T>[] = [];\n  protected time = 0;\n\n  public name: string;\n  public currentValues: T;\n  public deltaValues: T;\n\n  constructor(name: string, keyframes: Keyframe<T>[]) {\n    this.name = name;\n    this.currentValues = {} as T;\n    this.deltaValues = {} as T;\n    this.keyframes = keyframes;\n  }\n\n  set keyframes(keyframes: Keyframe<T>[]) {\n    this.animators = keyframes.map((keyframe) => new Animator<T>(keyframe));\n    this._createCurrentValues();\n    this.animators.sort(sortTime);\n  }\n\n  get keyframes() {\n    return this.animators.map((a) => a.keyframe);\n  }\n\n  protected _createCurrentValues() {\n    this.currentValues = {} as T;\n    this.deltaValues = {} as T;\n\n    this.animators.forEach((animator) => {\n      const keyframe = animator.keyframe;\n      const property = keyframe.property;\n      (this.currentValues as any)[property] = animator.value;\n      (this.deltaValues as any)[property] = animator.delta;\n    });\n  }\n\n  private _saveCurrentValues() {\n    const visitedMap = new Map();\n    const animators = this.animators;\n    const length = animators.length;\n\n    for (let x = 0; x < length; x++) {\n      const animator = animators[x];\n      const keyframe = animator.keyframe;\n      const key = keyframe.property;\n\n      if (!visitedMap.has(key)) {\n        visitedMap.set(key, true);\n        (this.currentValues as any)[keyframe.property] = animator.initialValue;\n        (this.deltaValues as any)[keyframe.property] = animator.initialDelta;\n      }\n\n      if (keyframe.startAt <= this.time) {\n        (this.currentValues as any)[keyframe.property] = animator.value;\n        (this.deltaValues as any)[keyframe.property] = animator.delta;\n      }\n    }\n  }\n\n  update(time: number) {\n    this.time = time;\n\n    this.animators.forEach((animator) => {\n      animator.update(this.time);\n    });\n\n    this._saveCurrentValues();\n\n    return this;\n  }\n\n  clone() {\n    const keyframes = this.animators.map((a) => a.keyframe.clone());\n    return new Animation<T>(this.name, keyframes);\n  }\n}\n","const states = {\n  ACTIVE: 1,\n  STOPPED: 0,\n  DISPOSED: -1,\n};\n\nexport interface IEvent {\n  type: string;\n}\n\nexport default class Observer<TEvent extends IEvent> {\n  protected type: any;\n  protected callback: any;\n  protected unbind: any;\n  protected state: any;\n\n  constructor(\n    type: string,\n    callback: (event: TEvent) => void,\n    unbind: () => void\n  ) {\n    this.type = type;\n    this.callback = callback;\n    this.unbind = unbind;\n    this.state = states.ACTIVE;\n  }\n\n  notify(event: TEvent) {\n    if (event.type === this.type) {\n      this.callback(event);\n    }\n  }\n\n  stop() {\n    if (this.state === states.ACTIVE) {\n      this.state = states.STOPPED;\n    }\n  }\n\n  start() {\n    if (this.state !== states.DISPOSED) {\n      this.state = states.ACTIVE;\n    }\n  }\n\n  dispose() {\n    this.state = states.DISPOSED;\n    this.unbind();\n  }\n}\n","import Observer, { IEvent } from \"./Observer\";\n\nexport interface ITimeEvent extends IEvent {\n    time: number;\n    lastTime: number;\n}\n\nexport default class TimeObserver<\n  TEvent extends ITimeEvent\n> extends Observer<TEvent> {\n  public time: any;\n\n  constructor(\n    time: number,\n    callback: (event: TEvent) => void,\n    unbind: () => void\n  ) {\n    super(\"TIME_OBSERVER\", callback, unbind);\n    this.time = time;\n  }\n\n  notify(event: TEvent) {\n    if (typeof event.lastTime === \"number\" && typeof event.time === \"number\") {\n      const high = Math.max(event.time, event.lastTime);\n      const low = Math.min(event.time, event.lastTime);\n\n      if (this.time >= low && this.time <= high) {\n        this.callback(event);\n      }\n    }\n  }\n}\n","import Observer, { IEvent } from \"./Observer\";\nimport TimeObserver, { ITimeEvent } from \"./TimeObserver\";\n\nexport default class Observable {\n  private observers: any;\n\n  constructor() {\n    this.observers = [];\n  }\n\n  observeTimeOnce<TEvent extends ITimeEvent>(\n    time: number,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = this.observeTime<TEvent>(time, (event) => {\n      callback(event);\n      observer.dispose();\n    });\n\n    return observer;\n  }\n\n  observeTime<TEvent extends ITimeEvent>(\n    time: number,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = new TimeObserver(time, callback, () => {\n      const index = this.observers.indexOf(observer);\n      if (index > -1) {\n        this.observers.splice(index, 1);\n      }\n    });\n\n    this.observers.push(observer);\n    return observer;\n  }\n\n  observeOnce<TEvent extends IEvent>(\n    type: string,\n    callback: (event: IEvent) => void\n  ) {\n    const observer = this.observe(type, (event) => {\n      callback(event);\n      observer.dispose();\n    });\n\n    return observer;\n  }\n\n  observe<TEvent extends IEvent>(\n    type: string,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = new Observer<TEvent>(type, callback, () => {\n      const index = this.observers.indexOf(observer);\n      if (index > -1) {\n        this.observers.splice(index, 1);\n      }\n    });\n\n    this.observers.push(observer);\n    return observer;\n  }\n\n  notify<TEvent extends IEvent>(event: TEvent) {\n    this.observers.forEach((observer: Observer<TEvent>) => {\n      observer.notify(event);\n    });\n  }\n\n  clearObservers() {\n    this.observers = [];\n  }\n\n  dispose() {\n    this.clearObservers();\n  }\n}\n","import { IClock, TickCallback } from \"./IClock\";\n\nexport default class DefaultClock implements IClock {\n  public registeredCallbacks: Map<TickCallback, TickCallback>;\n  public animationFrame: any;\n\n  constructor() {\n    this.registeredCallbacks = new Map();\n    this._tick = this._tick.bind(this);\n    this.animationFrame = null;\n  }\n\n  _tick() {\n    this.registeredCallbacks.forEach((callback) => {\n      callback();\n    });\n\n    if (this.registeredCallbacks.size > 0) {\n      this.animationFrame = window.requestAnimationFrame(this._tick);\n    } else {\n      this.animationFrame = null;\n    }\n  }\n\n  register(callback: TickCallback) {\n    this.registeredCallbacks.set(callback, callback);\n\n    if (this.animationFrame == null) {\n      this._tick();\n    }\n  }\n\n  unregister(callback: TickCallback) {\n    this.registeredCallbacks.delete(callback);\n  }\n\n  now() {\n    return performance.now();\n  }\n}\n","import Observable from \"./Observable\";\nimport DefaultClock from \"./DefaultClock\";\nimport { IClock } from \"./IClock\";\n\nconst NEARLY_ZERO = 0.00001;\nconst defaultClock = new DefaultClock();\nfunction defaultRender() {}\n\nexport enum PlayerState {\n  REVERSE = -1,\n  STOPPED = 0,\n  FORWARD = 1,\n}\n\nexport enum RepeatDirection {\n  DEFAULT = 0,\n  ALTERNATE = 1,\n}\n\nexport default class Player extends Observable {\n  private _timeScale: number;\n  private _time: number;\n  private _step: number;\n  private _duration: number;\n  private _lastTimestamp: number;\n  private _iterations: number;\n  private _repeat: number;\n  private _repeatDirection: RepeatDirection;\n  private _clock: IClock;\n  private _state: PlayerState;\n  private _render: (time: number) => void;\n\n  constructor(clock?: IClock) {\n    super();\n    this._timeScale = 1;\n    this._time = 0;\n    this._step = 0;\n    this._duration = NEARLY_ZERO;\n    this._lastTimestamp = 0;\n    this._iterations = 0;\n    this._repeat = 1;\n    this._repeatDirection = RepeatDirection.DEFAULT;\n    this._clock = clock || defaultClock;\n    this._state = PlayerState.STOPPED;\n    this._render = defaultRender;\n    this.tick = this.tick.bind(this);\n  }\n\n  get time() {\n    return this._time;\n  }\n\n  set time(value: number) {\n    this._time = value;\n  }\n\n  get timeScale() {\n    return this._timeScale;\n  }\n\n  set timeScale(value) {\n    if (value > 0) {\n      this._timeScale = value;\n    }\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(value) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing. All Math blows up if the duration is \"0\".\n    if (value <= 0) {\n      value = NEARLY_ZERO;\n    }\n\n    this._duration = value;\n  }\n\n  get repeat() {\n    return this._repeat;\n  }\n\n  set repeat(value) {\n    if (typeof value !== \"number\" && value > 0) {\n      return;\n    }\n\n    this._repeat = value;\n  }\n\n  get repeatDirection() {\n    return this._repeatDirection;\n  }\n\n  set repeatDirection(value: RepeatDirection) {\n    if (value !== 0 && value !== 1) {\n      return;\n    }\n\n    this._repeatDirection = value;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  get render() {\n    return this._render;\n  }\n\n  set render(render: (time: number) => void) {\n    this._render = render;\n  }\n\n  get iterations() {\n    return this._iterations;\n  }\n\n  set iterations(value: number) {\n    if (value >= 0) {\n      this._iterations = value;\n    }\n  }\n\n  get clock() {\n    return this._clock;\n  }\n\n  set clock(value: IClock) {\n    this._clock = value;\n  }\n\n  private tick() {\n    const timestamp = this._clock.now();\n    const deltaTime = timestamp - this._lastTimestamp;\n    this._step = (deltaTime / this._duration) * this._timeScale;\n\n    if (this._step > 1) {\n      this._step = 1;\n    }\n\n    // This helps with unneeded renders.\n    if (deltaTime <= 0) {\n      return;\n    }\n\n    if (this._state === PlayerState.REVERSE) {\n      this.stepBackward();\n    } else if (this._state === PlayerState.FORWARD) {\n      this.stepForward();\n    }\n\n    this._lastTimestamp = timestamp;\n  }\n\n  private stepForward() {\n    let time = this._time + this._step;\n    let lastTime = this._time;\n\n    const repeatDirection = this._repeatDirection;\n\n    if (time >= 1) {\n      this._iterations++;\n\n      this.notify({\n        type: \"TICK\",\n        time: 1,\n        lastTime,\n      });\n\n      if (this._iterations >= this._repeat) {\n        this.seek(1);\n        this.stop();\n        return;\n      }\n\n      if (repeatDirection === RepeatDirection.ALTERNATE) {\n        const adjustedTime = 1 - (time - 1);\n\n        this._time = 1;\n        this.seek(adjustedTime);\n        this._state = PlayerState.REVERSE;\n      } else {\n        const adjustedTime = time - 1;\n\n        this.notify({\n          type: \"TICK\",\n          time: 0,\n          lastTime,\n        });\n\n        this._time = 0;\n        this.seek(adjustedTime);\n        this._state = PlayerState.FORWARD;\n      }\n    } else {\n      this.seek(time);\n    }\n  }\n\n  private stepBackward() {\n    let time = this._time - this._step;\n    let lastTime = this._time;\n\n    const repeatDirection = this._repeatDirection;\n\n    if (time <= 0) {\n      this._iterations++;\n\n      this.notify({\n        type: \"TICK\",\n        time: 0,\n        lastTime,\n      });\n\n      if (this._iterations >= this._repeat) {\n        this.seek(0);\n        this.stop();\n        return;\n      }\n\n      if (repeatDirection === RepeatDirection.ALTERNATE) {\n        const adjustedTime = time * -1;\n\n        this._time = 0;\n        this.seek(adjustedTime);\n        this._state = PlayerState.FORWARD;\n      } else {\n        const adjustedTime = 1 + time;\n\n        this.notify({\n          type: \"TICK\",\n          time: 1,\n          lastTime,\n        });\n\n        this._time = 1;\n        this.seek(adjustedTime);\n        this._state = PlayerState.REVERSE;\n      }\n    } else {\n      this.seek(time);\n    }\n  }\n\n  seek(time: number) {\n    const lastTime = this._time;\n    this._time = time;\n\n    this._render(this._time);\n\n    this.notify({\n      type: \"TICK\",\n      time,\n      lastTime,\n    });\n\n    return this;\n  }\n\n  stop() {\n    if (this._state !== PlayerState.STOPPED) {\n      this._state = PlayerState.STOPPED;\n      this._render(this._time);\n\n      this._clock.unregister(this.tick);\n\n      this.notify({\n        type: \"STOPPED\",\n      });\n    }\n\n    return this;\n  }\n\n  play() {\n    if (this._state !== PlayerState.FORWARD) {\n      this._lastTimestamp = this._clock.now();\n\n      this._state = PlayerState.FORWARD;\n      this._clock.register(this.tick);\n\n      this.notify({\n        type: \"PLAYED\",\n      });\n    }\n\n    return this;\n  }\n\n  reverse() {\n    if (this._state !== PlayerState.REVERSE) {\n      this._lastTimestamp = this._clock.now();\n\n      this._state = PlayerState.REVERSE;\n      this._clock.register(this.tick);\n\n      this.notify({\n        type: \"REVERSED\",\n      });\n    }\n\n    return this;\n  }\n\n  dispose() {\n    this.stop();\n    super.dispose();\n  }\n}\n","export default (percentage: number) => {\n  return percentage * percentage;\n};\n","export default (percentage: number) => {\n  return -percentage * (percentage - 2);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1) return (1 / 2) * percentage * percentage;\n  return (-1 / 2) * (--percentage * (percentage - 2) - 1);\n};\n","export default (percentage: number) => {\n  const p = 0.3 / 1;\n  const s = p / 4;\n  const a = 1;\n\n  if (percentage <= 0) return 0;\n  if (percentage >= 1) return 1;\n\n  return -(\n    a *\n    Math.pow(2, 10 * (percentage -= 1)) *\n    Math.sin(((percentage - s) * (2 * Math.PI)) / p)\n  );\n};\n","export default (t: number) => {\n  var b = 0;\n  var c = 1;\n  var d = 1;\n  var s = 1.70158;\n  var p = 0;\n  var a = c;\n\n  if (t == 0) return b;\n  if ((t /= d / 2) == 2) return b + c;\n  if (!p) p = d * (0.3 / 1);\n  if (a < Math.abs(c)) {\n    a = c;\n    var s = p / 4;\n  } else var s = (p / (2 * Math.PI)) * Math.asin(c / a);\n  if (t < 1)\n    return (\n      -0.5 *\n        (a *\n          Math.pow(2, 10 * (t -= 1)) *\n          Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\n      b\n    );\n  return (\n    a *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\n      0.5 +\n    c +\n    b\n  );\n};\n","export default (percentage: number) => {\n  const p = 0.3 / 1;\n  const s = p / 4;\n  const a = 1;\n\n  if (percentage <= 0) return 0;\n  if (percentage >= 1) return 1;\n\n  return (\n    a *\n      Math.pow(2, -10 * percentage) *\n      Math.sin(((percentage - s) * (2 * Math.PI)) / p) +\n    1\n  );\n};\n","export default (percentage: number) => {\n  const s = 1.70158 * 1.525;\n\n  if ((percentage /= 1 / 2) < 1) {\n    return (1 / 2) * (percentage * percentage * ((s + 1) * percentage - s));\n  }\n\n  return (\n    (1 / 2) * ((percentage -= 2) * percentage * ((s + 1) * percentage + s) + 2)\n  );\n};\n","export default (percentage: number) => {\n  let t = percentage;\n\n  if ((t /= 1) < 1 / 2.75) {\n    return 7.5625 * t * t;\n  } else if (t < 2 / 2.75) {\n    return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n  } else if (t < 2.5 / 2.75) {\n    return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n  } else {\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  }\n};\n","import easeOutBounce from \"./easeOutBounce\";\n\nexport default (percentage: number) => {\n  return 1 - easeOutBounce(1 - percentage);\n};\n","import easeInBounce from \"./easeInBounce\";\nimport easeOutBounce from \"./easeOutBounce\";\n\nexport default (percentage: number) => {\n  if (percentage < 0.5) {\n    return easeInBounce(percentage * 2) * 0.5;\n  } else {\n    return easeOutBounce(percentage * 2 - 1) * 0.5 + 0.5;\n  }\n};\n","export default (percentage: number) => {\n  return percentage * percentage * percentage;\n};\n","export default (percentage: number) => {\n  return 1 * ((percentage = percentage / 1 - 1) * percentage * percentage + 1);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * percentage * percentage * percentage;\n  return (1 / 2) * ((percentage -= 2) * percentage * percentage + 2);\n};\n","export default (percentage: number) => {\n  return 1 * (percentage /= 1) * percentage * percentage * percentage;\n};\n","export default (percentage: number) => {\n  return (\n    -1 *\n    ((percentage = percentage / 1 - 1) * percentage * percentage * percentage -\n      1)\n  );\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * percentage * percentage * percentage * percentage;\n  return (\n    (-1 / 2) * ((percentage -= 2) * percentage * percentage * percentage - 2)\n  );\n};\n","export default (percentage: number) => {\n  return (\n    1 * (percentage /= 1) * percentage * percentage * percentage * percentage\n  );\n};\n","export default (percentage: number) => {\n  return (\n    1 *\n    ((percentage = percentage / 1 - 1) *\n      percentage *\n      percentage *\n      percentage *\n      percentage +\n      1)\n  );\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (\n      (1 / 2) * percentage * percentage * percentage * percentage * percentage\n    );\n  return (\n    (1 / 2) *\n    ((percentage -= 2) * percentage * percentage * percentage * percentage + 2)\n  );\n};\n","export default (percentage: number) => {\n  return -Math.cos(percentage * (Math.PI / 2)) + 1;\n};\n","export default (percentage: number) => {\n  return 1 * Math.sin((percentage / 1) * (Math.PI / 2));\n};\n","export default (percentage: number) => {\n  return (-1 / 2) * (Math.cos((Math.PI * percentage) / 1) - 1);\n};\n","export default (percentage: number) => {\n  return percentage == 0 ? 0 : Math.pow(2, 10 * (percentage - 1));\n};\n","export default (percentage: number) => {\n  return percentage == 1 ? 1 : 1 * (-Math.pow(2, (-10 * percentage) / 1) + 1);\n};\n","export default (percentage: number) => {\n  if (percentage == 0) return 0;\n  if (percentage == 1) return 1;\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * Math.pow(2, 10 * (percentage - 1));\n  return (1 / 2) * (-Math.pow(2, -10 * --percentage) + 2);\n};\n","export default (percentage: number) => {\n  return -(Math.sqrt(1 - percentage * percentage) - 1);\n};\n","export default (percentage: number) => {\n  return 1 * Math.sqrt(1 - (percentage = percentage / 1 - 1) * percentage);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (-1 / 2) * (Math.sqrt(1 - percentage * percentage) - 1);\n  return (1 / 2) * (Math.sqrt(1 - (percentage -= 2) * percentage) + 1);\n};\n","export default (percentage: number) => {\n  const s = 1.70158;\n  return percentage * percentage * ((s + 1) * percentage - s);\n};\n","export default (percentage: number) => {\n  const s = 1.70158;\n  return (\n    1 *\n    ((percentage = percentage / 1 - 1) *\n      percentage *\n      ((s + 1) * percentage + s) +\n      1)\n  );\n};\n","export default (percentage: number) => {\n  return percentage;\n};\n","import easeInQuad from \"./easingFunctions/easeInQuad\";\nimport easeOutQuad from \"./easingFunctions/easeOutQuad\";\nimport easeInOutQuad from \"./easingFunctions/easeInOutQuad\";\nimport easeInElastic from \"./easingFunctions/easeInElastic\";\nimport easeInOutElastic from \"./easingFunctions/easeInOutElastic\";\nimport easeOutElastic from \"./easingFunctions/easeOutElastic\";\nimport easeInOutBack from \"./easingFunctions/easeInOutBack\";\nimport easeInOutBounce from \"./easingFunctions/easeInOutBounce\";\nimport easeInBounce from \"./easingFunctions/easeInBounce\";\nimport easeOutBounce from \"./easingFunctions/easeOutBounce\";\nimport easeInCubic from \"./easingFunctions/easeInCubic\";\nimport easeOutCubic from \"./easingFunctions/easeOutCubic\";\nimport easeInOutCubic from \"./easingFunctions/easeInOutCubic\";\nimport easeInQuart from \"./easingFunctions/easeInQuart\";\nimport easeOutQuart from \"./easingFunctions/easeOutQuart\";\nimport easeInOutQuart from \"./easingFunctions/easeInOutQuart\";\nimport easeInQuint from \"./easingFunctions/easeInQuint\";\nimport easeOutQuint from \"./easingFunctions/easeOutQuint\";\nimport easeInOutQuint from \"./easingFunctions/easeInOutQuint\";\nimport easeInSine from \"./easingFunctions/easeInSine\";\nimport easeOutSine from \"./easingFunctions/easeOutSine\";\nimport easeInOutSine from \"./easingFunctions/easeInOutSine\";\nimport easeInExpo from \"./easingFunctions/easeInExpo\";\nimport easeOutExpo from \"./easingFunctions/easeOutExpo\";\nimport easeInOutExpo from \"./easingFunctions/easeInOutExpo\";\nimport easeInCirc from \"./easingFunctions/easeInCirc\";\nimport easeOutCirc from \"./easingFunctions/easeOutCirc\";\nimport easeInOutCirc from \"./easingFunctions/easeInOutCirc\";\nimport easeInBack from \"./easingFunctions/easeInBack\";\nimport easeOutBack from \"./easingFunctions/easeOutBack\";\nimport easeLinear from \"./easingFunctions/easeLinear\";\n\nexport type EasingFunction = (percentage: number) => number;\n\nexport type EasingNames =\n  | \"easeInQuad\"\n  | \"easeOutQuad\"\n  | \"easeInOutQuad\"\n  | \"easeInCubic\"\n  | \"easeOutCubic\"\n  | \"easeInOutCubic\"\n  | \"easeInQuart\"\n  | \"easeOutQuart\"\n  | \"easeInOutQuart\"\n  | \"easeInQuint\"\n  | \"easeOutQuint\"\n  | \"easeInOutQuint\"\n  | \"easeInSine\"\n  | \"easeOutSine\"\n  | \"easeInOutSine\"\n  | \"easeInExpo\"\n  | \"easeOutExpo\"\n  | \"easeInOutExpo\"\n  | \"easeInCirc\"\n  | \"easeOutCirc\"\n  | \"easeInOutCirc\"\n  | \"easeInElastic\"\n  | \"easeOutElastic\"\n  | \"easeInOutElastic\"\n  | \"easeInBack\"\n  | \"easeOutBack\"\n  | \"easeInOutBack\"\n  | \"easeInBounce\"\n  | \"easeOutBounce\"\n  | \"easeInOutBounce\"\n  | \"linear\";\n\nconst easings = {\n  easeInQuad: easeInQuad,\n  easeOutQuad: easeOutQuad,\n  easeInOutQuad: easeInOutQuad,\n  easeInCubic: easeInCubic,\n  easeOutCubic: easeOutCubic,\n  easeInOutCubic: easeInOutCubic,\n  easeInQuart: easeInQuart,\n  easeOutQuart: easeOutQuart,\n  easeInOutQuart: easeInOutQuart,\n  easeInQuint: easeInQuint,\n  easeOutQuint: easeOutQuint,\n  easeInOutQuint: easeInOutQuint,\n  easeInSine: easeInSine,\n  easeOutSine: easeOutSine,\n  easeInOutSine: easeInOutSine,\n  easeInExpo: easeInExpo,\n  easeOutExpo: easeOutExpo,\n  easeInOutExpo: easeInOutExpo,\n  easeInCirc: easeInCirc,\n  easeOutCirc: easeOutCirc,\n  easeInOutCirc: easeInOutCirc,\n  easeInElastic: easeInElastic,\n  easeOutElastic: easeOutElastic,\n  easeInOutElastic: easeInOutElastic,\n  easeInBack: easeInBack,\n  easeOutBack: easeOutBack,\n  easeInOutBack: easeInOutBack,\n  easeInBounce: easeInBounce,\n  easeOutBounce: easeOutBounce,\n  easeInOutBounce: easeInOutBounce,\n  linear: easeLinear,\n};\n\nexport default easings;\n","const emptyFn = () => 0;\n\ntype Visitor = (object: any) => number;\n\nexport default class ObjectVisitor {\n  private visitor: Visitor = emptyFn;\n\n  constructor(callback: Visitor = emptyFn) {\n    this.setVisitor(callback);\n  }\n\n  visit(object: any) {\n    this.walk(object);\n  }\n\n  private walk(object: any) {\n    if (typeof object === \"object\" && object != null) {\n      for (let key in object) {\n        if (typeof object[key] === \"number\") {\n          object[key] = this.visitor(object[key]);\n        } else if (typeof object[key] === \"object\") {\n          this.walk(object[key]);\n        }\n      }\n    }\n  }\n\n  setVisitor(visitor: Visitor) {\n    if (typeof visitor === \"function\") {\n      this.visitor = visitor;\n    } else {\n      this.visitor = emptyFn;\n    }\n\n    this.visitor = visitor;\n  }\n}\n","const emptyFn = () => 0;\n\ntype Visitor = (left: number, right: number) => number;\n\nexport default class ObjectsVisitor {\n  private visitor: Visitor = emptyFn;\n\n  constructor(callback: Visitor = emptyFn) {\n    this.setVisitor(callback);\n  }\n\n  visit(left: any, right: any, output: any) {\n    this.walk(left, right, output);\n  }\n\n  private walk(left: any, right: any, output: any) {\n    if (typeof left === \"object\" && left != null) {\n      for (let key in left) {\n        if (\n          typeof left[key] === \"number\" &&\n          typeof right[key] === \"number\" &&\n          typeof output[key] === \"number\"\n        ) {\n          output[key] = this.visitor(left[key], right[key]);\n        } else if (typeof left[key] === \"object\") {\n          this.walk(left[key], right[key], output[key]);\n        }\n      }\n    }\n  }\n\n  setVisitor(visitor: Visitor) {\n    if (typeof visitor === \"function\") {\n      this.visitor = visitor;\n    } else {\n      this.visitor = emptyFn;\n    }\n\n    this.visitor = visitor;\n  }\n}\n","import ObjectVisitor from \"./ObjectVisitor\";\nimport ObjectsVisitor from \"./ObjectsVisitor\";\n\nconst add = (left: number, right: number) => {\n  return left + right;\n};\n\nconst subtract = (left: number, right: number) => {\n  return left - right;\n};\n\nconst multiply = (left: number, right: number) => {\n  return left * right;\n};\n\nconst divide = (left: number, right: number) => {\n  return left / right;\n};\n\nexport default class ObjectOperator {\n  public visitor: ObjectVisitor;\n  public objectsVisitor: ObjectsVisitor;\n\n  constructor() {\n    this.objectsVisitor = new ObjectsVisitor();\n    this.visitor = new ObjectVisitor();\n  }\n\n  assign<T>(object: T, number: number) {\n    this.visitor.setVisitor(() => {\n      return number;\n    });\n\n    this.visitor.visit(object);\n  }\n\n  add<T>(left: T, right: T, output: T) {\n    this.objectsVisitor.setVisitor(add);\n    this.objectsVisitor.visit(left, right, output);\n  }\n\n  subtract<T>(left: T, right: T, output: T) {\n    this.objectsVisitor.setVisitor(subtract);\n    this.objectsVisitor.visit(left, right, output);\n  }\n\n  multiply<T>(left: T, right: T, output: T) {\n    this.objectsVisitor.setVisitor(multiply);\n    this.objectsVisitor.visit(left, right, output);\n  }\n\n  divide<T>(left: T, right: T, output: T) {\n    this.objectsVisitor.setVisitor(divide);\n    this.objectsVisitor.visit(left, right, output);\n  }\n}\n","import easings, { EasingFunction } from \"./easings\";\nimport { DynamicEasingNames } from \"./createDynamicEasing\";\nimport { deepClone } from \"./deepClone\";\nimport ObjectOperator from \"./ObjectOperator\";\n\nconst objectOperator = new ObjectOperator();\n\nexport interface IComplexKeyframeValue<T> {\n  value: T;\n  controlsIn?: T[];\n  controlsOut?: T[];\n  easeIn?: DynamicEasingNames;\n  easeOut?: DynamicEasingNames;\n}\n\nexport interface KeyframeConfig<T> {\n  property: string;\n  to: T;\n  from: T;\n  endAt?: number;\n  startAt?: number;\n  controls?: T[];\n  easing?: EasingFunction;\n}\n\nexport function generateInitialDelta<T>(delta: T) {\n  if (typeof delta === \"number\") {\n    return 0 as any as T;\n  } else if (typeof delta === \"string\") {\n    return delta;\n  } else {\n    objectOperator.assign(delta, 0);\n    return delta;\n  }\n}\n\nexport default class Keyframe<T> {\n  public property: string;\n  public to: T;\n  public from: T;\n  public startAt: number;\n  public endAt: number;\n  public controls: T[];\n  public easing: EasingFunction;\n\n  constructor(config: KeyframeConfig<T>) {\n    this.property = config.property;\n    this.to = config.to;\n    this.from = config.from;\n    this.startAt = typeof config.startAt === \"number\" ? config.startAt : 0;\n    this.endAt = typeof config.endAt === \"number\" ? config.endAt : 1;\n    this.controls = Array.isArray(config.controls) ? config.controls : [];\n    this.easing =\n      typeof config.easing === \"function\" ? config.easing : easings.linear;\n  }\n\n  clone() {\n    return new Keyframe({\n      property: this.property,\n      to: deepClone(this.to),\n      from: deepClone(this.from),\n      startAt: this.startAt,\n      endAt: this.endAt,\n      controls: this.controls.map((c) => deepClone(c)),\n      easing: this.easing,\n    });\n  }\n}\n","class Node {\r\n    constructor(type, name, startIndex, endIndex, isComposite = false) {\r\n        this.children = [];\r\n        this.value = \"\";\r\n        this.type = type;\r\n        this.name = name;\r\n        this.startIndex = startIndex;\r\n        this.endIndex = endIndex;\r\n        this.isComposite = isComposite;\r\n        if (typeof this.startIndex !== \"number\" ||\r\n            typeof this.endIndex !== \"number\") {\r\n            throw new Error(\"Invalid Arguments: startIndex and endIndex need to be number.\");\r\n        }\r\n    }\r\n}\n\nclass CompositeNode extends Node {\r\n    constructor(type, name, startIndex = 0, endIndex = 0) {\r\n        super(type, name, startIndex, endIndex, true);\r\n    }\r\n    clone() {\r\n        const node = new CompositeNode(this.type, this.name, this.startIndex, this.endIndex);\r\n        node.children = this.children.map((child) => {\r\n            return child.clone();\r\n        });\r\n        return node;\r\n    }\r\n    toString() {\r\n        return this.children.map((child) => child.toString()).join(\"\");\r\n    }\r\n}\n\nclass ValueNode extends Node {\r\n    constructor(type, name, value, startIndex = 0, endIndex = 0) {\r\n        super(type, name, startIndex, endIndex);\r\n        this.value = value;\r\n    }\r\n    clone() {\r\n        return new ValueNode(this.type, this.name, this.value, this.startIndex, this.endIndex);\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\n\nclass CursorHistory {\r\n    constructor() {\r\n        this.isRecording = false;\r\n        this.furthestMatch = {\r\n            pattern: null,\r\n            astNode: null,\r\n        };\r\n        this.furthestError = null;\r\n        this.patterns = [];\r\n        this.astNodes = [];\r\n        this.errors = [];\r\n    }\r\n    addMatch(pattern, astNode) {\r\n        if (this.isRecording) {\r\n            this.patterns.push(pattern);\r\n            this.astNodes.push(astNode);\r\n        }\r\n        if (this.furthestMatch.astNode == null ||\r\n            astNode.endIndex >= this.furthestMatch.astNode.endIndex) {\r\n            this.furthestMatch.pattern = pattern;\r\n            this.furthestMatch.astNode = astNode;\r\n        }\r\n    }\r\n    addError(error) {\r\n        if (this.isRecording) {\r\n            this.errors.push(error);\r\n        }\r\n        if (this.furthestError == null || error.index >= this.furthestError.index) {\r\n            this.furthestError = error;\r\n        }\r\n    }\r\n    startRecording() {\r\n        this.isRecording = true;\r\n    }\r\n    stopRecording() {\r\n        this.isRecording = false;\r\n        this.clear();\r\n    }\r\n    clear() {\r\n        this.patterns.length = 0;\r\n        this.astNodes.length = 0;\r\n        this.errors.length = 0;\r\n    }\r\n    getFurthestError() {\r\n        return this.furthestError;\r\n    }\r\n    getFurthestMatch() {\r\n        return this.furthestMatch;\r\n    }\r\n    getLastMatch() {\r\n        if (this.isRecording) {\r\n            return {\r\n                pattern: this.patterns[this.patterns.length - 1] || null,\r\n                astNode: this.astNodes[this.astNodes.length - 1] || null,\r\n            };\r\n        }\r\n        else {\r\n            return this.furthestMatch;\r\n        }\r\n    }\r\n    getLastError() {\r\n        return this.errors[this.errors.length - 1] || null;\r\n    }\r\n    getAllParseStacks() {\r\n        const stacks = this.astNodes.reduce((acc, node) => {\r\n            let container = acc[acc.length - 1];\r\n            if (node.startIndex === 0) {\r\n                container = [];\r\n                acc.push(container);\r\n            }\r\n            container.push(node);\r\n            return acc;\r\n        }, []);\r\n        // There are times when the matching will fail and hit again on the same node.\r\n        // This filters them out.\r\n        // We simply check to see if there is any overlap with the previous one,\r\n        // and if there is we don't add it. This is why we move backwards.\r\n        const cleanedStack = stacks.map((stack) => {\r\n            const cleanedStack = [];\r\n            for (let x = stack.length - 1; x >= 0; x--) {\r\n                const currentNode = stack[x];\r\n                const previousNode = stack[x + 1];\r\n                if (previousNode == null) {\r\n                    cleanedStack.unshift(currentNode);\r\n                }\r\n                else {\r\n                    const left = Math.max(currentNode.startIndex, previousNode.startIndex);\r\n                    const right = Math.min(currentNode.endIndex, previousNode.endIndex);\r\n                    const isOverlapping = left <= right;\r\n                    if (!isOverlapping) {\r\n                        cleanedStack.unshift(currentNode);\r\n                    }\r\n                }\r\n            }\r\n            return cleanedStack;\r\n        });\r\n        return cleanedStack;\r\n    }\r\n    getLastParseStack() {\r\n        const stacks = this.getAllParseStacks();\r\n        return stacks[stacks.length - 1] || [];\r\n    }\r\n}\n\nclass Cursor {\r\n    constructor(text) {\r\n        this.text = text;\r\n        this.assertValidity();\r\n        this.index = 0;\r\n        this.length = text.length;\r\n        this.history = new CursorHistory();\r\n        this.isInErrorState = false;\r\n    }\r\n    assertValidity() {\r\n        if (this.isNullOrEmpty(this.text)) {\r\n            throw new Error(\"Illegal Argument: Cursor needs to have a string that has a length greater than 0.\");\r\n        }\r\n    }\r\n    startRecording() {\r\n        this.history.startRecording();\r\n    }\r\n    stopRecording() {\r\n        this.history.stopRecording();\r\n    }\r\n    get parseError() {\r\n        return this.history.getFurthestError();\r\n    }\r\n    get lastMatch() {\r\n        return this.history.getFurthestMatch();\r\n    }\r\n    throwError(parseError) {\r\n        this.isInErrorState = true;\r\n        this.history.addError(parseError);\r\n    }\r\n    addMatch(pattern, astNode) {\r\n        this.history.addMatch(pattern, astNode);\r\n    }\r\n    resolveError() {\r\n        this.isInErrorState = false;\r\n    }\r\n    hasUnresolvedError() {\r\n        return this.isInErrorState;\r\n    }\r\n    isNullOrEmpty(value) {\r\n        return value == null || (typeof value === \"string\" && value.length === 0);\r\n    }\r\n    hasNext() {\r\n        return this.index + 1 < this.text.length;\r\n    }\r\n    hasPrevious() {\r\n        return this.index - 1 >= 0;\r\n    }\r\n    next() {\r\n        if (this.hasNext()) {\r\n            this.index++;\r\n        }\r\n        else {\r\n            throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n        }\r\n    }\r\n    previous() {\r\n        if (this.hasPrevious()) {\r\n            this.index--;\r\n        }\r\n        else {\r\n            throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n        }\r\n    }\r\n    mark() {\r\n        return this.index;\r\n    }\r\n    moveToMark(mark) {\r\n        this.index = mark;\r\n    }\r\n    moveToBeginning() {\r\n        this.index = 0;\r\n    }\r\n    moveToEnd() {\r\n        this.index = this.text.length - 1;\r\n    }\r\n    getChar() {\r\n        return this.text.charAt(this.index);\r\n    }\r\n    getIndex() {\r\n        return this.index;\r\n    }\r\n    setIndex(index) {\r\n        if (typeof index === \"number\") {\r\n            if (index < 0 || index > this.lastIndex()) {\r\n                throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n            }\r\n            this.index = index;\r\n        }\r\n    }\r\n    isAtBeginning() {\r\n        return this.index === 0;\r\n    }\r\n    isAtEnd() {\r\n        return this.index === this.text.length - 1;\r\n    }\r\n    lastIndex() {\r\n        return this.length - 1;\r\n    }\r\n    didSuccessfullyParse() {\r\n        return !this.hasUnresolvedError() && this.isAtEnd();\r\n    }\r\n}\n\nclass ParseError {\r\n    constructor(message, index, pattern) {\r\n        this.name = \"ParseError\";\r\n        this.message = message;\r\n        this.index = index;\r\n        this.pattern = pattern;\r\n    }\r\n}\n\nclass Pattern {\r\n    constructor(type = \"\", name, children = []) {\r\n        this._type = type;\r\n        this._name = name;\r\n        this._children = [];\r\n        this._parent = null;\r\n        this.isSequence = false;\r\n        this._assertName();\r\n        this.children = children;\r\n    }\r\n    _assertName() {\r\n        if (typeof this.name !== \"string\") {\r\n            throw new Error(\"Invalid Argument: Patterns needs to have a name that's a string.\");\r\n        }\r\n    }\r\n    exec(text) {\r\n        const cursor = new Cursor(text);\r\n        const node = this.parse(cursor);\r\n        if (cursor.didSuccessfullyParse()) {\r\n            return node;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    test(text) {\r\n        return this.exec(text) != null;\r\n    }\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    set parent(value) {\r\n        if (value instanceof Pattern) {\r\n            this._parent = value;\r\n        }\r\n    }\r\n    get children() {\r\n        return this._children;\r\n    }\r\n    set children(value) {\r\n        this._children = value;\r\n        this._cloneChildren();\r\n        this._assertChildren();\r\n        this._assignAsParent();\r\n    }\r\n    _assertChildren() {\r\n        // Empty,can be overridden by subclasses.\r\n    }\r\n    _cloneChildren() {\r\n        // We need to clone the patterns so nested patterns can be parsed.\r\n        this._children = this._children.map((pattern) => {\r\n            if (!(pattern instanceof Pattern)) {\r\n                throw new Error(`The ${this.name} pattern has an invalid child pattern.`);\r\n            }\r\n            return pattern.clone();\r\n        });\r\n        // We need to freeze the children so they aren't modified.\r\n        Object.freeze(this._children);\r\n    }\r\n    _assignAsParent() {\r\n        this._children.forEach((child) => (child.parent = this));\r\n    }\r\n    getNextTokens() {\r\n        var _a, _b, _c;\r\n        const parent = this._parent;\r\n        if (parent != null) {\r\n            const siblings = parent.children;\r\n            const index = siblings.findIndex((c) => c === this);\r\n            const nextSibling = siblings[index + 1];\r\n            // I don't like this, so I think we need to rethink this.\r\n            if (parent.type.indexOf(\"repeat\") === 0) {\r\n                const tokens = parent.getNextTokens();\r\n                if (index === 0 && siblings.length > 1) {\r\n                    return nextSibling.getTokens().concat(tokens);\r\n                }\r\n                else if (index === 1) {\r\n                    return siblings[0].getTokens().concat(tokens);\r\n                }\r\n                else {\r\n                    return this.getTokens().concat(tokens);\r\n                }\r\n            }\r\n            // Another thing I don't like.\r\n            if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.indexOf(\"and\")) === 0 &&\r\n                nextSibling != null &&\r\n                ((_c = nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.type) === null || _c === void 0 ? void 0 : _c.indexOf(\"optional\")) === 0) {\r\n                let tokens = [];\r\n                for (let x = index + 1; x < siblings.length; x++) {\r\n                    const child = siblings[x];\r\n                    if (child.type.indexOf(\"optional\") === 0) {\r\n                        tokens = tokens.concat(child.getTokens());\r\n                    }\r\n                    else {\r\n                        tokens = tokens.concat(child.getTokens());\r\n                        break;\r\n                    }\r\n                    if (x === siblings.length - 1) {\r\n                        tokens = tokens.concat(this._parent.getNextTokens());\r\n                    }\r\n                }\r\n                return tokens;\r\n            }\r\n            // If you are an or you have already qualified.\r\n            if (parent.type.indexOf(\"or\") === 0) {\r\n                return parent.getNextTokens();\r\n            }\r\n            if (nextSibling != null) {\r\n                return nextSibling.getTokens();\r\n            }\r\n            else {\r\n                return parent.getNextTokens();\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    getTokenValue() {\r\n        return null;\r\n    }\r\n}\n\nclass ValuePattern extends Pattern {\r\n    constructor(type, name, children = []) {\r\n        super(type, name, children);\r\n    }\r\n}\n\nclass RegexValue extends ValuePattern {\r\n    constructor(name, regex) {\r\n        super(\"regex-value\", name);\r\n        this.node = null;\r\n        this.substring = \"\";\r\n        this.regexString = regex;\r\n        this.regex = new RegExp(`^${regex}`, \"g\");\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.regexString !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The regex argument needs to be a string of regex.\");\r\n        }\r\n        if (this.regexString.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The regex string argument needs to be at least one character long.\");\r\n        }\r\n        if (this.regexString.charAt(0) === \"^\") {\r\n            throw new Error(\"Invalid Arguments: The regex string cannot start with a '^' because it is expected to be in the middle of a string.\");\r\n        }\r\n        if (this.regexString.charAt(this.regexString.length - 1) === \"$\") {\r\n            throw new Error(\"Invalid Arguments: The regex string cannot end with a '$' because it is expected to be in the middle of a string.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.regex.lastIndex = 0;\r\n        this.substring = this.cursor.text.substr(this.cursor.getIndex());\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        const result = this.regex.exec(this.substring);\r\n        if (result != null && result.index === 0) {\r\n            const currentIndex = this.cursor.getIndex();\r\n            const newIndex = currentIndex + result[0].length - 1;\r\n            this.node = new ValueNode(\"regex-value\", this.name, result[0], currentIndex, newIndex);\r\n            this.cursor.index = newIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected regex pattern of '${this.regexString}' but found '${this.substring}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RegexValue(name, this.regexString);\r\n    }\r\n    getTokenValue() {\r\n        return this.name;\r\n    }\r\n    getTokens() {\r\n        return [this.name];\r\n    }\r\n}\n\nclass OptionalValue extends ValuePattern {\r\n    constructor(pattern) {\r\n        super(\"optional-value\", \"optional-value\", [pattern]);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (!(this.children[0] instanceof ValuePattern)) {\r\n            throw new Error(\"Invalid Arguments: Expected a ValuePattern.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        const mark = cursor.mark();\r\n        const node = this.children[0].parse(cursor);\r\n        if (cursor.hasUnresolvedError() || node == null) {\r\n            cursor.resolveError();\r\n            cursor.moveToMark(mark);\r\n            return null;\r\n        }\r\n        else {\r\n            cursor.addMatch(this, node);\r\n            return node;\r\n        }\r\n    }\r\n    clone() {\r\n        return new OptionalValue(this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass AndValue extends ValuePattern {\r\n    constructor(name, patterns) {\r\n        super(\"and-value\", name, patterns);\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: AndValue needs to have more than one value pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPatterns();\r\n        return this.node;\r\n    }\r\n    _tryPatterns() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n            }\r\n            if (!this._next()) {\r\n                this._processValue();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    _next() {\r\n        if (this._hasMorePatterns()) {\r\n            if (this.cursor.hasNext()) {\r\n                // If the last result was a failed optional, then don't increment the cursor.\r\n                if (this.nodes[this.nodes.length - 1] != null) {\r\n                    this.cursor.next();\r\n                }\r\n                this.index++;\r\n                return true;\r\n            }\r\n            else if (this.nodes[this.nodes.length - 1] == null) {\r\n                this.index++;\r\n                return true;\r\n            }\r\n            this._assertRestOfPatternsAreOptional();\r\n            return false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _hasMorePatterns() {\r\n        return this.index + 1 < this._children.length;\r\n    }\r\n    _assertRestOfPatternsAreOptional() {\r\n        const areTheRestOptional = this.children.every((pattern, index) => {\r\n            return index <= this.index || pattern instanceof OptionalValue;\r\n        });\r\n        if (!areTheRestOptional) {\r\n            const parseError = new ParseError(`Could not match ${this.name} before string ran out.`, this.index, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n    }\r\n    _processValue() {\r\n        if (this.cursor.hasUnresolvedError()) {\r\n            this.node = null;\r\n        }\r\n        else {\r\n            this.nodes = this.nodes.filter((node) => node != null);\r\n            const lastNode = this.nodes[this.nodes.length - 1];\r\n            const startIndex = this.mark;\r\n            const endIndex = lastNode.endIndex;\r\n            const value = this.nodes.map((node) => node.value).join(\"\");\r\n            this.node = new ValueNode(\"and-value\", this.name, value, startIndex, endIndex);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AndValue(name, this._children);\r\n    }\r\n    getTokens() {\r\n        let tokens = [];\r\n        for (let x = 0; x < this._children.length; x++) {\r\n            const child = this._children[x];\r\n            if (child instanceof OptionalValue) {\r\n                tokens = tokens.concat(child.getTokens());\r\n            }\r\n            else {\r\n                tokens = tokens.concat(child.getTokens());\r\n                break;\r\n            }\r\n        }\r\n        return tokens;\r\n    }\r\n}\n\nclass AnyOfThese extends ValuePattern {\r\n    constructor(name, characters) {\r\n        super(\"any-of-these\", name);\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.characters = characters;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.characters !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The characters argument needs to be a string of characters.\");\r\n        }\r\n        if (this.characters.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The characters argument needs to be at least one character long.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        if (this._isMatch()) {\r\n            const value = this.cursor.getChar();\r\n            const index = this.cursor.getIndex();\r\n            this.node = new ValueNode(\"any-of-these\", this.name, value, index, index);\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _isMatch() {\r\n        return this.characters.indexOf(this.cursor.getChar()) > -1;\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected one of these characters, '${this.characters}' but found '${this.cursor.getChar()}' while parsing for '${this.name}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AnyOfThese(name, this.characters);\r\n    }\r\n    getTokens() {\r\n        return this.characters.split(\"\");\r\n    }\r\n}\n\nclass Literal extends ValuePattern {\r\n    constructor(name, literal) {\r\n        super(\"literal\", name);\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.substring = \"\";\r\n        this.literal = literal;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.literal !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The literal argument needs to be a string of characters.\");\r\n        }\r\n        if (this.literal.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The literalString argument needs to be at least one character long.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n        this.substring = this.cursor.text.substring(this.mark, this.mark + this.literal.length);\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        if (this.substring === this.literal) {\r\n            this._processMatch();\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected '${this.literal}' but found '${this.substring}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    _processMatch() {\r\n        this.node = new ValueNode(\"literal\", this.name, this.substring, this.mark, this.mark + this.literal.length - 1);\r\n        this.cursor.index = this.node.endIndex;\r\n        this.cursor.addMatch(this, this.node);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new Literal(name, this.literal);\r\n    }\r\n    getTokenValue() {\r\n        return this.literal;\r\n    }\r\n    getTokens() {\r\n        return [this.getTokenValue()];\r\n    }\r\n}\n\nclass NotValue extends ValuePattern {\r\n    constructor(name, pattern) {\r\n        super(\"not-value\", name, [pattern]);\r\n        this.match = \"\";\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (!(this.children[0] instanceof Pattern)) {\r\n            throw new Error(\"Invalid Arguments: Expected the pattern to be a ValuePattern.\");\r\n        }\r\n        if (typeof this.name !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: Expected name to be a string.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.match = \"\";\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const mark = this.cursor.mark();\r\n            this.children[0].parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this.cursor.resolveError();\r\n                this.cursor.moveToMark(mark);\r\n                this.match += this.cursor.getChar();\r\n                break;\r\n            }\r\n            else {\r\n                this.cursor.moveToMark(mark);\r\n                break;\r\n            }\r\n        }\r\n        this._processMatch();\r\n    }\r\n    _processMatch() {\r\n        if (this.match.length === 0) {\r\n            const parseError = new ParseError(`Didn't find any characters that didn't match the ${this.children[0].name} pattern.`, this.mark, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n        else {\r\n            this.node = new ValueNode(\"not-value\", this.name, this.match, this.mark, this.mark);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new NotValue(name, this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return [];\r\n    }\r\n}\n\nclass OrValue extends ValuePattern {\r\n    constructor(name, patterns) {\r\n        super(\"or-value\", name, patterns);\r\n        this.index = 0;\r\n        this.errors = [];\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.parseError = null;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: OrValue needs to have more than one value pattern.\");\r\n        }\r\n        const hasOptionalChildren = this._children.some((pattern) => pattern instanceof OptionalValue);\r\n        if (hasOptionalChildren) {\r\n            throw new Error(\"OrValues cannot have optional values.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.errors = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                if (this.index + 1 < this._children.length) {\r\n                    this.cursor.resolveError();\r\n                    this.index++;\r\n                    this.cursor.moveToMark(this.mark);\r\n                }\r\n                else {\r\n                    this.node = null;\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                this.node = new ValueNode(\"or-value\", this.name, node.value, node.startIndex, node.endIndex);\r\n                this.cursor.index = this.node.endIndex;\r\n                this.cursor.addMatch(this, this.node);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new OrValue(name, this._children);\r\n    }\r\n    getTokens() {\r\n        const tokens = this._children.map((c) => c.getTokens());\r\n        const hasPrimitiveTokens = tokens.every((t) => t.every((value) => typeof value === \"string\"));\r\n        if (hasPrimitiveTokens && tokens.length > 0) {\r\n            return tokens.reduce((acc, t) => acc.concat(t), []);\r\n        }\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass RepeatValue extends ValuePattern {\r\n    constructor(name, pattern, divider) {\r\n        super(\"repeat-value\", name, divider != null ? [pattern, divider] : [pattern]);\r\n        this.nodes = [];\r\n        this.mark = 0;\r\n        this.node = null;\r\n        this._pattern = this.children[0];\r\n        this._divider = this.children[1];\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._pattern instanceof OptionalValue) {\r\n            throw new Error(\"Invalid Arguments: The pattern cannot be a optional pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.nodes = [];\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const node = this._pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this._processMatch();\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n                if (node.endIndex === this.cursor.lastIndex()) {\r\n                    this._processMatch();\r\n                    break;\r\n                }\r\n                this.cursor.next();\r\n                if (this._divider != null) {\r\n                    const mark = this.cursor.mark();\r\n                    const node = this._divider.parse(this.cursor);\r\n                    if (this.cursor.hasUnresolvedError()) {\r\n                        this.cursor.moveToMark(mark);\r\n                        this._processMatch();\r\n                        break;\r\n                    }\r\n                    else {\r\n                        this.nodes.push(node);\r\n                        this.cursor.next();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _processMatch() {\r\n        this.cursor.resolveError();\r\n        if (this.nodes.length === 0) {\r\n            const parseError = new ParseError(`Did not find a repeating match of ${this.name}.`, this.mark, this);\r\n            this.cursor.throwError(parseError);\r\n            this.node = null;\r\n        }\r\n        else {\r\n            const value = this.nodes.map((node) => node.value).join(\"\");\r\n            this.node = new ValueNode(\"repeat-value\", this.name, value, this.nodes[0].startIndex, this.nodes[this.nodes.length - 1].endIndex);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RepeatValue(name, this._pattern, this._divider);\r\n    }\r\n    getTokens() {\r\n        return this._pattern.getTokens();\r\n    }\r\n}\n\nclass CompositePattern extends Pattern {\r\n    constructor(type, name, children = []) {\r\n        super(type, name, children);\r\n    }\r\n}\n\nclass OptionalComposite extends CompositePattern {\r\n    constructor(pattern) {\r\n        super(\"optional-composite\", \"optional-composite\", [pattern]);\r\n    }\r\n    parse(cursor) {\r\n        const mark = cursor.mark();\r\n        this.mark = mark;\r\n        const node = this.children[0].parse(cursor);\r\n        if (cursor.hasUnresolvedError()) {\r\n            cursor.resolveError();\r\n            cursor.moveToMark(mark);\r\n            return null;\r\n        }\r\n        else {\r\n            if (node != null) {\r\n                cursor.addMatch(this, node);\r\n            }\r\n            return node;\r\n        }\r\n    }\r\n    clone() {\r\n        return new OptionalComposite(this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass AndComposite extends CompositePattern {\r\n    constructor(name, patterns = []) {\r\n        super(\"and-composite\", name, patterns);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: AndValue needs to have more than one value pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPatterns();\r\n        return this.node;\r\n    }\r\n    _tryPatterns() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this.cursor.moveToMark(this.mark);\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n            }\r\n            if (!this._next()) {\r\n                this._processValue();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    _next() {\r\n        if (this._hasMorePatterns()) {\r\n            if (this.cursor.hasNext()) {\r\n                // If the last result was a failed optional, then don't increment the cursor.\r\n                if (this.nodes[this.nodes.length - 1] != null) {\r\n                    this.cursor.next();\r\n                }\r\n                this.index++;\r\n                return true;\r\n            }\r\n            else if (this.nodes[this.nodes.length - 1] == null) {\r\n                this.index++;\r\n                return true;\r\n            }\r\n            this._assertRestOfPatternsAreOptional();\r\n            return false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _hasMorePatterns() {\r\n        return this.index + 1 < this._children.length;\r\n    }\r\n    _assertRestOfPatternsAreOptional() {\r\n        const areTheRestOptional = this.children.every((pattern, index) => {\r\n            return (index <= this.index ||\r\n                pattern instanceof OptionalValue ||\r\n                pattern instanceof OptionalComposite);\r\n        });\r\n        if (!areTheRestOptional) {\r\n            const parseError = new ParseError(`Could not match ${this.name} before string ran out.`, this.index, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n    }\r\n    _processValue() {\r\n        if (!this.cursor.hasUnresolvedError()) {\r\n            this.nodes = this.nodes.filter((node) => node != null);\r\n            const lastNode = this.nodes[this.nodes.length - 1];\r\n            const startIndex = this.mark;\r\n            const endIndex = lastNode.endIndex;\r\n            this.node = new CompositeNode(\"and-composite\", this.name, startIndex, endIndex);\r\n            this.node.children = this.nodes;\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this.node = null;\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AndComposite(name, this._children);\r\n    }\r\n    getTokens() {\r\n        let tokens = [];\r\n        for (let x = 0; x < this._children.length; x++) {\r\n            const child = this._children[x];\r\n            if (child instanceof OptionalValue ||\r\n                child instanceof OptionalComposite) {\r\n                tokens = tokens.concat(child.getTokens());\r\n            }\r\n            else {\r\n                tokens = tokens.concat(child.getTokens());\r\n                break;\r\n            }\r\n        }\r\n        return tokens;\r\n    }\r\n}\n\nclass OrComposite extends CompositePattern {\r\n    constructor(name, patterns) {\r\n        super(\"or-composite\", name, patterns);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: OrValue needs to have more than one value pattern.\");\r\n        }\r\n        const hasOptionalChildren = this._children.some((pattern) => pattern instanceof OptionalValue || pattern instanceof OptionalComposite);\r\n        if (hasOptionalChildren) {\r\n            throw new Error(\"OrComposite cannot have optional values.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = null;\r\n        this.index = 0;\r\n        this.node = null;\r\n        this.mark = cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        if (this.node != null) {\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            this.node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                if (this.index + 1 < this._children.length) {\r\n                    this.cursor.resolveError();\r\n                    this.index++;\r\n                    this.cursor.moveToMark(this.mark);\r\n                }\r\n                else {\r\n                    this.node = null;\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                this.cursor.index = this.node.endIndex;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new OrComposite(name, this._children);\r\n    }\r\n    getTokens() {\r\n        const tokens = this._children.map((c) => c.getTokens());\r\n        const hasPrimitiveTokens = tokens.every((t) => t.every((value) => typeof value === \"string\"));\r\n        if (hasPrimitiveTokens && tokens.length > 0) {\r\n            return tokens.reduce((acc, t) => acc.concat(t), []);\r\n        }\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass RepeatComposite extends CompositePattern {\r\n    constructor(name, pattern, divider) {\r\n        super(\"repeat-composite\", name, divider != null ? [pattern, divider] : [pattern]);\r\n        this.nodes = [];\r\n        this.mark = 0;\r\n        this.node = null;\r\n        this._pattern = this.children[0];\r\n        this._divider = this.children[1];\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._pattern instanceof OptionalComposite) {\r\n            throw new Error(\"Invalid Arguments: The pattern cannot be a optional pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.nodes = [];\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const node = this._pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError() || node == null) {\r\n                this._processMatch();\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n                if (node.endIndex === this.cursor.lastIndex()) {\r\n                    this._processMatch();\r\n                    break;\r\n                }\r\n                this.cursor.next();\r\n                if (this._divider != null) {\r\n                    const mark = this.cursor.mark();\r\n                    const node = this._divider.parse(this.cursor);\r\n                    if (this.cursor.hasUnresolvedError() || node == null) {\r\n                        this.cursor.moveToMark(mark);\r\n                        this._processMatch();\r\n                        break;\r\n                    }\r\n                    else {\r\n                        this.nodes.push(node);\r\n                        this.cursor.next();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _processMatch() {\r\n        this.cursor.resolveError();\r\n        if (this.nodes.length === 0) {\r\n            this.cursor.throwError(new ParseError(`Did not find a repeating match of ${this.name}.`, this.mark, this));\r\n            this.node = null;\r\n        }\r\n        else {\r\n            this.node = new CompositeNode(\"repeat-composite\", this.name, this.nodes[0].startIndex, this.nodes[this.nodes.length - 1].endIndex);\r\n            this.node.children = this.nodes;\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RepeatComposite(name, this._pattern, this._divider);\r\n    }\r\n    getTokens() {\r\n        return this._pattern.getTokens();\r\n    }\r\n}\n\nclass RecursivePattern extends Pattern {\r\n    constructor(name) {\r\n        super(\"recursive\", name);\r\n        this.pattern = null;\r\n        this.isRecursing = false;\r\n    }\r\n    getPattern() {\r\n        return this._climb(this.parent, (pattern) => {\r\n            if (pattern == null) {\r\n                return false;\r\n            }\r\n            return pattern.name === this.name;\r\n        });\r\n    }\r\n    _climb(pattern, isMatch) {\r\n        if (isMatch(pattern)) {\r\n            return pattern;\r\n        }\r\n        else {\r\n            if (pattern && pattern.parent != null) {\r\n                return this._climb(pattern.parent, isMatch);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        if (this.pattern == null) {\r\n            const pattern = this.getPattern();\r\n            if (pattern == null) {\r\n                cursor.throwError(new ParseError(`Couldn't find parent pattern to recursively parse, with the name ${this.name}.`, cursor.index, this));\r\n                return null;\r\n            }\r\n            this.pattern = pattern.clone();\r\n            this.pattern.parent = this;\r\n        }\r\n        const node = this.pattern.parse(cursor);\r\n        if (!cursor.hasUnresolvedError() && node != null) {\r\n            cursor.addMatch(this, node);\r\n        }\r\n        return node;\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RecursivePattern(name);\r\n    }\r\n    getTokenValue() {\r\n        var _a;\r\n        return ((_a = this.getPattern()) === null || _a === void 0 ? void 0 : _a.getTokenValue()) || null;\r\n    }\r\n    getTokens() {\r\n        var _a;\r\n        if (!this.isRecursing) {\r\n            this.isRecursing = true;\r\n            const tokens = ((_a = this.getPattern()) === null || _a === void 0 ? void 0 : _a.getTokens()) || [];\r\n            this.isRecursing = false;\r\n            return tokens;\r\n        }\r\n        return [];\r\n    }\r\n}\n\nclass TextSuggester {\r\n    constructor() {\r\n        this.cursor = null;\r\n        this.result = null;\r\n        this.text = \"\";\r\n        this.match = null;\r\n        this.error = null;\r\n        this.patternMatch = null;\r\n        this.matchedText = \"\";\r\n        this.rootPattern = null;\r\n        this.tokens = {\r\n            startIndex: 0,\r\n            values: [],\r\n        };\r\n        this.options = [];\r\n        this.parseStack = [];\r\n    }\r\n    suggest(text, pattern) {\r\n        var _a, _b, _c;\r\n        this.reset();\r\n        this.text = text;\r\n        this.rootPattern = pattern;\r\n        // If no text all options are available.\r\n        if (text.length === 0) {\r\n            return {\r\n                pattern: null,\r\n                astNode: null,\r\n                match: null,\r\n                error: null,\r\n                options: {\r\n                    startIndex: 0,\r\n                    values: pattern.getTokens(),\r\n                },\r\n                isComplete: false,\r\n                parseStack: [],\r\n            };\r\n        }\r\n        this.parse();\r\n        this.saveParseStack();\r\n        this.saveMatchedText();\r\n        this.saveMatch();\r\n        this.saveError();\r\n        this.saveOptions();\r\n        this.saveNextToken();\r\n        return {\r\n            pattern: ((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.pattern) || null,\r\n            astNode: ((_b = this.patternMatch) === null || _b === void 0 ? void 0 : _b.astNode) || null,\r\n            match: this.match,\r\n            error: this.error,\r\n            options: this.tokens,\r\n            isComplete: ((_c = this.cursor) === null || _c === void 0 ? void 0 : _c.didSuccessfullyParse()) || false,\r\n            parseStack: this.parseStack,\r\n        };\r\n    }\r\n    reset() {\r\n        this.cursor = null;\r\n        this.result = null;\r\n        this.text = \"\";\r\n        this.match = null;\r\n        this.error = null;\r\n        this.patternMatch = null;\r\n        this.matchedText = \"\";\r\n        this.rootPattern = null;\r\n        this.tokens = {\r\n            startIndex: 0,\r\n            values: [],\r\n        };\r\n        this.options = [];\r\n        this.parseStack = [];\r\n    }\r\n    parse() {\r\n        var _a;\r\n        this.rootPattern = this.rootPattern;\r\n        this.cursor = new Cursor(this.text || \"\");\r\n        this.cursor.startRecording();\r\n        this.result = ((_a = this.rootPattern) === null || _a === void 0 ? void 0 : _a.parse(this.cursor)) || null;\r\n        this.patternMatch = this.cursor.lastMatch;\r\n    }\r\n    saveParseStack() {\r\n        var _a;\r\n        this.parseStack = ((_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.getLastParseStack()) || [];\r\n    }\r\n    saveMatchedText() {\r\n        var _a, _b;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode) != null) {\r\n            this.matchedText =\r\n                ((_b = this.text) === null || _b === void 0 ? void 0 : _b.substring(0, this.patternMatch.astNode.endIndex + 1)) || \"\";\r\n        }\r\n    }\r\n    saveMatch() {\r\n        var _a;\r\n        const node = (_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode;\r\n        if (node == null) {\r\n            this.match = null;\r\n            return;\r\n        }\r\n        let endIndex = this.matchedText.length - 1;\r\n        this.match = {\r\n            text: this.matchedText,\r\n            startIndex: 0,\r\n            endIndex: endIndex,\r\n        };\r\n    }\r\n    saveError() {\r\n        var _a;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode) == null) {\r\n            this.error = {\r\n                startIndex: 0,\r\n                endIndex: this.text.length - 1,\r\n                text: this.text,\r\n            };\r\n            return this;\r\n        }\r\n        if (this.patternMatch != null &&\r\n            this.text.length > this.matchedText.length) {\r\n            const difference = this.text.length - this.matchedText.length;\r\n            const startIndex = this.patternMatch.astNode.endIndex + 1;\r\n            const endIndex = startIndex + difference - 1;\r\n            this.error = {\r\n                startIndex: startIndex,\r\n                endIndex: endIndex,\r\n                text: this.text.substring(startIndex, endIndex + 1),\r\n            };\r\n            return;\r\n        }\r\n        else {\r\n            this.error = null;\r\n            return;\r\n        }\r\n    }\r\n    saveNextToken() {\r\n        var _a, _b, _c, _d;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.pattern) === this.rootPattern &&\r\n            ((_b = this.cursor) === null || _b === void 0 ? void 0 : _b.didSuccessfullyParse())) {\r\n            this.tokens = null;\r\n            return;\r\n        }\r\n        if (((_c = this.patternMatch) === null || _c === void 0 ? void 0 : _c.astNode) == null) {\r\n            let options = (_d = this.rootPattern) === null || _d === void 0 ? void 0 : _d.getTokens();\r\n            const parts = this.text.split(\" \").filter((part) => {\r\n                return part.length > 0;\r\n            });\r\n            options = options === null || options === void 0 ? void 0 : options.filter((option) => {\r\n                return parts.some((part) => {\r\n                    return option.indexOf(part) > -1;\r\n                });\r\n            });\r\n            if ((options === null || options === void 0 ? void 0 : options.length) === 0) {\r\n                this.tokens = null;\r\n                return;\r\n            }\r\n            this.tokens = {\r\n                startIndex: 0,\r\n                values: options || [],\r\n            };\r\n            return;\r\n        }\r\n        const options = this.options;\r\n        let startIndex = this.matchedText.length;\r\n        if (this.matchedText.length < this.text.length) {\r\n            const leftOver = this.text.substring(this.matchedText.length);\r\n            const partialMatchOptions = options\r\n                .filter((option) => {\r\n                return option.indexOf(leftOver) === 0;\r\n            })\r\n                .map((option) => {\r\n                return option.substring(leftOver.length);\r\n            });\r\n            if (partialMatchOptions.length === 0) {\r\n                this.tokens = null;\r\n                return;\r\n            }\r\n            else {\r\n                if (this.match == null) {\r\n                    return;\r\n                }\r\n                this.match = {\r\n                    text: this.match.text + leftOver,\r\n                    startIndex: this.match.startIndex,\r\n                    endIndex: this.match.endIndex + leftOver.length,\r\n                };\r\n                this.error = null;\r\n                this.tokens = {\r\n                    startIndex: this.match.endIndex + 1,\r\n                    values: partialMatchOptions,\r\n                };\r\n                return;\r\n            }\r\n        }\r\n        this.tokens = {\r\n            startIndex,\r\n            values: options,\r\n        };\r\n    }\r\n    saveOptions() {\r\n        var _a;\r\n        const furthestMatches = (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.astNodes.reduce((acc, node, index) => {\r\n            if (node.endIndex === acc.furthestTextIndex) {\r\n                acc.nodeIndexes.push(index);\r\n            }\r\n            else if (node.endIndex > acc.furthestTextIndex) {\r\n                acc.furthestTextIndex = node.endIndex;\r\n                acc.nodeIndexes = [index];\r\n            }\r\n            return acc;\r\n        }, { furthestTextIndex: -1, nodeIndexes: [] });\r\n        const matches = furthestMatches.nodeIndexes.reduce((acc, index) => {\r\n            var _a;\r\n            const pattern = (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.patterns[index];\r\n            const tokens = pattern === null || pattern === void 0 ? void 0 : pattern.getNextTokens();\r\n            tokens === null || tokens === void 0 ? void 0 : tokens.forEach((token) => {\r\n                acc[token] = true;\r\n            });\r\n            return acc;\r\n        }, {});\r\n        this.options = Object.keys(matches);\r\n    }\r\n    static suggest(text, pattern) {\r\n        return new TextSuggester().suggest(text, pattern);\r\n    }\r\n}\n\nclass Visitor {\r\n    constructor(root = null, selectedNodes = []) {\r\n        this.root = root;\r\n        this.selectedNodes = selectedNodes;\r\n    }\r\n    flatten() {\r\n        this.selectedNodes.forEach((node) => {\r\n            if (node.isComposite) {\r\n                const children = [];\r\n                Visitor.walkUp(node, (descendant) => {\r\n                    if (!descendant.isComposite) {\r\n                        children.push(descendant);\r\n                    }\r\n                });\r\n                node.children = children;\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    remove() {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        this.recursiveRemove(this.root);\r\n        return this;\r\n    }\r\n    recursiveRemove(node) {\r\n        const nodesToRemove = this.selectedNodes;\r\n        if (node.isComposite && Array.isArray(node.children)) {\r\n            for (let x = 0; x < node.children.length; x++) {\r\n                if (nodesToRemove.indexOf(node.children[x]) > -1) {\r\n                    node.children.splice(x, 1);\r\n                    x--;\r\n                }\r\n                else {\r\n                    this.recursiveRemove(node.children[x]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    wrap(callback) {\r\n        const visitor = new Visitor(this.root);\r\n        visitor.selectRoot().transform((node) => {\r\n            if (this.selectedNodes.includes(node)) {\r\n                return callback(node);\r\n            }\r\n            return node;\r\n        });\r\n        return this;\r\n    }\r\n    unwrap() {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        Visitor.walkDown(this.root, (node, stack) => {\r\n            if (this.selectedNodes.includes(node)) {\r\n                const parent = stack[stack.length - 1];\r\n                const grandParent = stack[stack.length - 2];\r\n                if (parent != null && grandParent != null) {\r\n                    const index = grandParent.children.indexOf(parent);\r\n                    if (index > -1) {\r\n                        grandParent.children.splice(index, 1, ...parent.children);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    prepend(callback) {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        Visitor.walkUp(this.root, (node, stack) => {\r\n            if (this.selectedNodes.includes(node)) {\r\n                const parent = stack[stack.length - 1];\r\n                if (parent != null) {\r\n                    const index = parent.children.indexOf(node);\r\n                    if (index > -1) {\r\n                        parent.children.splice(index, 0, callback(node));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    append(callback) {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        Visitor.walkDown(this.root, (node, stack) => {\r\n            if (this.selectedNodes.includes(node)) {\r\n                const parent = stack[stack.length - 1];\r\n                if (parent != null) {\r\n                    const index = parent.children.indexOf(node);\r\n                    if (index > -1) {\r\n                        parent.children.splice(index + 1, 0, callback(node));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    transform(callback) {\r\n        this.selectedNodes.forEach((node) => {\r\n            return this.recursiveTransform(node, callback);\r\n        });\r\n        return this;\r\n    }\r\n    recursiveTransform(node, callback) {\r\n        if (node.isComposite && Array.isArray(node.children)) {\r\n            const length = node.children.length;\r\n            for (let x = 0; x < length; x++) {\r\n                node.children[x] = this.recursiveTransform(node.children[x], callback);\r\n            }\r\n        }\r\n        return callback(node);\r\n    }\r\n    selectAll() {\r\n        return this.select((n) => true);\r\n    }\r\n    selectNode(node) {\r\n        return new Visitor(this.root, [...this.selectedNodes, node]);\r\n    }\r\n    deselectNode(node) {\r\n        const visitor = new Visitor(this.root, this.selectedNodes.slice());\r\n        return visitor.filter((n) => n !== node);\r\n    }\r\n    select(callback) {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        const node = this.root;\r\n        const selectedNodes = [];\r\n        if (node.isComposite) {\r\n            Visitor.walkDown(node, (descendant) => {\r\n                if (callback(descendant)) {\r\n                    selectedNodes.push(descendant);\r\n                }\r\n            });\r\n        }\r\n        return new Visitor(this.root, selectedNodes);\r\n    }\r\n    forEach(callback) {\r\n        this.selectedNodes.forEach(callback);\r\n        return this;\r\n    }\r\n    filter(callback) {\r\n        return new Visitor(this.root, this.selectedNodes.filter(callback));\r\n    }\r\n    map(callback) {\r\n        return new Visitor(this.root, this.selectedNodes.map(callback));\r\n    }\r\n    selectRoot() {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        return new Visitor(this.root, [this.root]);\r\n    }\r\n    first() {\r\n        return this.get(0);\r\n    }\r\n    last() {\r\n        return this.get(this.selectedNodes.length - 1);\r\n    }\r\n    get(index) {\r\n        const node = this.selectedNodes[index];\r\n        if (node == null) {\r\n            throw new Error(`Couldn't find node at index: ${index}, out of ${this.selectedNodes.length}.`);\r\n        }\r\n        return new Visitor(node, []);\r\n    }\r\n    clear() {\r\n        this.selectedNodes = [];\r\n        return this;\r\n    }\r\n    setRoot(root) {\r\n        this.root = root;\r\n        return this;\r\n    }\r\n    static select(root, callback) {\r\n        if (callback != null) {\r\n            return new Visitor(root).select(callback);\r\n        }\r\n        else {\r\n            return new Visitor(root);\r\n        }\r\n    }\r\n    static walkUp(node, callback, ancestors = []) {\r\n        ancestors.push(node);\r\n        if (node.isComposite && Array.isArray(node.children)) {\r\n            const children = node.children.slice();\r\n            children.forEach((c) => this.walkUp(c, callback, ancestors));\r\n        }\r\n        ancestors.pop();\r\n        callback(node, ancestors);\r\n        return this;\r\n    }\r\n    static walkDown(node, callback, ancestors = []) {\r\n        callback(node, ancestors);\r\n        ancestors.push(node);\r\n        if (node.isComposite && Array.isArray(node.children)) {\r\n            const children = node.children.slice();\r\n            children.forEach((c) => this.walkDown(c, callback, ancestors));\r\n        }\r\n        ancestors.pop();\r\n        return this;\r\n    }\r\n}\n\nexport { AndComposite, AndValue, AnyOfThese, CompositeNode, CompositePattern, Cursor, Literal, Node, NotValue, OptionalComposite, OptionalValue, OrComposite, OrValue, ParseError, Pattern, RecursivePattern, RegexValue, RepeatComposite, RepeatValue, TextSuggester, ValueNode, ValuePattern, Visitor };\n//# sourceMappingURL=index.esm.js.map\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst divider = new RegexValue(\"divider\", \"\\\\s*[,]\\\\s*\");\n\nexport default divider;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst number = new RegexValue(\n  \"number\",\n  \"[-+]?[0-9]*[.]?[0-9]+([eE][-+]?[0-9]+)?\"\n);\n\nexport default number;\n","import { AndComposite, RegexValue } from \"clarity-pattern-parser\";\n\nimport number from \"./number\";\n\nconst unitType = new RegexValue(\"unit-type\", \"[a-zA-Z%]+\");\nconst unit = new AndComposite(\"unit\", [number, unitType]);\n\nexport default unit;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst hex = new RegexValue(\"hex\", \"#[0-9a-fA-F]{6}|#[0-9a-fA-F]{3}\");\n\nexport default hex;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst name = new RegexValue(\"name\", \"[a-zA-Z]+[a-zA-Z0-9_-]*\");\n\nexport default name;\n","import { Literal, RepeatValue } from \"clarity-pattern-parser\";\nimport { OptionalValue } from \"clarity-pattern-parser\";\n\nconst space = new Literal(\"optional-space\", \" \");\nconst spaces = new RepeatValue(\"optional-spaces\", space);\nconst optionalSpaces = new OptionalValue(spaces);\n\nexport default optionalSpaces;\n","import {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n  RecursivePattern,\n  OptionalComposite,\n} from \"clarity-pattern-parser\";\n\nimport name from \"./name\";\nimport optionalSpaces from \"./optionalSpaces\";\nimport divider from \"./divider\";\n\nconst openParen = new Literal(\"open-paren\", \"(\");\nconst closeParen = new Literal(\"close-paren\", \")\");\nconst values = new RecursivePattern(\"values\");\nconst args = new RepeatComposite(\"arguments\", values, divider);\nconst optionalArgs = new OptionalComposite(args);\n\nconst method = new AndComposite(\"method\", [\n  name,\n  openParen,\n  optionalSpaces,\n  optionalArgs,\n  optionalSpaces,\n  closeParen,\n]);\n\nexport default method;\n","import divider from \"./divider\";\nimport number from \"./number\";\nimport optionalSpaces from \"./optionalSpaces\";\n\nimport {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n} from \"clarity-pattern-parser\";\n\nconst openBracket = new Literal(\"open-square-bracket\", \"[\");\nconst closeBracket = new Literal(\"close-square-bracket\", \"]\");\nconst items = new RepeatComposite(\"items\", number, divider);\n\nconst array = new AndComposite(\"array\", [\n  openBracket,\n  optionalSpaces,\n  items,\n  optionalSpaces,\n  closeBracket,\n]);\n\nexport default array;\n","import { Literal, RepeatValue } from \"clarity-pattern-parser\";\n\nconst space = new Literal(\"space\", \" \");\nconst spaces = new RepeatValue(\"spaces\", space);\n\nexport default spaces;\n","import { AndComposite, OrComposite, RegexValue } from \"clarity-pattern-parser\";\nimport spaces from \"./spaces\";\nimport unit from \"./unit\";\nimport method from \"./method\";\n\nconst operator = new RegexValue(\"operator\", \"[\\\\+\\\\-\\\\*\\\\/]\");\nconst value = new OrComposite(\"value\", [unit, method]);\nconst expression = new AndComposite(\"expression\", [\n  value,\n  spaces,\n  operator,\n  spaces,\n  value,\n]);\n\nexport default expression;\n","import { OrComposite } from \"clarity-pattern-parser\";\nimport unit from \"./unit\";\nimport hex from \"./hex\";\nimport number from \"./number\";\nimport method from \"./method\";\nimport name from \"./name\";\nimport array from \"./array\";\nimport expression from \"./expression\";\n\nconst value = new OrComposite(\"value\", [\n  array,\n  hex,\n  expression,\n  method,\n  unit,\n  number,\n  name,\n]);\n\nexport default value;\n","import { RepeatComposite } from \"clarity-pattern-parser\";\nimport value from \"./value\";\nimport spaces from \"./spaces\";\n\nconst values = new RepeatComposite(\"values\", value, spaces);\n\nexport default values;\n","import { RepeatComposite } from \"clarity-pattern-parser\";\nimport divider from \"./divider\";\nimport values from \"./values\";\n\nconst cssValue = new RepeatComposite(\"css-value\", values, divider);\n\nexport default cssValue;\n","import { Visitor } from \"clarity-pattern-parser\";\nimport easings from \"./easings\";\nimport Keyframe, { KeyframeConfig } from \"./Keyframe\";\nimport cssValue from \"./patterns/cssValue\";\n\nconst visitor = new Visitor();\n\nconst convertValue = (value: string) => {\n  const node = cssValue.exec(String(value));\n  if (node == null) {\n    return [];\n  }\n\n  visitor\n    .setRoot(node)\n    .selectRoot()\n    .flatten()\n    .clear()\n    .select((n) => n.name === \"optional-spaces\")\n    .remove()\n    .clear()\n    .select((n) => n.name === \"spaces\")\n    .transform((n) => {\n      n.value = \" \";\n      return n;\n    });\n\n  return node.children.map((n) => {\n    if (n.name === \"number\") {\n      return parseFloat(n.value);\n    } else {\n      return n.value;\n    }\n  });\n};\n\nexport default class CssKeyframe extends Keyframe<(string | number)[]> {\n  constructor({\n    from,\n    to,\n    easing = easings.linear,\n    controls = [],\n    ...config\n  }: KeyframeConfig<string>) {\n    const toValue = convertValue(to);\n    const fromValue = convertValue(from);\n    const controlsValues = controls.map((c) => convertValue(c));\n\n    super({\n      ...config,\n      from: fromValue,\n      to: toValue,\n      controls: controlsValues,\n      easing,\n    });\n  }\n\n\n}","import BezierCurve from \"./BezierCurve\";\n\nexport const easingOutMap = {\n  linear: [1],\n  quad: [1, 1],\n  cubic: [1, 1, 1],\n  quart: [1, 1, 1, 1],\n  back: [2, 1, 1],\n  quint: [1, 1, 1, 1, 1],\n  expo: [1, 1, 1, 1, 1, 1],\n  circ: [0.65, 0.75, 0.85, 0.95, 1, 1, 1, 1],\n  elastic: [2, 2, -1, 1.5, 1.5, 0.75, 1.25, 0.85, 1, 1, 1],\n};\n\nexport const easingInMap = {\n  linear: [0],\n  quad: [0, 0],\n  cubic: [0, 0, 0],\n  quart: [0, 0, 0, 0],\n  back: [0, 0, -1],\n  quint: [0, 0, 0, 0, 0],\n  expo: [0, 0, 0, 0, 0, 0],\n  circ: [0, 0, 0, 0, 0.05, 0.15, 0.25, 0.35],\n  elastic: [0, 0, 0, 0.15, -0.25, 0.25, -0.5, -0.5, 2, -1, -1],\n};\n\nexport type DynamicEasingNames = keyof typeof easingInMap;\n\nexport default function createDynamicEasing(\n  easingIn: DynamicEasingNames,\n  easingOut: DynamicEasingNames\n) {\n  const points = [...easingInMap[easingIn], ...easingOutMap[easingOut]];\n  const bezierCurve = new BezierCurve(points);\n\n  return (percentage: number) => {\n    return bezierCurve.valueAt(percentage);\n  };\n}\n","import createDynamicEasing, { DynamicEasingNames } from \"./createDynamicEasing\";\nimport CssKeyframe from \"./CssKeyframe\";\n\nexport type ICssAnimatedProperties<T> = {\n  [P in keyof T]: T[P] | ICssPercentageKeyframes<T[P]>;\n};\n\nexport interface ICssPercentageKeyframes<TValue> {\n  [key: string]: TValue | ICssKeyframeControls<TValue>;\n  from: TValue | ICssKeyframeControls<TValue>;\n  to: TValue | ICssKeyframeControls<TValue>;\n}\n\nexport interface ICssKeyframeControls<TValue> {\n  value: TValue;\n  controlsIn?: TValue[];\n  controlsOut?: TValue[];\n  easeIn?: DynamicEasingNames;\n  easeOut?: DynamicEasingNames;\n}\n\nexport default class CSSKeyframesGenerator {\n  private transformValue: (value: any) => any = (value) => value;\n\n  setTransformValue(transformValue: (value: any) => any) {\n    this.transformValue = transformValue;\n  }\n\n  isComplexKeyframe(value: any) {\n    return value.hasOwnProperty(\"value\");\n  }\n\n  sortPercentages = (keyA: string, keyB: string) => {\n    if (keyA === \"from\") {\n      return -1;\n    }\n\n    if (keyB === \"from\") {\n      return 1;\n    }\n\n    if (keyA === \"to\") {\n      return 1;\n    }\n\n    if (keyB === \"to\") {\n      return -1;\n    }\n\n    const keyAParts = keyA.split(\"%\");\n    const keyBParts = keyB.split(\"%\");\n    const keyANumber = parseFloat(keyAParts[0]);\n    const keyBNumber = parseFloat(keyBParts[0]);\n\n    if (keyANumber < keyBNumber) {\n      return -1;\n    } else if (keyANumber > keyBNumber) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  getDecimalFromPercentage(percentage: string) {\n    if (percentage === \"to\") {\n      return 1;\n    }\n\n    if (percentage === \"from\") {\n      return 0;\n    }\n\n    const percentageParts = percentage.split(\"%\");\n    let decimal = parseFloat(percentageParts[0]) / 100;\n\n    if (isNaN(decimal)) {\n      throw new Error(\n        `Unknown keyframe step: ${decimal}. Expected format 10% or 10.01% etc`\n      );\n    }\n\n    decimal = Math.max(0, decimal);\n    decimal = Math.min(1, decimal);\n\n    return decimal;\n  }\n\n  getEaseIn<T>(currentValue: ICssKeyframeControls<T>) {\n    if (this.isComplexKeyframe(currentValue) && currentValue.easeOut != null) {\n      return currentValue.easeOut || \"linear\";\n    } else {\n      return \"linear\";\n    }\n  }\n\n  getEaseOut<T>(nextValue: ICssKeyframeControls<T>) {\n    if (this.isComplexKeyframe(nextValue) && nextValue.easeIn != null) {\n      return nextValue.easeIn || \"linear\";\n    } else {\n      return \"linear\";\n    }\n  }\n\n  getControlsIn<T>(currentValue: ICssKeyframeControls<T>) {\n    if (\n      this.isComplexKeyframe(currentValue) &&\n      Array.isArray(currentValue.controlsOut)\n    ) {\n      return currentValue.controlsOut.map((v) => this.transformValue(v));\n    } else {\n      return [];\n    }\n  }\n\n  getControlsOut<T>(nextValue: ICssKeyframeControls<T>) {\n    if (\n      this.isComplexKeyframe(nextValue) &&\n      Array.isArray(nextValue.controlsIn)\n    ) {\n      return nextValue.controlsIn.map((v) => this.transformValue(v));\n    } else {\n      return [];\n    }\n  }\n\n  getFrom<T>(currentValue: ICssKeyframeControls<T>) {\n    if (this.isComplexKeyframe(currentValue)) {\n      return this.transformValue(currentValue.value);\n    } else if (typeof currentValue === \"string\") {\n      return this.transformValue(currentValue);\n    } else {\n      if (typeof currentValue?.value === \"string\") {\n        throw new Error(\n          \"Invalid complex value, only found a value with no other complex settings.\"\n        );\n      }\n      throw new Error(`Unknown from value: ${JSON.stringify(currentValue)}`);\n    }\n  }\n\n  getTo<T>(nextValue: ICssKeyframeControls<T>) {\n    if (this.isComplexKeyframe(nextValue)) {\n      return this.transformValue(nextValue.value);\n    } else if (typeof nextValue === \"string\") {\n      return this.transformValue(nextValue);\n    } else {\n      if (typeof nextValue?.value === \"string\") {\n        throw new Error(\n          \"Invalid complex value, only found a value with no other complex settings.\"\n        );\n      }\n      throw new Error(`Unknown to value: ${JSON.stringify(nextValue)}`);\n    }\n  }\n\n  normalizePrimitiveValue<T>(value: T): ICssKeyframeControls<T> {\n    return {\n      value,\n    };\n  }\n\n  normalizeValue<T>(\n    value: T | ICssKeyframeControls<T>\n  ): ICssKeyframeControls<T> {\n    if (typeof value === \"string\" || typeof value === \"number\") {\n      return this.normalizePrimitiveValue(value);\n    } else {\n      return value as ICssKeyframeControls<T>;\n    }\n  }\n\n  normalizeKeyframeValue<T>(\n    value: T | ICssKeyframeControls<T> | ICssPercentageKeyframes<T>\n  ): ICssPercentageKeyframes<T> {\n    if (typeof value === \"string\" || typeof value === \"number\") {\n      return {\n        from: this.normalizePrimitiveValue(value),\n        to: this.normalizePrimitiveValue(value),\n      };\n    } else if (typeof value === \"object\" && value != null) {\n      const keyframes: any = value;\n      const keys = Object.keys(keyframes);\n      keys.forEach((key) => {\n        const keyframeValue = this.normalizeValue(keyframes[key]);\n        keyframeValue;\n      });\n\n      return value as ICssPercentageKeyframes<T>;\n    } else {\n      throw new Error(\"Unknown value type.\");\n    }\n  }\n\n  generate<T>(animatedProperties: ICssAnimatedProperties<T>) {\n    const animatedPropertyNames = Object.keys(\n      animatedProperties\n    ) as (keyof T)[];\n    const keyframes: CssKeyframe[] = [];\n\n    for (let x = 0; x < animatedPropertyNames.length; x++) {\n      const property = animatedPropertyNames[x];\n      let lastKeyFramePercentage = 0;\n      const keyframeValue = this.normalizeKeyframeValue(\n        animatedProperties[property]\n      );\n      const timeKeys = Object.keys(keyframeValue);\n      timeKeys.sort(this.sortPercentages);\n\n      for (let index = 0; index < timeKeys.length - 1; index++) {\n        const key = timeKeys[index];\n        const nextKey = timeKeys[index + 1];\n\n        const currentValue = this.normalizeValue(keyframeValue[key]);\n        const nextValue = this.normalizeValue(keyframeValue[nextKey]);\n        const startAt = lastKeyFramePercentage;\n        const endAt = this.getDecimalFromPercentage(timeKeys[index + 1]);\n\n        lastKeyFramePercentage = endAt;\n\n        const easingIn = this.getEaseIn(currentValue);\n        const easingOut = this.getEaseOut(nextValue);\n        const easing = createDynamicEasing(easingIn, easingOut);\n        const controlsIn = this.getControlsIn(currentValue);\n        const controlsOut = this.getControlsOut(nextValue);\n        const controls = [...controlsIn, ...controlsOut];\n        const from = this.getFrom(currentValue);\n        const to = this.getTo(nextValue);\n\n        const keyframe = new CssKeyframe({\n          property: property.toString(),\n          from,\n          to,\n          controls,\n          easing,\n          startAt,\n          endAt,\n        });\n\n        keyframes.push(keyframe);\n      }\n    }\n    return keyframes;\n  }\n}\n","import easings from \"./easings\";\nimport Keyframe from \"./Keyframe\";\nimport Animation, { IAnimation } from \"./Animation\";\nimport ObjectOperator from \"./ObjectOperator\";\nimport { deepClone } from \"./deepClone\";\n\nconst nullableAnimation = new Animation(\"null\", [\n  new Keyframe({ from: 0, to: 0, property: \"null\" }),\n]);\n\nconst objectOperator = new ObjectOperator();\n\nconst FORWARD = 1;\n\nexport default class SlopeAnimationBuilder {\n  private direction = 0;\n  private newDuration = 0;\n  private duration = 0;\n  private offset = 0;\n  public delta = 0.01;\n  private animation: IAnimation<any> = nullableAnimation;\n  private slopeAnimation!: IAnimation<any>;\n  private deltaStepValues: any;\n  private deltaValues: any;\n  private nowValues: any;\n  private toValues: any;\n  private scaleValues: any;\n  private dynamicValues: any;\n\n  private cloneValues(values: any) {\n    return deepClone(values);\n  }\n\n  build<T>(\n    animation: IAnimation<T>,\n    duration: number,\n    offset: number,\n    extendDurationBy: number,\n    direction = 0\n  ) {\n    this.animation = animation;\n    this.offset = offset;\n    this.duration = this.getSafeDuration(duration);\n    this.newDuration = extendDurationBy;\n    this.direction = direction;\n\n    // If the offset is at or near the end get the last slope.\n    if (this.offset + this.delta > 1) {\n      this.offset -= this.delta;\n    }\n\n    this.calculate();\n    this.createSlopeTimeline();\n\n    return this.slopeAnimation as IAnimation<T>;\n  }\n\n  private getSafeDuration(value: number) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing. All Math blows up if the duration is \"0\".\n    if (value <= 0) {\n      value = 0.00001;\n    }\n    return value;\n  }\n\n  private cacheValues() {\n    this.deltaStepValues = this.cloneValues(this.nowValues);\n    this.scaleValues = this.cloneValues(this.nowValues);\n    this.dynamicValues = this.cloneValues(this.nowValues);\n\n    this.cacheDeltaStepValues();\n    this.cacheScaleValues();\n  }\n\n  private cacheDeltaStepValues() {\n    Object.keys(this.deltaStepValues).forEach((property) => {\n      objectOperator.assign(this.deltaStepValues[property], this.delta);\n    });\n  }\n\n  private cacheScaleValues() {\n    const scale = this.newDuration / this.duration;\n\n    Object.keys(this.scaleValues).forEach((property) => {\n      objectOperator.assign(this.scaleValues[property], scale);\n    });\n  }\n\n  private cacheDeltaValueForward() {\n    this.animation.update(this.offset + this.delta);\n    this.deltaValues = this.cloneValues(this.animation.currentValues);\n  }\n\n  private cacheDeltaValueStopped() {\n    this.animation.update(this.offset);\n    this.deltaValues = this.cloneValues(this.animation.currentValues);\n  }\n\n  private calculate() {\n    this.animation.update(this.offset);\n    this.nowValues = this.cloneValues(this.animation.currentValues);\n    this.toValues = this.cloneValues(this.nowValues);\n\n    if (this.direction === FORWARD) {\n      this.cacheDeltaValueForward();\n    } else {\n      this.cacheDeltaValueStopped();\n    }\n\n    Object.keys(this.nowValues).forEach((property) => {\n      const value = this.nowValues[property];\n\n      if (typeof value === \"object\" && value != null) {\n        this.cacheValues();\n        this.calculateObject(property);\n      } else {\n        this.calculatePrimitive(property);\n      }\n    });\n  }\n\n  private calculatePrimitive(property: string) {\n    const now = this.nowValues[property];\n    const dxNow = this.deltaValues[property];\n\n    const scale = this.newDuration / this.duration;\n    const diff = dxNow - now;\n    const derivative = diff / this.delta;\n    const scaled = derivative * scale;\n    const to = now + scaled;\n\n    this.toValues[property] = to;\n  }\n\n  private calculateObject(property: string) {\n    const now = this.nowValues[property];\n    const delta = this.deltaValues[property];\n    const deltaStep = this.deltaStepValues[property];\n    const scale = this.scaleValues[property];\n    const dynamicValue = this.dynamicValues[property];\n    const to = this.toValues[property];\n\n    objectOperator.subtract(delta, now, dynamicValue);\n    objectOperator.divide(dynamicValue, deltaStep, dynamicValue);\n    objectOperator.multiply(dynamicValue, scale, dynamicValue);\n    objectOperator.add(now, dynamicValue, to);\n\n    this.toValues[property] = to;\n  }\n\n  private createSlopeTimeline() {\n    const keyframes = Object.keys(this.nowValues)\n      .map((property) => {\n        return new Keyframe({\n          property,\n          from: this.nowValues[property],\n          controls: [],\n          to: this.toValues[property],\n          startAt: 0,\n          endAt: 1,\n          easing: easings.linear,\n        });\n      })\n      .flat();\n\n    this.slopeAnimation = new Animation(\"slope\", keyframes);\n  }\n}\n","import { IAnimation, AnimationState } from \"./Animation\";\nimport SlopeAnimationBuilder from \"./SlopeAnimationBuilder\";\n\nconst slopeAnimationBuilder = new SlopeAnimationBuilder();\n\nexport default class ExtendedAnimation<T> implements IAnimation<T> {\n  private animation: IAnimation<T>;\n  private slopeAnimation: IAnimation<T>;\n  private offset: number;\n  private duration;\n  private extendDurationBy;\n\n  public currentValues: T;\n  public name: string;\n  public time: number = 0;\n\n  constructor(\n    animation: IAnimation<T>,\n    duration: number,\n    offset: number,\n    extendDurationBy = 0\n  ) {\n    this.duration = this.getSafeDuration(duration);\n    this.offset = offset;\n    this.extendDurationBy = extendDurationBy;\n\n    this.animation = animation;\n    this.currentValues = this.animation.currentValues;\n    this.name = this.animation.name;\n\n    this.slopeAnimation = slopeAnimationBuilder.build(\n      this.animation,\n      duration,\n      1,\n      extendDurationBy,\n      1\n    );\n  }\n\n  private getSafeDuration(value: number) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing. All Math blows up if the duration is \"0\".\n    if (value <= 0) {\n      value = 0.00001;\n    }\n    return value;\n  }\n\n  update(time: number) {\n    this.time = time;\n    const offsetTime = this.offset + time;\n\n    if (offsetTime + slopeAnimationBuilder.delta > 1) {\n      if (this.slopeAnimation == null) {\n        return this;\n      }\n\n      const overflowTime = offsetTime + slopeAnimationBuilder.delta - 1;\n      this.slopeAnimation.update(overflowTime);\n      this.currentValues = this.slopeAnimation.currentValues;\n    } else {\n      if (this.animation == null) {\n        return this;\n      }\n\n      this.animation.update(offsetTime);\n      this.currentValues = this.animation.currentValues;\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new ExtendedAnimation(\n      this.animation.clone(),\n      this.duration,\n      this.offset,\n      this.extendDurationBy\n    );\n  }\n}\n","import Animation, { IAnimation } from \"./Animation\";\nimport Keyframe from \"./Keyframe\";\nimport easings, { EasingFunction } from \"./easings\";\n\nexport default class BlendedAnimation<T> extends Animation<T> {\n  public fromAnimation: IAnimation<T>;\n  public toAnimation: IAnimation<T>;\n  public properties: string[];\n  private easing: EasingFunction;\n\n  constructor(\n    fromAnimation: IAnimation<T>,\n    toAnimation: IAnimation<T>,\n    easing: EasingFunction = easings.easeOutExpo\n  ) {\n    const fromValues = fromAnimation.currentValues;\n    const toValues = toAnimation.currentValues;\n    const properties = Object.keys(fromValues as any);\n\n    const keyframes = properties\n      .map((name) => {\n        const from = (fromValues as any)[name];\n        const to = (toValues as any)[name];\n\n        if (to == null) {\n          throw new Error(\n            `Blended animations need to have the same properties to animate.  From Animation: ${JSON.stringify(\n              Object.keys(from)\n            )}, To Animation: ${JSON.stringify(Object.keys(to))}`\n          );\n        }\n\n        return new Keyframe({\n          property: name,\n          startAt: 0,\n          endAt: 1,\n          from,\n          to,\n          controls: [],\n          easing: easing || easings.linear,\n        });\n      })\n      .flat();\n\n    super(`${fromAnimation.name}-${toAnimation.name}-blended`, keyframes);\n\n    this.easing = easing;\n    this.properties = properties;\n    this.fromAnimation = fromAnimation;\n    this.toAnimation = toAnimation;\n  }\n\n  updateKeyframes() {\n    const length = this.properties.length;\n\n    for (let x = 0; x < length; x++) {\n      const animator = this.animators[x];\n      const property = animator.keyframe.property;\n      const keyframe = animator.keyframe;\n\n      keyframe.to = (this.toAnimation.currentValues as any)[property];\n      keyframe.from = (this.fromAnimation.currentValues as any)[property];\n    }\n  }\n\n  update(time: number) {\n    this.fromAnimation.update(time);\n    this.toAnimation.update(time);\n    this.updateKeyframes();\n\n    super.update(time);\n    return this;\n  }\n\n  clone() {\n    return new BlendedAnimation<T>(\n      this.fromAnimation.clone(),\n      this.toAnimation.clone(),\n      this.easing\n    );\n  }\n}\n","import createDynamicEasing, { DynamicEasingNames } from \"./createDynamicEasing\";\nimport Keyframe from \"./Keyframe\";\n\nexport type IAnimatedProperties<T> = {\n  [P in keyof T]: T[P] | IPercentageKeyframes<T[P]>;\n};\n\nexport interface IPercentageKeyframes<TValue> {\n  [key: string]: TValue | IKeyframeControls<TValue>;\n  from: TValue | IKeyframeControls<TValue>;\n  to: TValue | IKeyframeControls<TValue>;\n}\n\nexport interface IKeyframeControls<TValue> {\n  value: TValue;\n  controlsIn?: TValue[];\n  controlsOut?: TValue[];\n  easeIn?: DynamicEasingNames;\n  easeOut?: DynamicEasingNames;\n}\n\nexport default class KeyframesGenerator {\n  private transformValue: (value: any) => any = (value) => value;\n\n  setTransformValue(transformValue: (value: any) => any) {\n    this.transformValue = transformValue;\n  }\n\n  isComplexKeyframe(value: any) {\n    return value.hasOwnProperty(\"value\");\n  }\n\n  isPercentageKeyframe(value: any) {\n    return value.hasOwnProperty(\"from\") && value.hasOwnProperty(\"to\");\n  }\n\n  isObject(value: any) {\n    return typeof value === \"object\" && value != null;\n  }\n\n  sortPercentages = (keyA: string, keyB: string) => {\n    if (keyA === \"from\") {\n      return -1;\n    }\n\n    if (keyB === \"from\") {\n      return 1;\n    }\n\n    if (keyA === \"to\") {\n      return 1;\n    }\n\n    if (keyB === \"to\") {\n      return -1;\n    }\n\n    const keyAParts = keyA.split(\"%\");\n    const keyBParts = keyB.split(\"%\");\n    const keyANumber = parseFloat(keyAParts[0]);\n    const keyBNumber = parseFloat(keyBParts[0]);\n\n    if (keyANumber < keyBNumber) {\n      return -1;\n    } else if (keyANumber > keyBNumber) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  getDecimalFromPercentage(percentage: string) {\n    if (percentage === \"to\") {\n      return 1;\n    }\n\n    if (percentage === \"from\") {\n      return 0;\n    }\n\n    const percentageParts = percentage.split(\"%\");\n    let decimal = parseFloat(percentageParts[0]) / 100;\n\n    if (isNaN(decimal)) {\n      throw new Error(\n        `Unknown keyframe step: ${decimal}. Expected format 10% or 10.01% etc`\n      );\n    }\n\n    decimal = Math.max(0, decimal);\n    decimal = Math.min(1, decimal);\n\n    return decimal;\n  }\n\n  getEaseIn<T>(currentValue: IKeyframeControls<T>) {\n    if (this.isComplexKeyframe(currentValue) && currentValue.easeOut != null) {\n      return currentValue.easeOut || \"linear\";\n    } else {\n      return \"linear\";\n    }\n  }\n\n  getEaseOut<T>(nextValue: IKeyframeControls<T>) {\n    if (this.isComplexKeyframe(nextValue) && nextValue.easeIn != null) {\n      return nextValue.easeIn || \"linear\";\n    } else {\n      return \"linear\";\n    }\n  }\n\n  getControlsIn<T>(currentValue: IKeyframeControls<T>) {\n    if (\n      this.isComplexKeyframe(currentValue) &&\n      Array.isArray(currentValue.controlsOut)\n    ) {\n      return currentValue.controlsOut.map((v) => this.transformValue(v));\n    } else {\n      return [];\n    }\n  }\n\n  getControlsOut<T>(nextValue: IKeyframeControls<T>) {\n    if (\n      this.isComplexKeyframe(nextValue) &&\n      Array.isArray(nextValue.controlsIn)\n    ) {\n      return nextValue.controlsIn.map((v) => this.transformValue(v));\n    } else {\n      return [];\n    }\n  }\n\n  getFrom<T>(currentValue: IKeyframeControls<T>) {\n    if (this.isComplexKeyframe(currentValue)) {\n      return this.transformValue(currentValue.value);\n    } else if (typeof currentValue === \"string\") {\n      return this.transformValue(currentValue);\n    } else {\n      if (typeof currentValue?.value === \"string\") {\n        throw new Error(\n          \"Invalid complex value, only found a value with no other complex settings.\"\n        );\n      }\n      throw new Error(`Unknown \"from\" value: ${JSON.stringify(currentValue)}`);\n    }\n  }\n\n  getTo<T>(nextValue: IKeyframeControls<T>) {\n    const isComplexKeyframe = this.isComplexKeyframe(nextValue);\n\n    if (isComplexKeyframe) {\n      return this.transformValue(nextValue.value);\n    } else if (!isComplexKeyframe && this.isObject(nextValue)) {\n      return this.transformValue(nextValue);\n    } else if (typeof nextValue === \"string\") {\n      return this.transformValue(nextValue);\n    } else {\n      if (typeof nextValue?.value === \"string\") {\n        throw new Error(\n          \"Invalid complex value, only found a value with no other complex settings.\"\n        );\n      }\n      throw new Error(`Unknown \"to\" value: ${JSON.stringify(nextValue)}`);\n    }\n  }\n\n  wrapValue<T>(value: T): IKeyframeControls<T> {\n    return {\n      value,\n    };\n  }\n\n  normalizeValue<T>(value: T | IKeyframeControls<T>): IKeyframeControls<T> {\n    if (typeof value === \"string\" || typeof value === \"number\") {\n      return this.wrapValue(value);\n    } else if (this.isObject(value) && !this.isComplexKeyframe(value)) {\n      return this.wrapValue(value as T);\n    } else {\n      return value as IKeyframeControls<T>;\n    }\n  }\n\n  normalizeKeyframeValue<T>(\n    value: T | IKeyframeControls<T> | IPercentageKeyframes<T>\n  ): IPercentageKeyframes<T> {\n    if (typeof value === \"string\" || typeof value === \"number\") {\n      return {\n        from: this.wrapValue(value),\n        to: this.wrapValue(value),\n      };\n    } else if (this.isObject(value) && this.isPercentageKeyframe(value)) {\n      const keyframes: any = value;\n      const keys = Object.keys(keyframes);\n      keys.forEach((key) => {\n        const keyframeValue = this.normalizeValue(keyframes[key]);\n        keyframeValue;\n      });\n\n      return value as IPercentageKeyframes<T>;\n    } else if (this.isObject(value)) {\n      return {\n        from: this.wrapValue(value as T),\n        to: this.wrapValue(value as T),\n      };\n    } else {\n      throw new Error(\"Unknown value type.\");\n    }\n  }\n\n  generate<T>(animatedProperties: IAnimatedProperties<T>) {\n    const animatedPropertyNames = Object.keys(\n      animatedProperties\n    ) as (keyof T)[];\n    const keyframes: Keyframe<T>[] = [];\n\n    for (let x = 0; x < animatedPropertyNames.length; x++) {\n      const property = animatedPropertyNames[x];\n      let lastKeyFramePercentage = 0;\n      const keyframeValue = this.normalizeKeyframeValue(\n        animatedProperties[property]\n      );\n      const timeKeys = Object.keys(keyframeValue);\n      timeKeys.sort(this.sortPercentages);\n\n      for (let index = 0; index < timeKeys.length - 1; index++) {\n        const key = timeKeys[index];\n        const nextKey = timeKeys[index + 1];\n\n        const currentValue = this.normalizeValue(keyframeValue[key]);\n        const nextValue = this.normalizeValue(keyframeValue[nextKey]);\n        const startAt = lastKeyFramePercentage;\n        const endAt = this.getDecimalFromPercentage(timeKeys[index + 1]);\n\n        lastKeyFramePercentage = endAt;\n\n        const easingIn = this.getEaseIn(currentValue);\n        const easingOut = this.getEaseOut(nextValue);\n        const easing = createDynamicEasing(easingIn, easingOut);\n        const controlsIn = this.getControlsIn(currentValue);\n        const controlsOut = this.getControlsOut(nextValue);\n        const controls = [...controlsIn, ...controlsOut];\n        const from = this.getFrom(currentValue);\n        const to = this.getTo(nextValue);\n\n        const keyframe = new Keyframe({\n          property: property.toString(),\n          from,\n          to,\n          controls,\n          easing,\n          startAt,\n          endAt,\n        });\n\n        keyframes.push(keyframe);\n      }\n    }\n    return keyframes;\n  }\n}\n","import ExtendedAnimation from \"./ExtendedAnimation\";\nimport Animation, { IAnimation } from \"./Animation\";\nimport Player, { RepeatDirection } from \"./Player\";\nimport BlendedAnimation from \"./BlendedAnimation\";\nimport { EasingFunction } from \"./easings\";\nimport KeyframeGenerator from \"./KeyframesGenerator\";\nimport TimeObserver from \"./TimeObserver\";\n\nfunction defaultOnComplete() {}\n\nexport default class Motion<T> {\n  protected setOnFirst: boolean;\n  protected currentDuration = 0;\n  protected keyframeGenerator = new KeyframeGenerator();\n  protected observer: TimeObserver<any> | null = null;\n  protected player: Player;\n\n  animation: IAnimation<T> | null = null;\n\n  constructor(\n    render: (animation: IAnimation<T>) => void,\n    setOnFirst = false,\n    player?: Player\n  ) {\n    this.player = player || new Player();\n    this.player.render = (time: number) => {\n      if (this.animation != null) {\n        this.animation.update(time);\n        render(this.animation);\n      }\n    };\n    this.setOnFirst = setOnFirst;\n  }\n\n  inject(animation: IAnimation<T>) {\n    this.animation = animation;\n\n    this.player.duration = 16.667;\n    this.player.time = 0.999;\n    this.player.play();\n\n    return this;\n  }\n\n  segueTo(\n    animation: IAnimation<T>,\n    duration: number = 0,\n    easing?: EasingFunction,\n    onComplete = defaultOnComplete\n  ) {\n    const currentDuration = this.currentDuration;\n    const currentAnimation = this.animation;\n    const currentTime = this.player.time;\n\n    this.player.duration = this.currentDuration = duration;\n    this.player.iterations = 0;\n    this.player.repeat = 1;\n\n    if (duration === 0) {\n      animation.update(1);\n      const values = animation.currentValues;\n      this.animation = this.makeAnimationFromLastValues(values);\n      this.player.duration = 0;\n      this.player.time = 1;\n      this.player.render(1);\n      onComplete();\n      return;\n    }\n\n    if (currentAnimation == null) {\n      if (this.setOnFirst) {\n        animation.update(1);\n        const values = animation.currentValues;\n        this.animation = this.makeAnimationFromLastValues(values);\n        this.player.duration = 0;\n        this.player.time = 1;\n        this.player.render(1);\n        onComplete();\n        return;\n      } else {\n        this.animation = animation;\n      }\n    } else {\n      const extendDurationBy = duration - currentDuration * currentTime;\n\n      let fromAnimation: IAnimation<T>;\n\n      if (extendDurationBy > 0) {\n        fromAnimation = new ExtendedAnimation(\n          currentAnimation,\n          currentDuration,\n          currentTime,\n          extendDurationBy\n        );\n      } else {\n        const values = currentAnimation.currentValues;\n        const animation = this.makeAnimationFromLastValues(values);\n        fromAnimation = animation;\n      }\n\n      const newAnimation = new BlendedAnimation<T>(\n        fromAnimation,\n        animation,\n        easing\n      );\n\n      this.animation = newAnimation;\n\n      this.observer?.dispose();\n      this.observer = this.player.observeTimeOnce(1, () => {\n        newAnimation.update(1);\n        const values = newAnimation.currentValues;\n        this.animation = this.makeAnimationFromLastValues(values);\n        onComplete && onComplete();\n      });\n    }\n\n    this.player.time = 0;\n    this.player.play();\n  }\n\n  segueToLoop(animation: IAnimation<T>, duration = 0, easing?: EasingFunction) {\n    const currentDuration = this.currentDuration;\n    const currentAnimation = this.animation;\n    const currentTime = this.player.time;\n\n    this.player.duration = this.currentDuration = duration;\n    this.player.iterations = 0;\n    this.player.repeat = 1;\n\n    this.player.repeat = Infinity;\n    this.player.repeatDirection = RepeatDirection.DEFAULT;\n\n    if (currentAnimation == null) {\n      this.animation = animation;\n    } else {\n      const extendDurationBy = duration - currentDuration * currentTime;\n\n      let fromAnimation: IAnimation<T>;\n\n      if (extendDurationBy > 0) {\n        fromAnimation = new ExtendedAnimation(\n          currentAnimation,\n          currentDuration,\n          currentTime,\n          extendDurationBy\n        );\n      } else {\n        fromAnimation = currentAnimation;\n      }\n\n      this.animation = new BlendedAnimation<T>(\n        fromAnimation,\n        animation,\n        easing\n      );\n\n      this.observer?.dispose();\n      this.observer = this.player.observeTimeOnce(1, () => {\n        this.animation = animation;\n      });\n    }\n    this.player.time = 0;\n    this.player.play();\n  }\n\n  stop() {\n    this.player.stop();\n    return this;\n  }\n\n  play() {\n    this.player.play();\n    return this;\n  }\n\n  protected makeAnimationFromLastValues(values: any) {\n    const keyframes = Object.keys(values).reduce((acc, key) => {\n      acc[key] = {\n        from: JSON.parse(JSON.stringify(values[key])),\n        to: JSON.parse(JSON.stringify(values[key])),\n      };\n      return acc;\n    }, {} as any);\n\n    return new Animation<T>(\n      \"last-animation\",\n      this.keyframeGenerator.generate(keyframes)\n    );\n  }\n}\n","import {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n  OrComposite,\n} from \"clarity-pattern-parser\";\nimport number from \"./number\";\nimport optionalSpaces from \"./optionalSpaces\";\nimport spaces from \"./spaces\";\nimport divider from \"./divider\";\n\nconst m = new Literal(\"M\", \"M\");\nconst v = new Literal(\"v\", \"v\");\nconst V = new Literal(\"V\", \"V\");\nconst h = new Literal(\"h\", \"h\");\nconst H = new Literal(\"H\", \"H\");\nconst c = new Literal(\"c\", \"c\");\nconst C = new Literal(\"C\", \"C\");\n\nconst x = number.clone(\"x\");\nconst y = number.clone(\"y\");\n\nconst dx = number.clone(\"dx\");\nconst dy = number.clone(\"dy\");\n\nexport const moveTo = new AndComposite(\"moveTo\", [\n  m,\n  optionalSpaces,\n  x,\n  spaces,\n  y,\n]);\n\nexport const absoluteVerticalLine = new AndComposite(\"absoluteVerticalLine\", [\n  V,\n  optionalSpaces,\n  y,\n]);\n\nexport const relativeVerticalLine = new AndComposite(\"relativeVerticalLine\", [\n  v,\n  optionalSpaces,\n  dy,\n]);\n\nexport const absoluteHorizontalLine = new AndComposite(\n  \"absoluteHorizontalLine\",\n  [H, optionalSpaces, x]\n);\n\nexport const relativeHorizontalLine = new AndComposite(\n  \"relativeHorizontalLine\",\n  [h, optionalSpaces, dx]\n);\n\nexport const absoluteCurvedLine = new AndComposite(\"absoluteCurvedLine\", [\n  C,\n  optionalSpaces,\n  x,\n  spaces,\n  y,\n  divider,\n  x,\n  spaces,\n  y,\n  divider,\n  x,\n  spaces,\n  y,\n]);\n\nexport const relativeCurvedLine = new AndComposite(\"relativeCurvedLine\", [\n  c,\n  optionalSpaces,\n  dx,\n  spaces,\n  dy,\n  divider,\n  dx,\n  spaces,\n  dy,\n  divider,\n  dx,\n  spaces,\n  dy,\n]);\n\nexport const pathCommands = new OrComposite(\"pathCommands\", [\n  moveTo,\n  absoluteVerticalLine,\n  relativeVerticalLine,\n  absoluteHorizontalLine,\n  relativeHorizontalLine,\n  absoluteCurvedLine,\n  relativeCurvedLine,\n]);\n\nexport const path = new RepeatComposite(\"path\", pathCommands, spaces);\n","import { CompositeNode, Cursor, Visitor } from \"clarity-pattern-parser\";\nimport BezierCurve from \"./BezierCurve\";\nimport Animation, { AnimationState, IAnimation } from \"./Animation\";\nimport easings, { EasingFunction } from \"./easings\";\nimport Keyframe from \"./Keyframe\";\nimport { path } from \"./patterns/path\";\n\nconst visitor = new Visitor();\n\nexport class PathAnimation implements IAnimation<{ x: number; y: number }> {\n  protected easing: EasingFunction;\n  protected position = { x: 0, y: 0 };\n  protected pathString: string;\n  protected _currentValues = {\n    x: 0,\n    y: 0,\n  };\n  protected _deltaValues = {\n    x: 0,\n    y: 0,\n  };\n\n  readonly xBezierCurves: BezierCurve[] = [];\n  readonly yBezierCurves: BezierCurve[] = [];\n\n  name: string = \"\";\n\n  get curveCount() {\n    return this.xBezierCurves.length;\n  }\n\n  get currentValues(): { x: number; y: number } {\n    return this._currentValues;\n  }\n\n  get deltaValues(): AnimationState<number> {\n    return this._deltaValues;\n  }\n\n  constructor(pathString: string, easing: EasingFunction = easings.linear) {\n    const tree = path.parse(new Cursor(pathString));\n    this.pathString = pathString;\n\n    visitor\n      .setRoot(tree)\n      .selectRoot()\n      .clear()\n      .select((n) => n.name === \"optional-spaces\")\n      .remove()\n      .clear()\n      .select((n) => n.name === \"spaces\")\n      .remove()\n      .clear()\n      .select((n) => n.name === \"divider\")\n      .remove();\n\n    if (tree == null) {\n      throw new Error(\"Invalid path.\");\n    }\n\n    this.easing = easing;\n\n    tree.children.forEach((n, index) => {\n      (this as any)[n.name](n);\n    });\n  }\n\n  private moveTo(n: CompositeNode) {\n    const xValue = Number(n.children[1].value);\n    const yValue = Number(n.children[2].value);\n\n    this.position.x = xValue;\n    this.position.y = yValue;\n  }\n\n  private absoluteVerticalLine(n: CompositeNode) {\n    const yValue = Number(n.children[1].value);\n    const y = new BezierCurve([this.position.y, yValue]);\n    const x = new BezierCurve([this.position.x, this.position.x]);\n\n    this.position.y = yValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  private relativeVerticalLine(n: CompositeNode) {\n    const yValue = Number(n.children[1].value) + this.position.y;\n    const y = new BezierCurve([this.position.y, yValue]);\n    const x = new BezierCurve([this.position.x, this.position.x]);\n\n    this.position.y = yValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  private absoluteHorizontalLine(n: CompositeNode) {\n    const xValue = Number(n.children[1].value);\n    const x = new BezierCurve([this.position.x, xValue]);\n    const y = new BezierCurve([this.position.y, this.position.y]);\n    this.position.x = xValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  private relativeHorizontalLine(n: CompositeNode) {\n    const xValue = Number(n.children[1].value) + this.position.x;\n    const x = new BezierCurve([this.position.x, xValue]);\n    const y = new BezierCurve([this.position.y, this.position.y]);\n\n    this.position.x = xValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  private absoluteCurvedLine(n: CompositeNode, startAt: number, endAt: number) {\n    const startXValue = this.position.x;\n    const startYValue = this.position.y;\n\n    const xControl1 = Number(n.children[1].value);\n    const yControl1 = Number(n.children[2].value);\n\n    const xControl2 = Number(n.children[3].value);\n    const yControl2 = Number(n.children[4].value);\n\n    const endXValue = Number(n.children[5].value);\n    const endYValue = Number(n.children[6].value);\n\n    const x = new BezierCurve([startXValue, xControl1, xControl2, endXValue]);\n    const y = new BezierCurve([startYValue, yControl1, yControl2, endYValue]);\n\n    this.position.x = endXValue;\n    this.position.y = endYValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  private relativeCurvedLine(n: CompositeNode, startAt: number, endAt: number) {\n    const startXValue = this.position.x;\n    const startYValue = this.position.y;\n\n    const xControl1 = Number(n.children[1].value + startXValue);\n    const yControl1 = Number(n.children[2].value + startYValue);\n\n    const xControl2 = Number(n.children[3].value + startXValue);\n    const yControl2 = Number(n.children[4].value + startYValue);\n\n    const endXValue = Number(n.children[5].value + startXValue);\n    const endYValue = Number(n.children[6].value + startYValue);\n\n    const x = new BezierCurve([startXValue, xControl1, xControl2, endXValue]);\n    const y = new BezierCurve([startYValue, yControl1, yControl2, endYValue]);\n\n    this.position.x = endXValue;\n    this.position.y = endYValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  update(time: number): IAnimation<{ x: number; y: number }> {\n    const length = this.xBezierCurves.length;\n    const parts = 1 / length;\n    const adjustedTime = this.easing(time);\n    const index = Math.max(\n      Math.min(Math.floor(adjustedTime / parts), length - 1),\n      0\n    );\n    const indexTime = (adjustedTime % parts) / parts;\n\n    const x = this.xBezierCurves[index].valueAt(indexTime);\n    const y = this.yBezierCurves[index].valueAt(indexTime);\n    const deltaX = this.xBezierCurves[index].deltaAt(indexTime);\n    const deltaY = this.yBezierCurves[index].deltaAt(indexTime);\n\n    this._currentValues.x = x;\n    this._currentValues.y = y;\n    this._deltaValues.x = deltaX;\n    this._deltaValues.y = deltaY;\n\n    return this;\n  }\n\n  clone(): IAnimation<{ x: number; y: number }> {\n    return new PathAnimation(this.pathString, this.easing);\n  }\n}\n","import { PathAnimation } from \"./PathAnimation\";\nimport { IAnimation } from \"./Animation\";\nimport easings, { EasingFunction } from \"./easings\";\nimport { newtonsMethod, simpsonsRule } from \"./math\";\nimport { BezierCurve } from \".\";\nimport { Path } from \"./SvgPath\";\n\ninterface CurveData {\n  x: BezierCurve;\n  y: BezierCurve;\n  distance: number;\n  offsetDistance: number;\n  startAt: number;\n  endAt: number;\n}\n\nexport class UniformPathAnimation\n  implements IAnimation<{ x: number; y: number }>\n{\n  protected _path: Path;\n  protected _distance: number;\n  protected _curveData: CurveData[];\n\n  name = \"\";\n  easing: EasingFunction;\n\n  readonly currentValues = {\n    x: 0,\n    y: 0,\n  };\n\n  get distance() {\n    return this._distance;\n  }\n\n  constructor(path: Path, easing: EasingFunction = easings.linear) {\n    this.easing = easing;\n    this._path = path;\n    this._curveData = this._path.xCurves.map((xCurve, index) => {\n      const yCurve = this._path.yCurves[index];\n\n      const distance = simpsonsRule(\n        0,\n        1,\n        (t: number) => {\n          const x = xCurve.deltaAt(t);\n          const y = yCurve.deltaAt(t);\n\n          return Math.sqrt(x * x + y * y);\n        },\n        4\n      );\n\n      return {\n        x: xCurve,\n        y: yCurve,\n        distance,\n        offsetDistance: 0,\n        startAt: 0,\n        endAt: 0,\n      };\n    });\n\n    this._distance = this._curveData\n      .map((curve) => curve.distance)\n      .reduce((acc, next) => (acc += next), 0);\n\n    let lastTo = 0;\n    let distance = 0;\n    this._curveData.forEach((curve) => {\n      const percentage = curve.distance / this._distance;\n      curve.startAt = lastTo;\n      lastTo = curve.endAt = lastTo + percentage;\n      curve.offsetDistance = distance;\n      distance += curve.distance;\n    });\n  }\n\n  update(time: number) {\n    const easingTime = this.easing(time);\n    const curve = this._curveData.find((curve, index) => {\n      const isLowerBounds = easingTime < 0 && index === 1;\n      const isOverBounds =\n        easingTime > 1 && index === this._curveData.length - 1;\n      return (\n        isLowerBounds ||\n        isOverBounds ||\n        (easingTime >= curve.startAt && easingTime < curve.endAt)\n      );\n    });\n\n    if (curve == null) {\n      return this;\n    }\n\n    const distance = easingTime * this._distance;\n    const adjustedDistance = distance - curve.offsetDistance;\n    const remainder = easingTime - curve.startAt;\n    const adjustedTime = remainder / (curve.endAt - curve.startAt);\n\n    const integrand = (t: number) => {\n      const x = curve.x.normalizedDeltaAt(t);\n      const y = curve.y.normalizedDeltaAt(t);\n\n      return Math.sqrt(x * x + y * y);\n    };\n\n    const uniformTime = newtonsMethod(\n      (t) => {\n        return simpsonsRule(0, t, integrand, 4) - adjustedDistance;\n      },\n      integrand,\n      adjustedTime,\n      10\n    );\n\n    this.currentValues.x = curve.x.valueAt(uniformTime);\n    this.currentValues.y = curve.y.valueAt(uniformTime);\n\n    return this;\n  }\n\n  clone() {\n    return new UniformPathAnimation(this._path, this.easing);\n  }\n}\n","import KeyframesGenerator, { IAnimatedProperties } from \"./KeyframesGenerator\";\nimport Animation from \"./Animation\";\n\nconst keyframesGenerator = new KeyframesGenerator();\n\nexport function createAnimation<T>(animatedProperties: IAnimatedProperties<T>) {\n  const keyframes = keyframesGenerator.generate<T>(animatedProperties);\n  const animation = new Animation<T>(\"\", keyframes);\n\n  return animation;\n}\n","import CssKeyframesGenerator, {\n  ICssAnimatedProperties,\n} from \"./CssKeyframesGenerator\";\nimport Animation from \"./Animation\";\n\nconst cssKeyframesGenerator = new CssKeyframesGenerator();\ntype CssType<T> = { [P in keyof T]: (string | number)[] };\n\nexport function createCssAnimation<T>(\n  animatedProperties: ICssAnimatedProperties<T>\n) {\n  const keyframes = cssKeyframesGenerator.generate<T>(animatedProperties);\n  const animation = new Animation<CssType<T>>(\"\", keyframes);\n\n  return animation;\n}\n","import { CompositeNode, Cursor, Visitor } from \"clarity-pattern-parser\";\nimport BezierCurve from \"./BezierCurve\";\nimport { path } from \"./patterns/path\";\n\nconst visitor = new Visitor();\n\nexport interface Path {\n  xCurves: readonly BezierCurve[];\n  yCurves: readonly BezierCurve[];\n  curveCount: number;\n}\n\nexport class SvgPath implements Path {\n  protected position = { x: 0, y: 0 };\n  protected pathString: string;\n  protected _xBezierCurves: BezierCurve[] = [];\n  protected _yBezierCurves: BezierCurve[] = [];\n\n  get xCurves(): readonly BezierCurve[] {\n    return this._xBezierCurves;\n  }\n\n  get yCurves(): readonly BezierCurve[] {\n    return this._yBezierCurves;\n  }\n\n  get curveCount() {\n    return this._xBezierCurves.length;\n  }\n\n  constructor(pathString: string) {\n    const tree = path.parse(new Cursor(pathString));\n    this.pathString = pathString;\n\n    visitor\n      .setRoot(tree)\n      .selectRoot()\n      .clear()\n      .select((n) => n.name === \"optional-spaces\")\n      .remove()\n      .clear()\n      .select((n) => n.name === \"spaces\")\n      .remove()\n      .clear()\n      .select((n) => n.name === \"divider\")\n      .remove();\n\n    if (tree == null) {\n      throw new Error(\"Invalid path.\");\n    }\n\n    tree.children.forEach((n, index) => {\n      (this as any)[n.name](n);\n    });\n  }\n\n  private moveTo(n: CompositeNode) {\n    const xValue = Number(n.children[1].value);\n    const yValue = Number(n.children[2].value);\n\n    this.position.x = xValue;\n    this.position.y = yValue;\n  }\n\n  private absoluteVerticalLine(n: CompositeNode) {\n    const yValue = Number(n.children[1].value);\n    const y = new BezierCurve([this.position.y, yValue]);\n    const x = new BezierCurve([this.position.x, this.position.x]);\n\n    this.position.y = yValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n\n  private relativeVerticalLine(n: CompositeNode) {\n    const yValue = Number(n.children[1].value) + this.position.y;\n    const y = new BezierCurve([this.position.y, yValue]);\n    const x = new BezierCurve([this.position.x, this.position.x]);\n\n    this.position.y = yValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n\n  private absoluteHorizontalLine(n: CompositeNode) {\n    const xValue = Number(n.children[1].value);\n    const x = new BezierCurve([this.position.x, xValue]);\n    const y = new BezierCurve([this.position.y, this.position.y]);\n    this.position.x = xValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n\n  private relativeHorizontalLine(n: CompositeNode) {\n    const xValue = Number(n.children[1].value) + this.position.x;\n    const x = new BezierCurve([this.position.x, xValue]);\n    const y = new BezierCurve([this.position.y, this.position.y]);\n\n    this.position.x = xValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n\n  private absoluteCurvedLine(n: CompositeNode, startAt: number, endAt: number) {\n    const startXValue = this.position.x;\n    const startYValue = this.position.y;\n\n    const xControl1 = Number(n.children[1].value);\n    const yControl1 = Number(n.children[2].value);\n\n    const xControl2 = Number(n.children[3].value);\n    const yControl2 = Number(n.children[4].value);\n\n    const endXValue = Number(n.children[5].value);\n    const endYValue = Number(n.children[6].value);\n\n    const x = new BezierCurve([startXValue, xControl1, xControl2, endXValue]);\n    const y = new BezierCurve([startYValue, yControl1, yControl2, endYValue]);\n\n    this.position.x = endXValue;\n    this.position.y = endYValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n\n  private relativeCurvedLine(n: CompositeNode, startAt: number, endAt: number) {\n    const startXValue = this.position.x;\n    const startYValue = this.position.y;\n\n    const xControl1 = Number(n.children[1].value + startXValue);\n    const yControl1 = Number(n.children[2].value + startYValue);\n\n    const xControl2 = Number(n.children[3].value + startXValue);\n    const yControl2 = Number(n.children[4].value + startYValue);\n\n    const endXValue = Number(n.children[5].value + startXValue);\n    const endYValue = Number(n.children[6].value + startYValue);\n\n    const x = new BezierCurve([startXValue, xControl1, xControl2, endXValue]);\n    const y = new BezierCurve([startYValue, yControl1, yControl2, endYValue]);\n\n    this.position.x = endXValue;\n    this.position.y = endYValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n}\n","import BezierCurve from \"./BezierCurve\";\nimport { Path } from \"./SvgPath\";\n\nexport class PointPath implements Path {\n  private _xCurves: BezierCurve[] = [];\n  private _yCurves: BezierCurve[] = [];\n\n  get xCurves(): readonly BezierCurve[] {\n    return this._xCurves;\n  }\n\n  get yCurves(): readonly BezierCurve[] {\n    return this._yCurves;\n  }\n\n  get curveCount(): number {\n    return this._xCurves.length;\n  }\n\n  constructor(points: number[]) {\n    const position = [points[0], points[1]];\n\n    if ((points.length - 2) % 6 !== 0) {\n      throw new Error(\"Needs to be two more than a factor of six.\");\n    }\n\n    for (let i = 2; i < points.length; i += 6) {\n      this._xCurves.push(\n        new BezierCurve([position[0], points[i], points[i + 2], points[i + 4]])\n      );\n\n      this._yCurves.push(\n        new BezierCurve([\n          position[1],\n          points[i + 1],\n          points[i + 3],\n          points[i + 5],\n        ])\n      );\n      position[0] = points[i + 4];\n      position[1] = points[i + 5];\n    }\n  }\n}\n"],"names":["PlayerState","RepeatDirection","emptyFn","space","spaces","values","value","visitor","KeyframeGenerator","CssKeyframesGenerator"],"mappings":";;;;;;EAAA;EACM,SAAU,YAAY,CAC1B,UAAkB,EAClB,UAAkB,EAClB,CAAwB,EACxB,CAAA,GAAY,CAAC,EAAA;EAEb,IAAA,IAAI,WAAW,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC;MAChC,MAAM,UAAU,GAAG,CAAC,UAAU,GAAG,UAAU,IAAI,CAAC,CAAC;MACjD,IAAI,QAAQ,GAAG,UAAU,CAAC;EAE1B,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;UAC9B,QAAQ,IAAI,UAAU,CAAC;UACvB,IAAI,WAAW,GAAG,CAAC,CAAC;EAEpB,QAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;cACf,WAAW,GAAG,CAAC,CAAC;EACjB,SAAA;EAED,QAAA,WAAW,IAAI,WAAW,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC1C,KAAA;EAED,IAAA,WAAW,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC;EAE7B,IAAA,OAAO,CAAC,UAAU,GAAG,CAAC,IAAI,WAAW,CAAC;EACxC,CAAC;EAED;WACgB,mBAAmB,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAA;EACjE,IAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;EAClB,QAAA,OAAO,CAAC,CAAC;EACV,KAAA;;MAGD,MAAM,mBAAmB,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;MAG3C,IAAI,MAAM,GAAG,CAAC,CAAC;MACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;UAC1B,MAAM,IAAI,CAAC,CAAC;EACb,KAAA;EACD,IAAA,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;EAE7B,IAAA,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;MACxB,IAAI,UAAU,GAAG,SAAS,CAAC;EAC3B,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;UAC9B,UAAU,IAAI,SAAS,CAAC;EACzB,KAAA;EACD,IAAA,UAAU,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;EAEzC,IAAA,OAAO,mBAAmB,GAAG,MAAM,GAAG,UAAU,CAAC;EACnD,CAAC;EAED;EACA,MAAM,cAAc,GAAG,IAAI,GAAG,EAAkB,CAAC;EAEjD;EACM,SAAU,SAAS,CAAC,GAAW,EAAA;MACnC,MAAM,KAAK,GAAG,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAEtC,IAAI,KAAK,IAAI,IAAI,EAAC;EAChB,QAAA,OAAO,KAAK,CAAC;EACd,KAAA;MAED,IAAI,MAAM,GAAG,CAAC,CAAC;MACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE;EAAE,QAAA,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;EAEnD,IAAA,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;EAChC,IAAA,OAAO,MAAM,CAAC;EAChB,CAAC;EAED;EACA,MAAM,aAAa,GAAG,IAAI,GAAG,EAAkB,CAAC;EAChC,SAAA,QAAQ,CAAC,CAAS,EAAE,CAAS,EAAA;EAC3C,IAAA,MAAM,GAAG,GAAG,CAAA,EAAG,CAAC,CAAI,CAAA,EAAA,CAAC,EAAE,CAAC;MACxB,MAAM,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAErC,IAAI,KAAK,IAAI,IAAI,EAAE;EACjB,QAAA,OAAO,KAAK,CAAC;EACd,KAAA;MAED,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChE,IAAA,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;EAC/B,IAAA,OAAO,MAAM,CAAC;EAChB,CAAC;EAEe,SAAA,aAAa,CAC3B,EAAyB,EACzB,OAA8B,EAC9B,OAAe,EACf,aAAa,GAAG,QAAQ,EACxB,SAAS,GAAG,KAAK,EAAA;MAEjB,IAAI,CAAC,GAAG,OAAO,CAAC;MAChB,IAAI,KAAK,GAAG,QAAQ,CAAC;MACrB,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;MACrC,IAAI,KAAK,GAAG,CAAC,CAAC;MAEd,OAAO,UAAU,GAAG,SAAS,EAAE;UAC7B,IAAI,KAAK,IAAI,aAAa,EAAE;EAC1B,YAAA,OAAO,QAAQ,CAAC;EACjB,SAAA;EACD,QAAA,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;UAC3B,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;UACjC,KAAK,GAAG,CAAC,CAAC;EACV,QAAA,KAAK,EAAE,CAAC;EACT,KAAA;EAED,IAAA,OAAO,CAAC,CAAC;EACX;;EC3GA,MAAM,aAAa,GAAa,EAAE,CAAC;EAEnC,SAAS,OAAO,CAAC,CAAS,EAAE,MAAgB,EAAA;MAC1C,MAAM,iBAAiB,GAAG,MAAM,CAAC;EACjC,IAAA,MAAM,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;MACvC,IAAI,MAAM,GAAG,CAAC,CAAC;MAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;EAC3B,QAAA,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;UAC9C,MAAM,IAAI,mBAAmB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,gBAAgB,CAAC;EAC3D,KAAA;EACD,IAAA,OAAO,MAAM,CAAC;EAChB,CAAC;EAED,SAAS,OAAO,CAAC,CAAS,EAAE,MAAgB,EAAA;MAC1C,MAAM,iBAAiB,GAAG,MAAM,CAAC;EACjC,IAAA,MAAM,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;MACvC,IAAI,MAAM,GAAG,CAAC,CAAC;MAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;EAC3B,QAAA,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;UAC9C,MAAM;cACJ,CAAC;mBACA,mBAAmB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;sBACnC,mBAAmB,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EACnC,gBAAA,gBAAgB,CAAC;EACpB,KAAA;EAED,IAAA,OAAO,MAAM,CAAC;EAChB,CAAC;EACa,MAAO,WAAW,CAAA;EAI9B,IAAA,WAAA,CAAY,MAAgB,EAAA;UAHpB,IAAM,CAAA,MAAA,GAAa,aAAa,CAAC;UACjC,IAAgB,CAAA,gBAAA,GAAa,aAAa,CAAC;EAGjD,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;OACxB;EAED,IAAA,SAAS,CAAC,YAAsB,EAAA;EAC9B,QAAA,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;UAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC5B,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,KAAI;cAChD,OAAO,KAAK,GAAG,IAAI,CAAC;EACtB,SAAC,CAAC,CAAC;EAEH,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC3B,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;OACtC;EAED,IAAA,OAAO,CAAC,CAAS,EAAA;UACf,OAAO,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;OAChC;EAED,IAAA,iBAAiB,CAAC,CAAS,EAAA;UACzB,OAAO,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;OAC1C;EAED,IAAA,OAAO,CAAC,CAAS,EAAA;UACf,OAAO,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;OAChC;EAED,IAAA,iBAAiB,CAAC,CAAS,EAAA;UACzB,OAAO,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;OAC1C;EAED,IAAA,KAAK,CAAC,CAAS,EAAA;EACb,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC;EAChD,QAAA,MAAM,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;UACvC,IAAI,MAAM,GAAG,CAAC,CAAC;UAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;EAC3B,YAAA,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;cAC9C,IAAI,QAAQ,GAAG,CAAC,CAAC;EAEjB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;kBACnC,QAAQ,IAAI,mBAAmB,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,aAAA;EAED,YAAA,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,QAAQ,GAAG,gBAAgB,CAAC;EACvD,SAAA;EAED,QAAA,OAAO,MAAM,CAAC;OACf;MAED,IAAI,CAAC,UAAkB,EAAE,UAAkB,EAAA;EACzC,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;OACxD;MAED,KAAK,GAAA;UACH,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;OAC7C;EACF;;EC7FK,SAAU,SAAS,CAAI,KAAQ,EAAA;MACnC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3C;;ECEA,MAAM,UAAU,GAAU,EAAE,CAAC;EAEf,MAAO,QAAQ,CAAA;EA6B3B,IAAA,WAAA,CAAY,QAAqB,EAAA;EAC/B,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;EAC1B,QAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;UACf,IAAI,CAAC,YAAY,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;UACxC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;UACvC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAEvC,QAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;UAEf,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAC5C,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;OAC7C;EA/BD,IAAA,IAAI,QAAQ,GAAA;UACV,OAAO,IAAI,CAAC,SAAS,CAAC;OACvB;EAED,IAAA,IAAI,KAAK,GAAA;UACP,OAAO,IAAI,CAAC,MAAM,CAAC;OACpB;EAED,IAAA,IAAI,KAAK,GAAA;UACP,OAAO,IAAI,CAAC,MAAM,CAAC;OACpB;EAED,IAAA,IAAI,YAAY,GAAA;UACd,OAAO,IAAI,CAAC,aAAa,CAAC;OAC3B;EAED,IAAA,IAAI,YAAY,GAAA;UACd,OAAO,IAAI,CAAC,aAAa,CAAC;OAC3B;EAeO,IAAA,cAAc,CACpB,IAAY,EACZ,QAAqB,GAAA,UAAU,EAC/B,EAAU,EAAA;UAEV,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;EACxD,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;EACxE,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAC1C,WAAW,GAAG,iBAAiB,CAChC,CAAC;UACF,MAAM,MAAM,GAAG,CAAC,IAAI,EAAE,GAAG,QAAQ,EAAE,EAAE,CAAC,CAAC;EACvC,QAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;UACpC,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;OAClD;EAEO,IAAA,aAAa,CACnB,IAAY,EACZ,QAAqB,GAAA,UAAU,EAC/B,EAAU,EAAA;UAEV,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;EACxD,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;EACxE,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAC1C,WAAW,GAAG,iBAAiB,CAChC,CAAC;UACF,MAAM,MAAM,GAAG,CAAC,IAAI,EAAE,GAAG,QAAQ,EAAE,EAAE,CAAC,CAAC;EACvC,QAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;UACpC,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;OAClD;MAEO,cAAc,CAAC,IAAS,EAAE,EAAO,EAAA;UACvC,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;EACxC,YAAA,OAAO,EAAE,CAAC;EACX,SAAA;EAAM,aAAA;EACL,YAAA,OAAO,IAAI,CAAC;EACb,SAAA;OACF;MAEO,QAAQ,CACd,UAAe,EACf,cAAmB,EACnB,QAAa,EACb,YAAiB,EACjB,WAAgB,EAAA;EAEhB,QAAA,KAAK,IAAI,GAAG,IAAI,UAAU,EAAE;EAC1B,YAAA,MAAM,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;EAC7B,YAAA,MAAM,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;EACzB,YAAA,MAAM,QAAQ,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAM,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACxD,YAAA,MAAM,QAAQ,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC;EAC1C,YAAA,MAAM,QAAQ,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC;cAC1C,MAAM,QAAQ,GAAG,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC;EAE1D,YAAA,IAAI,QAAQ,EAAE;EACZ,gBAAA,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;EAC5D,gBAAA,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;EAC3D,aAAA;EAAM,iBAAA,IAAI,QAAQ,EAAE;EACnB,gBAAA,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;EAClD,gBAAA,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;EACvB,aAAA;EAAM,iBAAA,IAAI,QAAQ,EAAE;kBACnB,IAAI,CAAC,QAAQ,CACX,UAAU,CAAC,GAAG,CAAC,EACf,QAAQ,IAAI,UAAU,EACtB,QAAQ,CAAC,GAAG,CAAC,EACb,YAAY,CAAC,GAAG,CAAC,EACjB,WAAW,CAAC,GAAG,CAAC,CACjB,CAAC;EACH,aAAA;EAAM,iBAAA;EACL,gBAAA,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;EACvE,aAAA;EACF,SAAA;OACF;EAED,IAAA,MAAM,CAAC,IAAY,EAAA;UACjB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC;UAC3C,MAAM,QAAQ,GAAG,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC;UACzD,MAAM,QAAQ,GAAG,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC;EACzD,QAAA,MAAM,QAAQ,GAAG,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC;EAEpE,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;EAElB,QAAA,IAAI,QAAQ,EAAE;EACZ,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;cAC1E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;EACjC,SAAA;EAAM,aAAA,IAAI,QAAQ,EAAE;cACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAC/B,IAAI,CAAC,SAAS,CAAC,IAAc,EAC7B,IAAI,CAAC,SAAS,CAAC,QAAoB,EACnC,IAAI,CAAC,SAAS,CAAC,EAAY,CAChB,CAAC;cAEd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAC9B,IAAI,CAAC,SAAS,CAAC,IAAc,EAC7B,IAAI,CAAC,SAAS,CAAC,QAAoB,EACnC,IAAI,CAAC,SAAS,CAAC,EAAY,CAChB,CAAC;EACf,SAAA;EAAM,aAAA,IAAI,QAAQ,EAAE;EACnB,YAAA,IAAI,CAAC,QAAQ,CACX,IAAI,CAAC,SAAS,CAAC,IAAI,EACnB,IAAI,CAAC,SAAS,CAAC,QAAQ,EACvB,IAAI,CAAC,SAAS,CAAC,EAAE,EACjB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,MAAM,CACZ,CAAC;EACH,SAAA;EAAM,aAAA;EACL,YAAA,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;EACvE,SAAA;OACF;EACF;;EChJD,MAAM,QAAQ,GAAG,CAAC,SAAwB,EAAE,SAAwB,KAAI;MACtE,OAAO,SAAS,CAAC,QAAQ,CAAC,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC;EACjE,CAAC,CAAC;EAEY,MAAO,SAAS,CAAA;MAQ5B,WAAY,CAAA,IAAY,EAAE,SAAwB,EAAA;UAPxC,IAAS,CAAA,SAAA,GAAkB,EAAE,CAAC;UAC9B,IAAI,CAAA,IAAA,GAAG,CAAC,CAAC;EAOjB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACjB,QAAA,IAAI,CAAC,aAAa,GAAG,EAAO,CAAC;EAC7B,QAAA,IAAI,CAAC,WAAW,GAAG,EAAO,CAAC;EAC3B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;OAC5B;MAED,IAAI,SAAS,CAAC,SAAwB,EAAA;EACpC,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK,IAAI,QAAQ,CAAI,QAAQ,CAAC,CAAC,CAAC;UACxE,IAAI,CAAC,oBAAoB,EAAE,CAAC;EAC5B,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OAC/B;EAED,IAAA,IAAI,SAAS,GAAA;EACX,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC;OAC9C;MAES,oBAAoB,GAAA;EAC5B,QAAA,IAAI,CAAC,aAAa,GAAG,EAAO,CAAC;EAC7B,QAAA,IAAI,CAAC,WAAW,GAAG,EAAO,CAAC;UAE3B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;EAClC,YAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;EACnC,YAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;cAClC,IAAI,CAAC,aAAqB,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;cACtD,IAAI,CAAC,WAAmB,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;EACvD,SAAC,CAAC,CAAC;OACJ;MAEO,kBAAkB,GAAA;EACxB,QAAA,MAAM,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;EAC7B,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;EACjC,QAAA,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;UAEhC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;EAC/B,YAAA,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;EAC9B,YAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;EACnC,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC;EAE9B,YAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;EACxB,gBAAA,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;kBACzB,IAAI,CAAC,aAAqB,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC;kBACtE,IAAI,CAAC,WAAmB,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC;EACtE,aAAA;EAED,YAAA,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE;kBAChC,IAAI,CAAC,aAAqB,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;kBAC/D,IAAI,CAAC,WAAmB,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;EAC/D,aAAA;EACF,SAAA;OACF;EAED,IAAA,MAAM,CAAC,IAAY,EAAA;EACjB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;UAEjB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;EAClC,YAAA,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC7B,SAAC,CAAC,CAAC;UAEH,IAAI,CAAC,kBAAkB,EAAE,CAAC;EAE1B,QAAA,OAAO,IAAI,CAAC;OACb;MAED,KAAK,GAAA;UACH,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;UAChE,OAAO,IAAI,SAAS,CAAI,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;OAC/C;EACF;;EC5FD,MAAM,MAAM,GAAG;EACb,IAAA,MAAM,EAAE,CAAC;EACT,IAAA,OAAO,EAAE,CAAC;MACV,QAAQ,EAAE,CAAC,CAAC;GACb,CAAC;EAMY,MAAO,QAAQ,CAAA;EAM3B,IAAA,WAAA,CACE,IAAY,EACZ,QAAiC,EACjC,MAAkB,EAAA;EAElB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACjB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EACzB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;EACrB,QAAA,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;OAC5B;EAED,IAAA,MAAM,CAAC,KAAa,EAAA;EAClB,QAAA,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;EAC5B,YAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EACtB,SAAA;OACF;MAED,IAAI,GAAA;EACF,QAAA,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,MAAM,EAAE;EAChC,YAAA,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;EAC7B,SAAA;OACF;MAED,KAAK,GAAA;EACH,QAAA,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,QAAQ,EAAE;EAClC,YAAA,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;EAC5B,SAAA;OACF;MAED,OAAO,GAAA;EACL,QAAA,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC;UAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;OACf;EACF;;EC1CoB,MAAA,YAEnB,SAAQ,QAAgB,CAAA;EAGxB,IAAA,WAAA,CACE,IAAY,EACZ,QAAiC,EACjC,MAAkB,EAAA;EAElB,QAAA,KAAK,CAAC,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;EACzC,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;OAClB;EAED,IAAA,MAAM,CAAC,KAAa,EAAA;EAClB,QAAA,IAAI,OAAO,KAAK,CAAC,QAAQ,KAAK,QAAQ,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;EACxE,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;EAClD,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;cAEjD,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;EACzC,gBAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EACtB,aAAA;EACF,SAAA;OACF;EACF;;EC5Ba,MAAO,UAAU,CAAA;EAG7B,IAAA,WAAA,GAAA;EACE,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;OACrB;MAED,eAAe,CACb,IAAY,EACZ,QAAiC,EAAA;UAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAS,IAAI,EAAE,CAAC,KAAK,KAAI;cACxD,QAAQ,CAAC,KAAK,CAAC,CAAC;cAChB,QAAQ,CAAC,OAAO,EAAE,CAAC;EACrB,SAAC,CAAC,CAAC;EAEH,QAAA,OAAO,QAAQ,CAAC;OACjB;MAED,WAAW,CACT,IAAY,EACZ,QAAiC,EAAA;UAEjC,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAK;cACrD,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;EAC/C,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;kBACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;EACjC,aAAA;EACH,SAAC,CAAC,CAAC;EAEH,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC9B,QAAA,OAAO,QAAQ,CAAC;OACjB;MAED,WAAW,CACT,IAAY,EACZ,QAAiC,EAAA;UAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,KAAI;cAC5C,QAAQ,CAAC,KAAK,CAAC,CAAC;cAChB,QAAQ,CAAC,OAAO,EAAE,CAAC;EACrB,SAAC,CAAC,CAAC;EAEH,QAAA,OAAO,QAAQ,CAAC;OACjB;MAED,OAAO,CACL,IAAY,EACZ,QAAiC,EAAA;UAEjC,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAS,IAAI,EAAE,QAAQ,EAAE,MAAK;cACzD,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;EAC/C,YAAA,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;kBACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;EACjC,aAAA;EACH,SAAC,CAAC,CAAC;EAEH,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC9B,QAAA,OAAO,QAAQ,CAAC;OACjB;EAED,IAAA,MAAM,CAAwB,KAAa,EAAA;UACzC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAA0B,KAAI;EACpD,YAAA,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;EACzB,SAAC,CAAC,CAAC;OACJ;MAED,cAAc,GAAA;EACZ,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;OACrB;MAED,OAAO,GAAA;UACL,IAAI,CAAC,cAAc,EAAE,CAAC;OACvB;EACF;;EC3Ea,MAAO,YAAY,CAAA;EAI/B,IAAA,WAAA,GAAA;EACE,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,GAAG,EAAE,CAAC;UACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACnC,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;OAC5B;MAED,KAAK,GAAA;UACH,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;EAC5C,YAAA,QAAQ,EAAE,CAAC;EACb,SAAC,CAAC,CAAC;EAEH,QAAA,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,GAAG,CAAC,EAAE;cACrC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EAChE,SAAA;EAAM,aAAA;EACL,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;EAC5B,SAAA;OACF;EAED,IAAA,QAAQ,CAAC,QAAsB,EAAA;UAC7B,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;EAEjD,QAAA,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;cAC/B,IAAI,CAAC,KAAK,EAAE,CAAC;EACd,SAAA;OACF;EAED,IAAA,UAAU,CAAC,QAAsB,EAAA;EAC/B,QAAA,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;OAC3C;MAED,GAAG,GAAA;EACD,QAAA,OAAO,WAAW,CAAC,GAAG,EAAE,CAAC;OAC1B;EACF;;ECnCD,MAAM,WAAW,GAAG,OAAO,CAAC;EAC5B,MAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;EACxC,SAAS,aAAa,MAAK;AAEfA,+BAIX;EAJD,CAAA,UAAY,WAAW,EAAA;EACrB,IAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,SAAY,CAAA;EACZ,IAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAW,CAAA;EACX,IAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAW,CAAA;EACb,CAAC,EAJWA,mBAAW,KAAXA,mBAAW,GAItB,EAAA,CAAA,CAAA,CAAA;AAEWC,mCAGX;EAHD,CAAA,UAAY,eAAe,EAAA;EACzB,IAAA,eAAA,CAAA,eAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAW,CAAA;EACX,IAAA,eAAA,CAAA,eAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAa,CAAA;EACf,CAAC,EAHWA,uBAAe,KAAfA,uBAAe,GAG1B,EAAA,CAAA,CAAA,CAAA;EAEoB,MAAA,MAAO,SAAQ,UAAU,CAAA;EAa5C,IAAA,WAAA,CAAY,KAAc,EAAA;EACxB,QAAA,KAAK,EAAE,CAAC;EACR,QAAA,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;EACpB,QAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACf,QAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACf,QAAA,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;EAC7B,QAAA,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;EACxB,QAAA,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;EACrB,QAAA,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;EACjB,QAAA,IAAI,CAAC,gBAAgB,GAAGA,uBAAe,CAAC,OAAO,CAAC;EAChD,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,YAAY,CAAC;EACpC,QAAA,IAAI,CAAC,MAAM,GAAGD,mBAAW,CAAC,OAAO,CAAC;EAClC,QAAA,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;UAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OAClC;EAED,IAAA,IAAI,IAAI,GAAA;UACN,OAAO,IAAI,CAAC,KAAK,CAAC;OACnB;MAED,IAAI,IAAI,CAAC,KAAa,EAAA;EACpB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;OACpB;EAED,IAAA,IAAI,SAAS,GAAA;UACX,OAAO,IAAI,CAAC,UAAU,CAAC;OACxB;MAED,IAAI,SAAS,CAAC,KAAK,EAAA;UACjB,IAAI,KAAK,GAAG,CAAC,EAAE;EACb,YAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;EACzB,SAAA;OACF;EAED,IAAA,IAAI,QAAQ,GAAA;UACV,OAAO,IAAI,CAAC,SAAS,CAAC;OACvB;MAED,IAAI,QAAQ,CAAC,KAAK,EAAA;EAChB,QAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;cAC7B,KAAK,GAAG,CAAC,CAAC;EACX,SAAA;;UAGD,IAAI,KAAK,IAAI,CAAC,EAAE;cACd,KAAK,GAAG,WAAW,CAAC;EACrB,SAAA;EAED,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;OACxB;EAED,IAAA,IAAI,MAAM,GAAA;UACR,OAAO,IAAI,CAAC,OAAO,CAAC;OACrB;MAED,IAAI,MAAM,CAAC,KAAK,EAAA;UACd,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,GAAG,CAAC,EAAE;cAC1C,OAAO;EACR,SAAA;EAED,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;OACtB;EAED,IAAA,IAAI,eAAe,GAAA;UACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;OAC9B;MAED,IAAI,eAAe,CAAC,KAAsB,EAAA;EACxC,QAAA,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;cAC9B,OAAO;EACR,SAAA;EAED,QAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;OAC/B;EAED,IAAA,IAAI,KAAK,GAAA;UACP,OAAO,IAAI,CAAC,MAAM,CAAC;OACpB;EAED,IAAA,IAAI,MAAM,GAAA;UACR,OAAO,IAAI,CAAC,OAAO,CAAC;OACrB;MAED,IAAI,MAAM,CAAC,MAA8B,EAAA;EACvC,QAAA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;OACvB;EAED,IAAA,IAAI,UAAU,GAAA;UACZ,OAAO,IAAI,CAAC,WAAW,CAAC;OACzB;MAED,IAAI,UAAU,CAAC,KAAa,EAAA;UAC1B,IAAI,KAAK,IAAI,CAAC,EAAE;EACd,YAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;EAC1B,SAAA;OACF;EAED,IAAA,IAAI,KAAK,GAAA;UACP,OAAO,IAAI,CAAC,MAAM,CAAC;OACpB;MAED,IAAI,KAAK,CAAC,KAAa,EAAA;EACrB,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;OACrB;MAEO,IAAI,GAAA;UACV,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;EACpC,QAAA,MAAM,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;EAClD,QAAA,IAAI,CAAC,KAAK,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC;EAE5D,QAAA,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;EAClB,YAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EAChB,SAAA;;UAGD,IAAI,SAAS,IAAI,CAAC,EAAE;cAClB,OAAO;EACR,SAAA;EAED,QAAA,IAAI,IAAI,CAAC,MAAM,KAAKA,mBAAW,CAAC,OAAO,EAAE;cACvC,IAAI,CAAC,YAAY,EAAE,CAAC;EACrB,SAAA;EAAM,aAAA,IAAI,IAAI,CAAC,MAAM,KAAKA,mBAAW,CAAC,OAAO,EAAE;cAC9C,IAAI,CAAC,WAAW,EAAE,CAAC;EACpB,SAAA;EAED,QAAA,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;OACjC;MAEO,WAAW,GAAA;UACjB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EACnC,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;EAE1B,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;UAE9C,IAAI,IAAI,IAAI,CAAC,EAAE;cACb,IAAI,CAAC,WAAW,EAAE,CAAC;cAEnB,IAAI,CAAC,MAAM,CAAC;EACV,gBAAA,IAAI,EAAE,MAAM;EACZ,gBAAA,IAAI,EAAE,CAAC;kBACP,QAAQ;EACT,aAAA,CAAC,CAAC;EAEH,YAAA,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,EAAE;EACpC,gBAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;kBACb,IAAI,CAAC,IAAI,EAAE,CAAC;kBACZ,OAAO;EACR,aAAA;EAED,YAAA,IAAI,eAAe,KAAKC,uBAAe,CAAC,SAAS,EAAE;kBACjD,MAAM,YAAY,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;EAEpC,gBAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACf,gBAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;EACxB,gBAAA,IAAI,CAAC,MAAM,GAAGD,mBAAW,CAAC,OAAO,CAAC;EACnC,aAAA;EAAM,iBAAA;EACL,gBAAA,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC;kBAE9B,IAAI,CAAC,MAAM,CAAC;EACV,oBAAA,IAAI,EAAE,MAAM;EACZ,oBAAA,IAAI,EAAE,CAAC;sBACP,QAAQ;EACT,iBAAA,CAAC,CAAC;EAEH,gBAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACf,gBAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;EACxB,gBAAA,IAAI,CAAC,MAAM,GAAGA,mBAAW,CAAC,OAAO,CAAC;EACnC,aAAA;EACF,SAAA;EAAM,aAAA;EACL,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACjB,SAAA;OACF;MAEO,YAAY,GAAA;UAClB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EACnC,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;EAE1B,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;UAE9C,IAAI,IAAI,IAAI,CAAC,EAAE;cACb,IAAI,CAAC,WAAW,EAAE,CAAC;cAEnB,IAAI,CAAC,MAAM,CAAC;EACV,gBAAA,IAAI,EAAE,MAAM;EACZ,gBAAA,IAAI,EAAE,CAAC;kBACP,QAAQ;EACT,aAAA,CAAC,CAAC;EAEH,YAAA,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,EAAE;EACpC,gBAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;kBACb,IAAI,CAAC,IAAI,EAAE,CAAC;kBACZ,OAAO;EACR,aAAA;EAED,YAAA,IAAI,eAAe,KAAKC,uBAAe,CAAC,SAAS,EAAE;EACjD,gBAAA,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;EAE/B,gBAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACf,gBAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;EACxB,gBAAA,IAAI,CAAC,MAAM,GAAGD,mBAAW,CAAC,OAAO,CAAC;EACnC,aAAA;EAAM,iBAAA;EACL,gBAAA,MAAM,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC;kBAE9B,IAAI,CAAC,MAAM,CAAC;EACV,oBAAA,IAAI,EAAE,MAAM;EACZ,oBAAA,IAAI,EAAE,CAAC;sBACP,QAAQ;EACT,iBAAA,CAAC,CAAC;EAEH,gBAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACf,gBAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;EACxB,gBAAA,IAAI,CAAC,MAAM,GAAGA,mBAAW,CAAC,OAAO,CAAC;EACnC,aAAA;EACF,SAAA;EAAM,aAAA;EACL,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACjB,SAAA;OACF;EAED,IAAA,IAAI,CAAC,IAAY,EAAA;EACf,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;EAC5B,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;EAElB,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UAEzB,IAAI,CAAC,MAAM,CAAC;EACV,YAAA,IAAI,EAAE,MAAM;cACZ,IAAI;cACJ,QAAQ;EACT,SAAA,CAAC,CAAC;EAEH,QAAA,OAAO,IAAI,CAAC;OACb;MAED,IAAI,GAAA;EACF,QAAA,IAAI,IAAI,CAAC,MAAM,KAAKA,mBAAW,CAAC,OAAO,EAAE;EACvC,YAAA,IAAI,CAAC,MAAM,GAAGA,mBAAW,CAAC,OAAO,CAAC;EAClC,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;cAEzB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;cAElC,IAAI,CAAC,MAAM,CAAC;EACV,gBAAA,IAAI,EAAE,SAAS;EAChB,aAAA,CAAC,CAAC;EACJ,SAAA;EAED,QAAA,OAAO,IAAI,CAAC;OACb;MAED,IAAI,GAAA;EACF,QAAA,IAAI,IAAI,CAAC,MAAM,KAAKA,mBAAW,CAAC,OAAO,EAAE;cACvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;EAExC,YAAA,IAAI,CAAC,MAAM,GAAGA,mBAAW,CAAC,OAAO,CAAC;cAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;cAEhC,IAAI,CAAC,MAAM,CAAC;EACV,gBAAA,IAAI,EAAE,QAAQ;EACf,aAAA,CAAC,CAAC;EACJ,SAAA;EAED,QAAA,OAAO,IAAI,CAAC;OACb;MAED,OAAO,GAAA;EACL,QAAA,IAAI,IAAI,CAAC,MAAM,KAAKA,mBAAW,CAAC,OAAO,EAAE;cACvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;EAExC,YAAA,IAAI,CAAC,MAAM,GAAGA,mBAAW,CAAC,OAAO,CAAC;cAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;cAEhC,IAAI,CAAC,MAAM,CAAC;EACV,gBAAA,IAAI,EAAE,UAAU;EACjB,aAAA,CAAC,CAAC;EACJ,SAAA;EAED,QAAA,OAAO,IAAI,CAAC;OACb;MAED,OAAO,GAAA;UACL,IAAI,CAAC,IAAI,EAAE,CAAC;UACZ,KAAK,CAAC,OAAO,EAAE,CAAC;OACjB;EACF;;AC1TD,mBAAe,CAAC,UAAkB,KAAI;MACpC,OAAO,UAAU,GAAG,UAAU,CAAC;EACjC,CAAC;;ACFD,oBAAe,CAAC,UAAkB,KAAI;MACpC,OAAO,CAAC,UAAU,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;EACxC,CAAC;;ACFD,sBAAe,CAAC,UAAkB,KAAI;MACpC,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;UAAE,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,UAAU,CAAC;EACxE,IAAA,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,IAAI,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC1D,CAAC;;ACHD,sBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;EAClB,IAAA,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAChB,MAAM,CAAC,GAAG,CAAC,CAAC;MAEZ,IAAI,UAAU,IAAI,CAAC;EAAE,QAAA,OAAO,CAAC,CAAC;MAC9B,IAAI,UAAU,IAAI,CAAC;EAAE,QAAA,OAAO,CAAC,CAAC;MAE9B,OAAO,EACL,CAAC;EACD,QAAA,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,UAAU,IAAI,CAAC,CAAC,CAAC;UACnC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CACjD,CAAC;EACJ,CAAC;;ACbD,yBAAe,CAAC,CAAS,KAAI;MAC3B,IAAI,CAAC,GAAG,CAAC,CAAC;MACV,IAAI,CAAC,GAAG,CAAC,CAAC;MACV,IAAI,CAAC,GAAG,CAAC,CAAC;MACV,IAAI,CAAC,GAAG,OAAO,CAAC;MAChB,IAAI,CAAC,GAAG,CAAC,CAAC;MACV,IAAI,CAAC,GAAG,CAAC,CAAC;MAEV,IAAI,CAAC,IAAI,CAAC;EAAE,QAAA,OAAO,CAAC,CAAC;MACrB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;UAAE,OAAO,CAAC,GAAG,CAAC,CAAC;EACpC,IAAA,IAAI,CAAC,CAAC;UAAE,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;MAC1B,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;UACnB,CAAC,GAAG,CAAC,CAAC;EACN,QAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACf,KAAA;;UAAM,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MACtD,IAAI,CAAC,GAAG,CAAC;UACP,QACE,CAAC,GAAG;EACF,aAAC,CAAC;EACA,gBAAA,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;kBAC1B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,YAAA,CAAC,EACD;EACJ,IAAA,QACE,CAAC;EACC,QAAA,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;UAC3B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;UAC3C,GAAG;UACL,CAAC;EACD,QAAA,CAAC,EACD;EACJ,CAAC;;AC/BD,uBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;EAClB,IAAA,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAChB,MAAM,CAAC,GAAG,CAAC,CAAC;MAEZ,IAAI,UAAU,IAAI,CAAC;EAAE,QAAA,OAAO,CAAC,CAAC;MAC9B,IAAI,UAAU,IAAI,CAAC;EAAE,QAAA,OAAO,CAAC,CAAC;EAE9B,IAAA,QACE,CAAC;UACC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC;UAC7B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;EAClD,QAAA,CAAC,EACD;EACJ,CAAC;;ACdD,sBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,MAAM,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC;MAE1B,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;UAC7B,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,UAAU,GAAG,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;EACzE,KAAA;EAED,IAAA,QACE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,IAAI,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAC3E;EACJ,CAAC;;ACVD,sBAAe,CAAC,UAAkB,KAAI;MACpC,IAAI,CAAC,GAAG,UAAU,CAAC;MAEnB,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE;EACvB,QAAA,OAAO,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;EACvB,KAAA;EAAM,SAAA,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE;EACvB,QAAA,OAAO,MAAM,IAAI,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;EAC9C,KAAA;EAAM,SAAA,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,EAAE;EACzB,QAAA,OAAO,MAAM,IAAI,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;EACjD,KAAA;EAAM,SAAA;EACL,QAAA,OAAO,MAAM,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;EACpD,KAAA;EACH,CAAC;;ACVD,qBAAe,CAAC,UAAkB,KAAI;MACpC,OAAO,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;EAC3C,CAAC;;ACDD,wBAAe,CAAC,UAAkB,KAAI;MACpC,IAAI,UAAU,GAAG,GAAG,EAAE;UACpB,OAAO,YAAY,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;EAC3C,KAAA;EAAM,SAAA;EACL,QAAA,OAAO,aAAa,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;EACtD,KAAA;EACH,CAAC;;ACTD,oBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,OAAO,UAAU,GAAG,UAAU,GAAG,UAAU,CAAC;EAC9C,CAAC;;ACFD,qBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,OAAO,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC;EAC/E,CAAC;;ACFD,uBAAe,CAAC,UAAkB,KAAI;MACpC,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;UAC3B,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,UAAU,GAAG,UAAU,CAAC;EACxD,IAAA,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,IAAI,UAAU,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC;EACrE,CAAC;;ACJD,oBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,OAAO,CAAC,IAAI,UAAU,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,CAAC;EACtE,CAAC;;ACFD,qBAAe,CAAC,UAAkB,KAAI;MACpC,QACE,CAAC,CAAC;EACF,SAAC,CAAC,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,UAAU,GAAG,UAAU;cACvE,CAAC,CAAC,EACJ;EACJ,CAAC;;ACND,uBAAe,CAAC,UAAkB,KAAI;MACpC,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;EAC3B,QAAA,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,CAAC;MACrE,QACE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,IAAI,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,CAAC,CAAC,EACzE;EACJ,CAAC;;ACND,oBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,QACE,CAAC,IAAI,UAAU,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,EACzE;EACJ,CAAC;;ACJD,qBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,QACE,CAAC;WACA,CAAC,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC;cAC/B,UAAU;cACV,UAAU;cACV,UAAU;cACV,UAAU;cACV,CAAC,CAAC,EACJ;EACJ,CAAC;;ACVD,uBAAe,CAAC,UAAkB,KAAI;MACpC,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;EAC3B,QAAA,QACE,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,EACxE;EACJ,IAAA,QACE,CAAC,CAAC,GAAG,CAAC;EACN,SAAC,CAAC,UAAU,IAAI,CAAC,IAAI,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,CAAC,CAAC,EAC3E;EACJ,CAAC;;ACTD,mBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACnD,CAAC;;ACFD,oBAAe,CAAC,UAAkB,KAAI;MACpC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,KAAK,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACxD,CAAC;;ACFD,sBAAe,CAAC,UAAkB,KAAI;MACpC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/D,CAAC;;ACFD,mBAAe,CAAC,UAAkB,KAAI;MACpC,OAAO,UAAU,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;EAClE,CAAC;;ACFD,oBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,OAAO,UAAU,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9E,CAAC;;ACFD,sBAAe,CAAC,UAAkB,KAAI;MACpC,IAAI,UAAU,IAAI,CAAC;EAAE,QAAA,OAAO,CAAC,CAAC;MAC9B,IAAI,UAAU,IAAI,CAAC;EAAE,QAAA,OAAO,CAAC,CAAC;MAC9B,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;UAC3B,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;MACtD,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;EAC1D,CAAC;;ACND,mBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;EACvD,CAAC;;ACFD,oBAAe,CAAC,UAAkB,KAAI;MACpC,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,IAAI,UAAU,CAAC,CAAC;EAC3E,CAAC;;ACFD,sBAAe,CAAC,UAAkB,KAAI;MACpC,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;UAC3B,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;MACjE,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;EACvE,CAAC;;ACJD,mBAAe,CAAC,UAAkB,KAAI;MACpC,MAAM,CAAC,GAAG,OAAO,CAAC;EAClB,IAAA,OAAO,UAAU,GAAG,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;EAC9D,CAAC;;ACHD,oBAAe,CAAC,UAAkB,KAAI;MACpC,MAAM,CAAC,GAAG,OAAO,CAAC;EAClB,IAAA,QACE,CAAC;WACA,CAAC,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC;cAC/B,UAAU;eACT,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC;cAC1B,CAAC,CAAC,EACJ;EACJ,CAAC;;ACTD,mBAAe,CAAC,UAAkB,KAAI;EACpC,IAAA,OAAO,UAAU,CAAC;EACpB,CAAC;;ACiED,QAAM,OAAO,GAAG;EACd,IAAA,UAAU,EAAE,UAAU;EACtB,IAAA,WAAW,EAAE,WAAW;EACxB,IAAA,aAAa,EAAE,aAAa;EAC5B,IAAA,WAAW,EAAE,WAAW;EACxB,IAAA,YAAY,EAAE,YAAY;EAC1B,IAAA,cAAc,EAAE,cAAc;EAC9B,IAAA,WAAW,EAAE,WAAW;EACxB,IAAA,YAAY,EAAE,YAAY;EAC1B,IAAA,cAAc,EAAE,cAAc;EAC9B,IAAA,WAAW,EAAE,WAAW;EACxB,IAAA,YAAY,EAAE,YAAY;EAC1B,IAAA,cAAc,EAAE,cAAc;EAC9B,IAAA,UAAU,EAAE,UAAU;EACtB,IAAA,WAAW,EAAE,WAAW;EACxB,IAAA,aAAa,EAAE,aAAa;EAC5B,IAAA,UAAU,EAAE,UAAU;EACtB,IAAA,WAAW,EAAE,WAAW;EACxB,IAAA,aAAa,EAAE,aAAa;EAC5B,IAAA,UAAU,EAAE,UAAU;EACtB,IAAA,WAAW,EAAE,WAAW;EACxB,IAAA,aAAa,EAAE,aAAa;EAC5B,IAAA,aAAa,EAAE,aAAa;EAC5B,IAAA,cAAc,EAAE,cAAc;EAC9B,IAAA,gBAAgB,EAAE,gBAAgB;EAClC,IAAA,UAAU,EAAE,UAAU;EACtB,IAAA,WAAW,EAAE,WAAW;EACxB,IAAA,aAAa,EAAE,aAAa;EAC5B,IAAA,YAAY,EAAE,YAAY;EAC1B,IAAA,aAAa,EAAE,aAAa;EAC5B,IAAA,eAAe,EAAE,eAAe;EAChC,IAAA,MAAM,EAAE,UAAU;;;EClGpB,MAAME,SAAO,GAAG,MAAM,CAAC,CAAC;EAIV,MAAO,aAAa,CAAA;EAGhC,IAAA,WAAA,CAAY,WAAoBA,SAAO,EAAA;UAF/B,IAAO,CAAA,OAAA,GAAYA,SAAO,CAAC;EAGjC,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;OAC3B;EAED,IAAA,KAAK,CAAC,MAAW,EAAA;EACf,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;OACnB;EAEO,IAAA,IAAI,CAAC,MAAW,EAAA;UACtB,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,IAAI,IAAI,EAAE;EAChD,YAAA,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;EACtB,gBAAA,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;EACnC,oBAAA,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;EACzC,iBAAA;EAAM,qBAAA,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;sBAC1C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;EACxB,iBAAA;EACF,aAAA;EACF,SAAA;OACF;EAED,IAAA,UAAU,CAAC,OAAgB,EAAA;EACzB,QAAA,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;EACjC,YAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EACxB,SAAA;EAAM,aAAA;EACL,YAAA,IAAI,CAAC,OAAO,GAAGA,SAAO,CAAC;EACxB,SAAA;EAED,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;OACxB;EACF;;ECpCD,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC;EAIV,MAAO,cAAc,CAAA;EAGjC,IAAA,WAAA,CAAY,WAAoB,OAAO,EAAA;UAF/B,IAAO,CAAA,OAAA,GAAY,OAAO,CAAC;EAGjC,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;OAC3B;EAED,IAAA,KAAK,CAAC,IAAS,EAAE,KAAU,EAAE,MAAW,EAAA;UACtC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;OAChC;EAEO,IAAA,IAAI,CAAC,IAAS,EAAE,KAAU,EAAE,MAAW,EAAA;UAC7C,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,IAAI,EAAE;EAC5C,YAAA,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;EACpB,gBAAA,IACE,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ;EAC7B,oBAAA,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,QAAQ;EAC9B,oBAAA,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,EAC/B;EACA,oBAAA,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EACnD,iBAAA;EAAM,qBAAA,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;EACxC,oBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/C,iBAAA;EACF,aAAA;EACF,SAAA;OACF;EAED,IAAA,UAAU,CAAC,OAAgB,EAAA;EACzB,QAAA,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;EACjC,YAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EACxB,SAAA;EAAM,aAAA;EACL,YAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EACxB,SAAA;EAED,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;OACxB;EACF;;ECrCD,MAAM,GAAG,GAAG,CAAC,IAAY,EAAE,KAAa,KAAI;MAC1C,OAAO,IAAI,GAAG,KAAK,CAAC;EACtB,CAAC,CAAC;EAEF,MAAM,QAAQ,GAAG,CAAC,IAAY,EAAE,KAAa,KAAI;MAC/C,OAAO,IAAI,GAAG,KAAK,CAAC;EACtB,CAAC,CAAC;EAEF,MAAM,QAAQ,GAAG,CAAC,IAAY,EAAE,KAAa,KAAI;MAC/C,OAAO,IAAI,GAAG,KAAK,CAAC;EACtB,CAAC,CAAC;EAEF,MAAM,MAAM,GAAG,CAAC,IAAY,EAAE,KAAa,KAAI;MAC7C,OAAO,IAAI,GAAG,KAAK,CAAC;EACtB,CAAC,CAAC;EAEY,MAAO,cAAc,CAAA;EAIjC,IAAA,WAAA,GAAA;EACE,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;EAC3C,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;OACpC;MAED,MAAM,CAAI,MAAS,EAAE,MAAc,EAAA;EACjC,QAAA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAK;EAC3B,YAAA,OAAO,MAAM,CAAC;EAChB,SAAC,CAAC,CAAC;EAEH,QAAA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;OAC5B;EAED,IAAA,GAAG,CAAI,IAAO,EAAE,KAAQ,EAAE,MAAS,EAAA;EACjC,QAAA,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;UACpC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;OAChD;EAED,IAAA,QAAQ,CAAI,IAAO,EAAE,KAAQ,EAAE,MAAS,EAAA;EACtC,QAAA,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;UACzC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;OAChD;EAED,IAAA,QAAQ,CAAI,IAAO,EAAE,KAAQ,EAAE,MAAS,EAAA;EACtC,QAAA,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;UACzC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;OAChD;EAED,IAAA,MAAM,CAAI,IAAO,EAAE,KAAQ,EAAE,MAAS,EAAA;EACpC,QAAA,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;UACvC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;OAChD;EACF;;EClDsB,IAAI,cAAc,GAAG;EA+B9B,MAAO,QAAQ,CAAA;EAS3B,IAAA,WAAA,CAAY,MAAyB,EAAA;EACnC,QAAA,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;EAChC,QAAA,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;EACpB,QAAA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;EACxB,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,GAAG,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;EACvE,QAAA,IAAI,CAAC,KAAK,GAAG,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;UACjE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;EACtE,QAAA,IAAI,CAAC,MAAM;EACT,YAAA,OAAO,MAAM,CAAC,MAAM,KAAK,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;OACxE;MAED,KAAK,GAAA;UACH,OAAO,IAAI,QAAQ,CAAC;cAClB,QAAQ,EAAE,IAAI,CAAC,QAAQ;EACvB,YAAA,EAAE,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;EACtB,YAAA,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;cAC1B,OAAO,EAAE,IAAI,CAAC,OAAO;cACrB,KAAK,EAAE,IAAI,CAAC,KAAK;EACjB,YAAA,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC;cAChD,MAAM,EAAE,IAAI,CAAC,MAAM;EACpB,SAAA,CAAC,CAAC;OACJ;EACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECnED,MAAM,IAAI,CAAC;EACX,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,GAAG,KAAK,EAAE;EACvE,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;EAC3B,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;EACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;EACrC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EACjC,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;EACvC,QAAQ,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ;EAC/C,YAAY,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;EAC/C,YAAY,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;EAC7F,SAAS;EACT,KAAK;EACL,CAAC;AACD;EACA,MAAM,aAAa,SAAS,IAAI,CAAC;EACjC,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE;EAC1D,QAAQ,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;EACtD,KAAK;EACL,IAAI,KAAK,GAAG;EACZ,QAAQ,MAAM,IAAI,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC7F,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK;EACrD,YAAY,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC;EACjC,SAAS,CAAC,CAAC;EACX,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,QAAQ,GAAG;EACf,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EACvE,KAAK;EACL,CAAC;AACD;EACA,MAAM,SAAS,SAAS,IAAI,CAAC;EAC7B,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE;EACjE,QAAQ,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;EAChD,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;EAC3B,KAAK;EACL,IAAI,KAAK,GAAG;EACZ,QAAQ,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC/F,KAAK;EACL,IAAI,QAAQ,GAAG;EACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;EAC1B,KAAK;EACL,CAAC;AACD;EACA,MAAM,aAAa,CAAC;EACpB,IAAI,WAAW,GAAG;EAClB,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;EACjC,QAAQ,IAAI,CAAC,aAAa,GAAG;EAC7B,YAAY,OAAO,EAAE,IAAI;EACzB,YAAY,OAAO,EAAE,IAAI;EACzB,SAAS,CAAC;EACV,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;EAClC,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;EAC3B,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;EAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;EACzB,KAAK;EACL,IAAI,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE;EAC/B,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;EAC9B,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACxC,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACxC,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI;EAC9C,YAAY,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE;EACrE,YAAY,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;EACjD,YAAY,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;EACjD,SAAS;EACT,KAAK;EACL,IAAI,QAAQ,CAAC,KAAK,EAAE;EACpB,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;EAC9B,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACpC,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;EACnF,YAAY,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;EACvC,SAAS;EACT,KAAK;EACL,IAAI,cAAc,GAAG;EACrB,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;EAChC,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;EACjC,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;EACrB,KAAK;EACL,IAAI,KAAK,GAAG;EACZ,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;EACjC,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;EACjC,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;EAC/B,KAAK;EACL,IAAI,gBAAgB,GAAG;EACvB,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC;EAClC,KAAK;EACL,IAAI,gBAAgB,GAAG;EACvB,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC;EAClC,KAAK;EACL,IAAI,YAAY,GAAG;EACnB,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;EAC9B,YAAY,OAAO;EACnB,gBAAgB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI;EACxE,gBAAgB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI;EACxE,aAAa,CAAC;EACd,SAAS;EACT,aAAa;EACb,YAAY,OAAO,IAAI,CAAC,aAAa,CAAC;EACtC,SAAS;EACT,KAAK;EACL,IAAI,YAAY,GAAG;EACnB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;EAC3D,KAAK;EACL,IAAI,iBAAiB,GAAG;EACxB,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK;EAC3D,YAAY,IAAI,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAChD,YAAY,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE;EACvC,gBAAgB,SAAS,GAAG,EAAE,CAAC;EAC/B,gBAAgB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACpC,aAAa;EACb,YAAY,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACjC,YAAY,OAAO,GAAG,CAAC;EACvB,SAAS,EAAE,EAAE,CAAC,CAAC;EACf;EACA;EACA;EACA;EACA,QAAQ,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK;EACnD,YAAY,MAAM,YAAY,GAAG,EAAE,CAAC;EACpC,YAAY,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;EACxD,gBAAgB,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7C,gBAAgB,MAAM,YAAY,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAClD,gBAAgB,IAAI,YAAY,IAAI,IAAI,EAAE;EAC1C,oBAAoB,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;EACtD,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,UAAU,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC;EAC3F,oBAAoB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC;EACxF,oBAAoB,MAAM,aAAa,GAAG,IAAI,IAAI,KAAK,CAAC;EACxD,oBAAoB,IAAI,CAAC,aAAa,EAAE;EACxC,wBAAwB,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC1D,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,YAAY,OAAO,YAAY,CAAC;EAChC,SAAS,CAAC,CAAC;EACX,QAAQ,OAAO,YAAY,CAAC;EAC5B,KAAK;EACL,IAAI,iBAAiB,GAAG;EACxB,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;EAChD,QAAQ,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;EAC/C,KAAK;EACL,CAAC;AACD;EACA,MAAM,MAAM,CAAC;EACb,IAAI,WAAW,CAAC,IAAI,EAAE;EACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;EAC9B,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACvB,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;EAClC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;EAC3C,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;EACpC,KAAK;EACL,IAAI,cAAc,GAAG;EACrB,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EAC3C,YAAY,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;EACjH,SAAS;EACT,KAAK;EACL,IAAI,cAAc,GAAG;EACrB,QAAQ,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;EACtC,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;EACrC,KAAK;EACL,IAAI,IAAI,UAAU,GAAG;EACrB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;EAC/C,KAAK;EACL,IAAI,IAAI,SAAS,GAAG;EACpB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;EAC/C,KAAK;EACL,IAAI,UAAU,CAAC,UAAU,EAAE;EAC3B,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;EACnC,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;EAC1C,KAAK;EACL,IAAI,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE;EAC/B,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;EAChD,KAAK;EACL,IAAI,YAAY,GAAG;EACnB,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;EACpC,KAAK;EACL,IAAI,kBAAkB,GAAG;EACzB,QAAQ,OAAO,IAAI,CAAC,cAAc,CAAC;EACnC,KAAK;EACL,IAAI,aAAa,CAAC,KAAK,EAAE;EACzB,QAAQ,OAAO,KAAK,IAAI,IAAI,KAAK,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;EAClF,KAAK;EACL,IAAI,OAAO,GAAG;EACd,QAAQ,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;EACjD,KAAK;EACL,IAAI,WAAW,GAAG;EAClB,QAAQ,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;EACnC,KAAK;EACL,IAAI,IAAI,GAAG;EACX,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;EAC5B,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC;EACzB,SAAS;EACT,aAAa;EACb,YAAY,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;EAChE,SAAS;EACT,KAAK;EACL,IAAI,QAAQ,GAAG;EACf,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;EAChC,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC;EACzB,SAAS;EACT,aAAa;EACb,YAAY,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;EAChE,SAAS;EACT,KAAK;EACL,IAAI,IAAI,GAAG;EACX,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;EAC1B,KAAK;EACL,IAAI,UAAU,CAAC,IAAI,EAAE;EACrB,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;EAC1B,KAAK;EACL,IAAI,eAAe,GAAG;EACtB,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACvB,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EAC1C,KAAK;EACL,IAAI,OAAO,GAAG;EACd,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EAC5C,KAAK;EACL,IAAI,QAAQ,GAAG;EACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;EAC1B,KAAK;EACL,IAAI,QAAQ,CAAC,KAAK,EAAE;EACpB,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;EACvC,YAAY,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE;EACvD,gBAAgB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;EACpE,aAAa;EACb,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;EAC/B,SAAS;EACT,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,OAAO,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC;EAChC,KAAK;EACL,IAAI,OAAO,GAAG;EACd,QAAQ,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EACnD,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EAC/B,KAAK;EACL,IAAI,oBAAoB,GAAG;EAC3B,QAAQ,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;EAC5D,KAAK;EACL,CAAC;AACD;EACA,MAAM,UAAU,CAAC;EACjB,IAAI,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;EACjC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EAC/B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;EAC3B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EAC/B,KAAK;EACL,CAAC;AACD;EACA,MAAM,OAAO,CAAC;EACd,IAAI,WAAW,CAAC,IAAI,GAAG,EAAE,EAAE,IAAI,EAAE,QAAQ,GAAG,EAAE,EAAE;EAChD,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;EAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;EAC1B,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;EAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;EAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;EAChC,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;EAC3B,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EACjC,KAAK;EACL,IAAI,WAAW,GAAG;EAClB,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;EAC3C,YAAY,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;EAChG,SAAS;EACT,KAAK;EACL,IAAI,IAAI,CAAC,IAAI,EAAE;EACf,QAAQ,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;EACxC,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;EACxC,QAAQ,IAAI,MAAM,CAAC,oBAAoB,EAAE,EAAE;EAC3C,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,aAAa;EACb,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,KAAK;EACL,IAAI,IAAI,CAAC,IAAI,EAAE;EACf,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;EACvC,KAAK;EACL,IAAI,IAAI,IAAI,GAAG;EACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;EAC1B,KAAK;EACL,IAAI,IAAI,IAAI,GAAG;EACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;EAC1B,KAAK;EACL,IAAI,IAAI,MAAM,GAAG;EACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;EAC5B,KAAK;EACL,IAAI,IAAI,MAAM,CAAC,KAAK,EAAE;EACtB,QAAQ,IAAI,KAAK,YAAY,OAAO,EAAE;EACtC,YAAY,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;EACjC,SAAS;EACT,KAAK;EACL,IAAI,IAAI,QAAQ,GAAG;EACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;EAC9B,KAAK;EACL,IAAI,IAAI,QAAQ,CAAC,KAAK,EAAE;EACxB,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;EAC/B,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;EAC9B,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC;EAC/B,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC;EAC/B,KAAK;EACL,IAAI,eAAe,GAAG;EACtB;EACA,KAAK;EACL,IAAI,cAAc,GAAG;EACrB;EACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK;EACzD,YAAY,IAAI,EAAE,OAAO,YAAY,OAAO,CAAC,EAAE;EAC/C,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC,CAAC;EAC1F,aAAa;EACb,YAAY,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC;EACnC,SAAS,CAAC,CAAC;EACX;EACA,QAAQ,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACtC,KAAK;EACL,IAAI,eAAe,GAAG;EACtB,QAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,MAAM,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;EACjE,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACvB,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;EACpC,QAAQ,IAAI,MAAM,IAAI,IAAI,EAAE;EAC5B,YAAY,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;EAC7C,YAAY,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;EAChE,YAAY,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;EACpD;EACA,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;EACrD,gBAAgB,MAAM,MAAM,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;EACtD,gBAAgB,IAAI,KAAK,KAAK,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;EACxD,oBAAoB,OAAO,WAAW,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EAClE,iBAAiB;EACjB,qBAAqB,IAAI,KAAK,KAAK,CAAC,EAAE;EACtC,oBAAoB,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EAClE,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EAC3D,iBAAiB;EACjB,aAAa;EACb;EACA,YAAY,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC;EACtJ,gBAAgB,WAAW,IAAI,IAAI;EACnC,gBAAgB,CAAC,CAAC,EAAE,GAAG,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,WAAW,CAAC,IAAI,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;EACvK,gBAAgB,IAAI,MAAM,GAAG,EAAE,CAAC;EAChC,gBAAgB,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAClE,oBAAoB,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,oBAAoB,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;EAC9D,wBAAwB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;EAClE,qBAAqB;EACrB,yBAAyB;EACzB,wBAAwB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;EAClE,wBAAwB,MAAM;EAC9B,qBAAqB;EACrB,oBAAoB,IAAI,CAAC,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;EACnD,wBAAwB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;EAC7E,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB,OAAO,MAAM,CAAC;EAC9B,aAAa;EACb;EACA,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;EACjD,gBAAgB,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;EAC9C,aAAa;EACb,YAAY,IAAI,WAAW,IAAI,IAAI,EAAE;EACrC,gBAAgB,OAAO,WAAW,CAAC,SAAS,EAAE,CAAC;EAC/C,aAAa;EACb,iBAAiB;EACjB,gBAAgB,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;EAC9C,aAAa;EACb,SAAS;EACT,QAAQ,OAAO,EAAE,CAAC;EAClB,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,CAAC;AACD;EACA,MAAM,YAAY,SAAS,OAAO,CAAC;EACnC,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,GAAG,EAAE,EAAE;EAC3C,QAAQ,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;EACpC,KAAK;EACL,CAAC;AACD;EACA,MAAM,UAAU,SAAS,YAAY,CAAC;EACtC,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE;EAC7B,QAAQ,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;EACnC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;EAC5B,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;EACjC,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;EAClD,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAChC,KAAK;EACL,IAAI,gBAAgB,GAAG;EACvB,QAAQ,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE;EAClD,YAAY,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;EACpG,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;EACzC,YAAY,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;EACrH,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;EAChD,YAAY,MAAM,IAAI,KAAK,CAAC,qHAAqH,CAAC,CAAC;EACnJ,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;EAC1E,YAAY,MAAM,IAAI,KAAK,CAAC,mHAAmH,CAAC,CAAC;EACjJ,SAAS;EACT,KAAK;EACL,IAAI,KAAK,CAAC,MAAM,EAAE;EAClB,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;EAC3B,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;EACzB,KAAK;EACL,IAAI,MAAM,CAAC,MAAM,EAAE;EACnB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;EAC7B,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;EACjC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;EACzE,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,KAAK;EACL,IAAI,WAAW,GAAG;EAClB,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACvD,QAAQ,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;EAClD,YAAY,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;EACxD,YAAY,MAAM,QAAQ,GAAG,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;EACjE,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;EACnG,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;EACzC,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;EAClD,SAAS;EACT,aAAa;EACb,YAAY,IAAI,CAAC,aAAa,EAAE,CAAC;EACjC,SAAS;EACT,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,MAAM,OAAO,GAAG,CAAC,uCAAuC,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;EACrH,QAAQ,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;EACjF,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;EAC3C,KAAK;EACL,IAAI,KAAK,CAAC,IAAI,EAAE;EAChB,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;EACtC,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC7B,SAAS;EACT,QAAQ,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;EACtD,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;EACzB,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3B,KAAK;EACL,CAAC;AACD;EACA,MAAM,aAAa,SAAS,YAAY,CAAC;EACzC,IAAI,WAAW,CAAC,OAAO,EAAE;EACzB,QAAQ,KAAK,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7D,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAChC,KAAK;EACL,IAAI,gBAAgB,GAAG;EACvB,QAAQ,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,YAAY,CAAC,EAAE;EACzD,YAAY,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;EAC3E,SAAS;EACT,KAAK;EACL,IAAI,KAAK,CAAC,MAAM,EAAE;EAClB,QAAQ,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;EACnC,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;EACpD,QAAQ,IAAI,MAAM,CAAC,kBAAkB,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE;EACzD,YAAY,MAAM,CAAC,YAAY,EAAE,CAAC;EAClC,YAAY,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;EACpC,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,aAAa;EACb,YAAY,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACxC,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,KAAK;EACL,IAAI,KAAK,GAAG;EACZ,QAAQ,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;EAC7C,KAAK;EACL,CAAC;AAyKD;EACA,MAAM,OAAO,SAAS,YAAY,CAAC;EACnC,IAAI,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE;EAC/B,QAAQ,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;EAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;EAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EAC/B,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAChC,KAAK;EACL,IAAI,gBAAgB,GAAG;EACvB,QAAQ,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ,EAAE;EAC9C,YAAY,MAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;EAC3G,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;EACrC,YAAY,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;EACtH,SAAS;EACT,KAAK;EACL,IAAI,KAAK,CAAC,MAAM,EAAE;EAClB,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;EAC3B,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;EACzB,KAAK;EACL,IAAI,MAAM,CAAC,MAAM,EAAE;EACnB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;EAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACvC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;EAChG,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,KAAK;EACL,IAAI,WAAW,GAAG;EAClB,QAAQ,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,OAAO,EAAE;EAC7C,YAAY,IAAI,CAAC,aAAa,EAAE,CAAC;EACjC,SAAS;EACT,aAAa;EACb,YAAY,IAAI,CAAC,aAAa,EAAE,CAAC;EACjC,SAAS;EACT,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,MAAM,OAAO,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;EAChG,QAAQ,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;EACjF,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;EAC3C,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACxH,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;EAC/C,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;EAC9C,KAAK;EACL,IAAI,KAAK,CAAC,IAAI,EAAE;EAChB,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;EACtC,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC7B,SAAS;EACT,QAAQ,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;EAC/C,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;EAC5B,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;EACtC,KAAK;EACL,CAAC;AAyID;EACA,MAAM,WAAW,SAAS,YAAY,CAAC;EACvC,IAAI,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;EACxC,QAAQ,KAAK,CAAC,cAAc,EAAE,IAAI,EAAE,OAAO,IAAI,IAAI,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;EACtF,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;EACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAChC,KAAK;EACL,IAAI,gBAAgB,GAAG;EACvB,QAAQ,IAAI,IAAI,CAAC,QAAQ,YAAY,aAAa,EAAE;EACpD,YAAY,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;EAC5F,SAAS;EACT,KAAK;EACL,IAAI,MAAM,CAAC,MAAM,EAAE;EACnB,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;EACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;EAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACvC,KAAK;EACL,IAAI,KAAK,CAAC,MAAM,EAAE;EAClB,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;EAC3B,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;EACzB,KAAK;EACL,IAAI,WAAW,GAAG;EAClB,QAAQ,OAAO,IAAI,EAAE;EACrB,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1D,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE;EAClD,gBAAgB,IAAI,CAAC,aAAa,EAAE,CAAC;EACrC,gBAAgB,MAAM;EACtB,aAAa;EACb,iBAAiB;EACjB,gBAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtC,gBAAgB,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE;EAC/D,oBAAoB,IAAI,CAAC,aAAa,EAAE,CAAC;EACzC,oBAAoB,MAAM;EAC1B,iBAAiB;EACjB,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACnC,gBAAgB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;EAC3C,oBAAoB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACpD,oBAAoB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAClE,oBAAoB,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE;EAC1D,wBAAwB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;EACrD,wBAAwB,IAAI,CAAC,aAAa,EAAE,CAAC;EAC7C,wBAAwB,MAAM;EAC9B,qBAAqB;EACrB,yBAAyB;EACzB,wBAAwB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC9C,wBAAwB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EAC3C,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;EACnC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;EACrC,YAAY,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,CAAC,kCAAkC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EAClH,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;EAC/C,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EAC7B,SAAS;EACT,aAAa;EACb,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EACxE,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC9I,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;EACnD,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;EAClD,SAAS;EACT,KAAK;EACL,IAAI,KAAK,CAAC,IAAI,EAAE;EAChB,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;EACtC,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC7B,SAAS;EACT,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;EACnE,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;EACzC,KAAK;EACL,CAAC;AACD;EACA,MAAM,gBAAgB,SAAS,OAAO,CAAC;EACvC,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,GAAG,EAAE,EAAE;EAC3C,QAAQ,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;EACpC,KAAK;EACL,CAAC;AACD;EACA,MAAM,iBAAiB,SAAS,gBAAgB,CAAC;EACjD,IAAI,WAAW,CAAC,OAAO,EAAE;EACzB,QAAQ,KAAK,CAAC,oBAAoB,EAAE,oBAAoB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;EACrE,KAAK;EACL,IAAI,KAAK,CAAC,MAAM,EAAE;EAClB,QAAQ,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;EACnC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;EACpD,QAAQ,IAAI,MAAM,CAAC,kBAAkB,EAAE,EAAE;EACzC,YAAY,MAAM,CAAC,YAAY,EAAE,CAAC;EAClC,YAAY,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;EACpC,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,aAAa;EACb,YAAY,IAAI,IAAI,IAAI,IAAI,EAAE;EAC9B,gBAAgB,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EAC5C,aAAa;EACb,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,KAAK;EACL,IAAI,KAAK,GAAG;EACZ,QAAQ,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;EAC7C,KAAK;EACL,CAAC;AACD;EACA,MAAM,YAAY,SAAS,gBAAgB,CAAC;EAC5C,IAAI,WAAW,CAAC,IAAI,EAAE,QAAQ,GAAG,EAAE,EAAE;EACrC,QAAQ,KAAK,CAAC,eAAe,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;EAC/C,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAChC,KAAK;EACL,IAAI,gBAAgB,GAAG;EACvB,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;EACvC,YAAY,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAC;EACrG,SAAS;EACT,KAAK;EACL,IAAI,MAAM,CAAC,MAAM,EAAE;EACnB,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACvB,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;EACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;EAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACvC,KAAK;EACL,IAAI,KAAK,CAAC,MAAM,EAAE;EAClB,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,YAAY,EAAE,CAAC;EAC5B,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;EACzB,KAAK;EACL,IAAI,YAAY,GAAG;EACnB,QAAQ,OAAO,IAAI,EAAE;EACrB,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACvD,YAAY,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACpD,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE;EAClD,gBAAgB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAClD,gBAAgB,MAAM;EACtB,aAAa;EACb,iBAAiB;EACjB,gBAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtC,aAAa;EACb,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE;EAC/B,gBAAgB,IAAI,CAAC,aAAa,EAAE,CAAC;EACrC,gBAAgB,MAAM;EACtB,aAAa;EACb,SAAS;EACT,KAAK;EACL,IAAI,KAAK,GAAG;EACZ,QAAQ,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;EACrC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;EACvC;EACA,gBAAgB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE;EAC/D,oBAAoB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACvC,iBAAiB;EACjB,gBAAgB,IAAI,CAAC,KAAK,EAAE,CAAC;EAC7B,gBAAgB,OAAO,IAAI,CAAC;EAC5B,aAAa;EACb,iBAAiB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE;EAChE,gBAAgB,IAAI,CAAC,KAAK,EAAE,CAAC;EAC7B,gBAAgB,OAAO,IAAI,CAAC;EAC5B,aAAa;EACb,YAAY,IAAI,CAAC,gCAAgC,EAAE,CAAC;EACpD,YAAY,OAAO,KAAK,CAAC;EACzB,SAAS;EACT,aAAa;EACb,YAAY,OAAO,KAAK,CAAC;EACzB,SAAS;EACT,KAAK;EACL,IAAI,gBAAgB,GAAG;EACvB,QAAQ,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;EACtD,KAAK;EACL,IAAI,gCAAgC,GAAG;EACvC,QAAQ,MAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,KAAK,KAAK;EAC3E,YAAY,QAAQ,KAAK,IAAI,IAAI,CAAC,KAAK;EACvC,gBAAgB,OAAO,YAAY,aAAa;EAChD,gBAAgB,OAAO,YAAY,iBAAiB,EAAE;EACtD,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,kBAAkB,EAAE;EACjC,YAAY,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;EACvH,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;EAC/C,SAAS;EACT,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE;EAC/C,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC;EACnE,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC/D,YAAY,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;EACzC,YAAY,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;EAC/C,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,aAAa,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;EAC5F,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;EAC5C,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;EACnD,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;EAClD,SAAS;EACT,aAAa;EACb,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EAC7B,SAAS;EACT,KAAK;EACL,IAAI,KAAK,CAAC,IAAI,EAAE;EAChB,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;EACtC,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC7B,SAAS;EACT,QAAQ,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;EACtD,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,IAAI,MAAM,GAAG,EAAE,CAAC;EACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACxD,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5C,YAAY,IAAI,KAAK,YAAY,aAAa;EAC9C,gBAAgB,KAAK,YAAY,iBAAiB,EAAE;EACpD,gBAAgB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;EAC1D,aAAa;EACb,iBAAiB;EACjB,gBAAgB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;EAC1D,gBAAgB,MAAM;EACtB,aAAa;EACb,SAAS;EACT,QAAQ,OAAO,MAAM,CAAC;EACtB,KAAK;EACL,CAAC;AACD;EACA,MAAM,WAAW,SAAS,gBAAgB,CAAC;EAC3C,IAAI,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE;EAChC,QAAQ,KAAK,CAAC,cAAc,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;EAC9C,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAChC,KAAK;EACL,IAAI,gBAAgB,GAAG;EACvB,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;EACvC,YAAY,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;EACpG,SAAS;EACT,QAAQ,MAAM,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,YAAY,aAAa,IAAI,OAAO,YAAY,iBAAiB,CAAC,CAAC;EAC/I,QAAQ,IAAI,mBAAmB,EAAE;EACjC,YAAY,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;EACxE,SAAS;EACT,KAAK;EACL,IAAI,MAAM,CAAC,MAAM,EAAE;EACnB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;EAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACvB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;EAClC,KAAK;EACL,IAAI,KAAK,CAAC,MAAM,EAAE;EAClB,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;EAC3B,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;EAC/B,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;EAClD,SAAS;EACT,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;EACzB,KAAK;EACL,IAAI,WAAW,GAAG;EAClB,QAAQ,OAAO,IAAI,EAAE;EACrB,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACvD,YAAY,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACnD,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE;EAClD,gBAAgB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;EAC5D,oBAAoB,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;EAC/C,oBAAoB,IAAI,CAAC,KAAK,EAAE,CAAC;EACjC,oBAAoB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtD,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACrC,oBAAoB,MAAM;EAC1B,iBAAiB;EACjB,aAAa;EACb,iBAAiB;EACjB,gBAAgB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;EACvD,gBAAgB,MAAM;EACtB,aAAa;EACb,SAAS;EACT,KAAK;EACL,IAAI,KAAK,CAAC,IAAI,EAAE;EAChB,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;EACtC,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC7B,SAAS;EACT,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;EACrD,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;EAChE,QAAQ,MAAM,kBAAkB,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;EACtG,QAAQ,IAAI,kBAAkB,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;EACrD,YAAY,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EAChE,SAAS;EACT,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;EAC7C,KAAK;EACL,CAAC;AACD;EACA,MAAM,eAAe,SAAS,gBAAgB,CAAC;EAC/C,IAAI,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;EACxC,QAAQ,KAAK,CAAC,kBAAkB,EAAE,IAAI,EAAE,OAAO,IAAI,IAAI,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;EAC1F,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;EACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAChC,KAAK;EACL,IAAI,gBAAgB,GAAG;EACvB,QAAQ,IAAI,IAAI,CAAC,QAAQ,YAAY,iBAAiB,EAAE;EACxD,YAAY,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;EAC5F,SAAS;EACT,KAAK;EACL,IAAI,MAAM,CAAC,MAAM,EAAE;EACnB,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;EACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;EAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACvC,KAAK;EACL,IAAI,KAAK,CAAC,MAAM,EAAE;EAClB,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;EAC3B,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;EACzB,KAAK;EACL,IAAI,WAAW,GAAG;EAClB,QAAQ,OAAO,IAAI,EAAE;EACrB,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1D,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE;EAClE,gBAAgB,IAAI,CAAC,aAAa,EAAE,CAAC;EACrC,gBAAgB,MAAM;EACtB,aAAa;EACb,iBAAiB;EACjB,gBAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtC,gBAAgB,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE;EAC/D,oBAAoB,IAAI,CAAC,aAAa,EAAE,CAAC;EACzC,oBAAoB,MAAM;EAC1B,iBAAiB;EACjB,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACnC,gBAAgB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;EAC3C,oBAAoB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACpD,oBAAoB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAClE,oBAAoB,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE;EAC1E,wBAAwB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;EACrD,wBAAwB,IAAI,CAAC,aAAa,EAAE,CAAC;EAC7C,wBAAwB,MAAM;EAC9B,qBAAqB;EACrB,yBAAyB;EACzB,wBAAwB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC9C,wBAAwB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EAC3C,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;EACnC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;EACrC,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,CAAC,kCAAkC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;EACvH,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EAC7B,SAAS;EACT,aAAa;EACb,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,aAAa,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC/I,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;EAC5C,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;EACnD,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;EAClD,SAAS;EACT,KAAK;EACL,IAAI,KAAK,CAAC,IAAI,EAAE;EAChB,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;EACtC,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC7B,SAAS;EACT,QAAQ,OAAO,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;EACvE,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;EACzC,KAAK;EACL,CAAC;AACD;EACA,MAAM,gBAAgB,SAAS,OAAO,CAAC;EACvC,IAAI,WAAW,CAAC,IAAI,EAAE;EACtB,QAAQ,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;EACjC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;EAC5B,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;EACjC,KAAK;EACL,IAAI,UAAU,GAAG;EACjB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,KAAK;EACrD,YAAY,IAAI,OAAO,IAAI,IAAI,EAAE;EACjC,gBAAgB,OAAO,KAAK,CAAC;EAC7B,aAAa;EACb,YAAY,OAAO,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;EAC9C,SAAS,CAAC,CAAC;EACX,KAAK;EACL,IAAI,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE;EAC7B,QAAQ,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;EAC9B,YAAY,OAAO,OAAO,CAAC;EAC3B,SAAS;EACT,aAAa;EACb,YAAY,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,IAAI,EAAE;EACnD,gBAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;EAC5D,aAAa;EACb,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,KAAK;EACL,IAAI,KAAK,CAAC,MAAM,EAAE;EAClB,QAAQ,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;EAClC,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;EAC9C,YAAY,IAAI,OAAO,IAAI,IAAI,EAAE;EACjC,gBAAgB,MAAM,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,CAAC,iEAAiE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;EACxJ,gBAAgB,OAAO,IAAI,CAAC;EAC5B,aAAa;EACb,YAAY,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;EAC3C,YAAY,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;EACvC,SAAS;EACT,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;EAChD,QAAQ,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE;EAC1D,YAAY,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACxC,SAAS;EACT,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,KAAK,CAAC,IAAI,EAAE;EAChB,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;EACtC,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC7B,SAAS;EACT,QAAQ,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAK;EACL,IAAI,aAAa,GAAG;EACpB,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,OAAO,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,aAAa,EAAE,KAAK,IAAI,CAAC;EAC1G,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;EAC/B,YAAY,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;EACpC,YAAY,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC;EAChH,YAAY,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;EACrC,YAAY,OAAO,MAAM,CAAC;EAC1B,SAAS;EACT,QAAQ,OAAO,EAAE,CAAC;EAClB,KAAK;EACL,CAAC;AA+ND;EACA,MAAM,OAAO,CAAC;EACd,IAAI,WAAW,CAAC,IAAI,GAAG,IAAI,EAAE,aAAa,GAAG,EAAE,EAAE;EACjD,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;EAC3C,KAAK;EACL,IAAI,OAAO,GAAG;EACd,QAAQ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;EAC7C,YAAY,IAAI,IAAI,CAAC,WAAW,EAAE;EAClC,gBAAgB,MAAM,QAAQ,GAAG,EAAE,CAAC;EACpC,gBAAgB,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,KAAK;EACrD,oBAAoB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;EACjD,wBAAwB,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EAClD,qBAAqB;EACrB,iBAAiB,CAAC,CAAC;EACnB,gBAAgB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EACzC,aAAa;EACb,SAAS,CAAC,CAAC;EACX,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,MAAM,GAAG;EACb,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;EAC/B,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,QAAQ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACxC,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,eAAe,CAAC,IAAI,EAAE;EAC1B,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;EACjD,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;EAC9D,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC3D,gBAAgB,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;EAClE,oBAAoB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/C,oBAAoB,CAAC,EAAE,CAAC;EACxB,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,KAAK;EACL,IAAI,IAAI,CAAC,QAAQ,EAAE;EACnB,QAAQ,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/C,QAAQ,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK;EACjD,YAAY,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;EACnD,gBAAgB,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;EACtC,aAAa;EACb,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS,CAAC,CAAC;EACX,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,MAAM,GAAG;EACb,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;EAC/B,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,QAAQ,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,KAAK;EACrD,YAAY,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;EACnD,gBAAgB,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACvD,gBAAgB,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC5D,gBAAgB,IAAI,MAAM,IAAI,IAAI,IAAI,WAAW,IAAI,IAAI,EAAE;EAC3D,oBAAoB,MAAM,KAAK,GAAG,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;EACvE,oBAAoB,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;EACpC,wBAAwB,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;EAClF,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS,CAAC,CAAC;EACX,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,OAAO,CAAC,QAAQ,EAAE;EACtB,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;EAC/B,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,QAAQ,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,KAAK;EACnD,YAAY,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;EACnD,gBAAgB,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACvD,gBAAgB,IAAI,MAAM,IAAI,IAAI,EAAE;EACpC,oBAAoB,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;EAChE,oBAAoB,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;EACpC,wBAAwB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACzE,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS,CAAC,CAAC;EACX,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,MAAM,CAAC,QAAQ,EAAE;EACrB,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;EAC/B,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,QAAQ,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,KAAK;EACrD,YAAY,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;EACnD,gBAAgB,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACvD,gBAAgB,IAAI,MAAM,IAAI,IAAI,EAAE;EACpC,oBAAoB,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;EAChE,oBAAoB,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;EACpC,wBAAwB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7E,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS,CAAC,CAAC;EACX,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,SAAS,CAAC,QAAQ,EAAE;EACxB,QAAQ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;EAC7C,YAAY,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;EAC3D,SAAS,CAAC,CAAC;EACX,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,kBAAkB,CAAC,IAAI,EAAE,QAAQ,EAAE;EACvC,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;EAC9D,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;EAChD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;EAC7C,gBAAgB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;EACvF,aAAa;EACb,SAAS;EACT,QAAQ,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;EAC9B,KAAK;EACL,IAAI,SAAS,GAAG;EAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;EACxC,KAAK;EACL,IAAI,UAAU,CAAC,IAAI,EAAE;EACrB,QAAQ,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;EACrE,KAAK;EACL,IAAI,YAAY,CAAC,IAAI,EAAE;EACvB,QAAQ,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;EAC3E,QAAQ,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;EACjD,KAAK;EACL,IAAI,MAAM,CAAC,QAAQ,EAAE;EACrB,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;EAC/B,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC/B,QAAQ,MAAM,aAAa,GAAG,EAAE,CAAC;EACjC,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;EAC9B,YAAY,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,UAAU,KAAK;EACnD,gBAAgB,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;EAC1C,oBAAoB,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACnD,iBAAiB;EACjB,aAAa,CAAC,CAAC;EACf,SAAS;EACT,QAAQ,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;EACrD,KAAK;EACL,IAAI,OAAO,CAAC,QAAQ,EAAE;EACtB,QAAQ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;EAC7C,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,MAAM,CAAC,QAAQ,EAAE;EACrB,QAAQ,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC3E,KAAK;EACL,IAAI,GAAG,CAAC,QAAQ,EAAE;EAClB,QAAQ,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;EACxE,KAAK;EACL,IAAI,UAAU,GAAG;EACjB,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;EAC/B,YAAY,OAAO,IAAI,CAAC;EACxB,SAAS;EACT,QAAQ,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EACnD,KAAK;EACL,IAAI,KAAK,GAAG;EACZ,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC3B,KAAK;EACL,IAAI,IAAI,GAAG;EACX,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACvD,KAAK;EACL,IAAI,GAAG,CAAC,KAAK,EAAE;EACf,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;EAC/C,QAAQ,IAAI,IAAI,IAAI,IAAI,EAAE;EAC1B,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3G,SAAS;EACT,QAAQ,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;EACrC,KAAK;EACL,IAAI,KAAK,GAAG;EACZ,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;EAChC,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,OAAO,CAAC,IAAI,EAAE;EAClB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,OAAO,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE;EAClC,QAAQ,IAAI,QAAQ,IAAI,IAAI,EAAE;EAC9B,YAAY,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;EACtD,SAAS;EACT,aAAa;EACb,YAAY,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;EACrC,SAAS;EACT,KAAK;EACL,IAAI,OAAO,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,GAAG,EAAE,EAAE;EAClD,QAAQ,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC7B,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;EAC9D,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;EACnD,YAAY,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;EACzE,SAAS;EACT,QAAQ,SAAS,CAAC,GAAG,EAAE,CAAC;EACxB,QAAQ,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EAClC,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL,IAAI,OAAO,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,GAAG,EAAE,EAAE;EACpD,QAAQ,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EAClC,QAAQ,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC7B,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;EAC9D,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;EACnD,YAAY,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;EAC3E,SAAS;EACT,QAAQ,SAAS,CAAC,GAAG,EAAE,CAAC;EACxB,QAAQ,OAAO,IAAI,CAAC;EACpB,KAAK;EACL;;ECprDA,MAAM,OAAO,GAAG,IAAI,UAAU,CAAC,SAAS,EAAE,aAAa,CAAC;;ECAxD,MAAM,MAAM,GAAG,IAAI,UAAU,CAC3B,QAAQ,EACR,yCAAyC,CAC1C;;ECDD,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;EAC3D,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;ECHzD,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,KAAK,EAAE,iCAAiC,CAAC;;ECApE,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,MAAM,EAAE,yBAAyB,CAAC;;ECC9D,MAAMC,OAAK,GAAG,IAAI,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;EACjD,MAAMC,QAAM,GAAG,IAAI,WAAW,CAAC,iBAAiB,EAAED,OAAK,CAAC,CAAC;EACzD,MAAM,cAAc,GAAG,IAAI,aAAa,CAACC,QAAM,CAAC;;ECOhD,MAAM,SAAS,GAAG,IAAI,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;EACjD,MAAM,UAAU,GAAG,IAAI,OAAO,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;EACnD,MAAMC,QAAM,GAAG,IAAI,gBAAgB,CAAC,QAAQ,CAAC,CAAC;EAC9C,MAAM,IAAI,GAAG,IAAI,eAAe,CAAC,WAAW,EAAEA,QAAM,EAAE,OAAO,CAAC,CAAC;EAC/D,MAAM,YAAY,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;EAEjD,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,EAAE;MACxC,IAAI;MACJ,SAAS;MACT,cAAc;MACd,YAAY;MACZ,cAAc;MACd,UAAU;EACX,CAAA,CAAC;;ECfF,MAAM,WAAW,GAAG,IAAI,OAAO,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;EAC5D,MAAM,YAAY,GAAG,IAAI,OAAO,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;EAC9D,MAAM,KAAK,GAAG,IAAI,eAAe,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EAE5D,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC,OAAO,EAAE;MACtC,WAAW;MACX,cAAc;MACd,KAAK;MACL,cAAc;MACd,YAAY;EACb,CAAA,CAAC;;EClBF,MAAM,KAAK,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;EACxC,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC;;ECE/C,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;EAC9D,MAAMC,OAAK,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;EACvD,MAAM,UAAU,GAAG,IAAI,YAAY,CAAC,YAAY,EAAE;MAChDA,OAAK;MACL,MAAM;MACN,QAAQ;MACR,MAAM;MACNA,OAAK;EACN,CAAA,CAAC;;ECJF,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE;MACrC,KAAK;MACL,GAAG;MACH,UAAU;MACV,MAAM;MACN,IAAI;MACJ,MAAM;MACN,IAAI;EACL,CAAA,CAAC;;ECbF,MAAM,MAAM,GAAG,IAAI,eAAe,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC;;ECA3D,MAAM,QAAQ,GAAG,IAAI,eAAe,CAAC,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC;;ECClE,MAAMC,SAAO,GAAG,IAAI,OAAO,EAAE,CAAC;EAE9B,MAAM,YAAY,GAAG,CAAC,KAAa,KAAI;MACrC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;MAC1C,IAAI,IAAI,IAAI,IAAI,EAAE;EAChB,QAAA,OAAO,EAAE,CAAC;EACX,KAAA;MAEDA,SAAO;WACJ,OAAO,CAAC,IAAI,CAAC;EACb,SAAA,UAAU,EAAE;EACZ,SAAA,OAAO,EAAE;EACT,SAAA,KAAK,EAAE;WACP,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,iBAAiB,CAAC;EAC3C,SAAA,MAAM,EAAE;EACR,SAAA,KAAK,EAAE;WACP,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC;EAClC,SAAA,SAAS,CAAC,CAAC,CAAC,KAAI;EACf,QAAA,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC;EACd,QAAA,OAAO,CAAC,CAAC;EACX,KAAC,CAAC,CAAC;MAEL,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAI;EAC7B,QAAA,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;EACvB,YAAA,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC5B,SAAA;EAAM,aAAA;cACL,OAAO,CAAC,CAAC,KAAK,CAAC;EAChB,SAAA;EACH,KAAC,CAAC,CAAC;EACL,CAAC,CAAC;EAEmB,MAAA,WAAY,SAAQ,QAA6B,CAAA;EACpE,IAAA,WAAA,CAAY,EAMa,EAAA;EANb,QAAA,IAAA,EACV,IAAI,EACJ,EAAE,EACF,MAAM,GAAG,OAAO,CAAC,MAAM,EACvB,QAAQ,GAAG,EAAE,EAAA,GAAA,EAEU,EADpB,MAAM,GAAA,MAAA,CAAA,EAAA,EALC,oCAMX,CADU,CAAA;EAET,QAAA,MAAM,OAAO,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC;EACjC,QAAA,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;EACrC,QAAA,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;EAE5D,QAAA,KAAK,iCACA,MAAM,CAAA,EAAA,EACT,IAAI,EAAE,SAAS,EACf,EAAE,EAAE,OAAO,EACX,QAAQ,EAAE,cAAc,EACxB,MAAM,IACN,CAAC;OACJ;EAGF;;ACxDY,QAAA,YAAY,GAAG;MAC1B,MAAM,EAAE,CAAC,CAAC,CAAC;EACX,IAAA,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACZ,IAAA,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAChB,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,IAAA,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACf,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACtB,IAAA,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,IAAA,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC1C,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxD;AAEW,QAAA,WAAW,GAAG;MACzB,MAAM,EAAE,CAAC,CAAC,CAAC;EACX,IAAA,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACZ,IAAA,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAChB,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACnB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAChB,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACtB,IAAA,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,IAAA,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EAC1C,IAAA,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5D;EAIY,SAAU,mBAAmB,CACzC,QAA4B,EAC5B,SAA6B,EAAA;EAE7B,IAAA,MAAM,MAAM,GAAG,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;EACtE,IAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;MAE5C,OAAO,CAAC,UAAkB,KAAI;EAC5B,QAAA,OAAO,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;EACzC,KAAC,CAAC;EACJ;;ECjBc,MAAO,qBAAqB,CAAA;EAA1C,IAAA,WAAA,GAAA;EACU,QAAA,IAAA,CAAA,cAAc,GAAwB,CAAC,KAAK,KAAK,KAAK,CAAC;EAU/D,QAAA,IAAA,CAAA,eAAe,GAAG,CAAC,IAAY,EAAE,IAAY,KAAI;cAC/C,IAAI,IAAI,KAAK,MAAM,EAAE;kBACnB,OAAO,CAAC,CAAC,CAAC;EACX,aAAA;cAED,IAAI,IAAI,KAAK,MAAM,EAAE;EACnB,gBAAA,OAAO,CAAC,CAAC;EACV,aAAA;cAED,IAAI,IAAI,KAAK,IAAI,EAAE;EACjB,gBAAA,OAAO,CAAC,CAAC;EACV,aAAA;cAED,IAAI,IAAI,KAAK,IAAI,EAAE;kBACjB,OAAO,CAAC,CAAC,CAAC;EACX,aAAA;cAED,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;cAClC,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;cAClC,MAAM,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;cAC5C,MAAM,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;cAE5C,IAAI,UAAU,GAAG,UAAU,EAAE;kBAC3B,OAAO,CAAC,CAAC,CAAC;EACX,aAAA;mBAAM,IAAI,UAAU,GAAG,UAAU,EAAE;EAClC,gBAAA,OAAO,CAAC,CAAC;EACV,aAAA;EAED,YAAA,OAAO,CAAC,CAAC;EACX,SAAC,CAAC;OAsLH;EA3NC,IAAA,iBAAiB,CAAC,cAAmC,EAAA;EACnD,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;OACtC;EAED,IAAA,iBAAiB,CAAC,KAAU,EAAA;EAC1B,QAAA,OAAO,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;OACtC;EAiCD,IAAA,wBAAwB,CAAC,UAAkB,EAAA;UACzC,IAAI,UAAU,KAAK,IAAI,EAAE;EACvB,YAAA,OAAO,CAAC,CAAC;EACV,SAAA;UAED,IAAI,UAAU,KAAK,MAAM,EAAE;EACzB,YAAA,OAAO,CAAC,CAAC;EACV,SAAA;UAED,MAAM,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;UAC9C,IAAI,OAAO,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAEnD,QAAA,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE;EAClB,YAAA,MAAM,IAAI,KAAK,CACb,0BAA0B,OAAO,CAAA,mCAAA,CAAqC,CACvE,CAAC;EACH,SAAA;UAED,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;UAC/B,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;EAE/B,QAAA,OAAO,OAAO,CAAC;OAChB;EAED,IAAA,SAAS,CAAI,YAAqC,EAAA;EAChD,QAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,OAAO,IAAI,IAAI,EAAE;EACxE,YAAA,OAAO,YAAY,CAAC,OAAO,IAAI,QAAQ,CAAC;EACzC,SAAA;EAAM,aAAA;EACL,YAAA,OAAO,QAAQ,CAAC;EACjB,SAAA;OACF;EAED,IAAA,UAAU,CAAI,SAAkC,EAAA;EAC9C,QAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,IAAI,IAAI,EAAE;EACjE,YAAA,OAAO,SAAS,CAAC,MAAM,IAAI,QAAQ,CAAC;EACrC,SAAA;EAAM,aAAA;EACL,YAAA,OAAO,QAAQ,CAAC;EACjB,SAAA;OACF;EAED,IAAA,aAAa,CAAI,YAAqC,EAAA;EACpD,QAAA,IACE,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC;EACpC,YAAA,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,EACvC;EACA,YAAA,OAAO,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACpE,SAAA;EAAM,aAAA;EACL,YAAA,OAAO,EAAE,CAAC;EACX,SAAA;OACF;EAED,IAAA,cAAc,CAAI,SAAkC,EAAA;EAClD,QAAA,IACE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;EACjC,YAAA,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,EACnC;EACA,YAAA,OAAO,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EAChE,SAAA;EAAM,aAAA;EACL,YAAA,OAAO,EAAE,CAAC;EACX,SAAA;OACF;EAED,IAAA,OAAO,CAAI,YAAqC,EAAA;EAC9C,QAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,EAAE;cACxC,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;EAChD,SAAA;EAAM,aAAA,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;EAC3C,YAAA,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;EAC1C,SAAA;EAAM,aAAA;EACL,YAAA,IAAI,QAAO,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,KAAK,CAAA,KAAK,QAAQ,EAAE;EAC3C,gBAAA,MAAM,IAAI,KAAK,CACb,2EAA2E,CAC5E,CAAC;EACH,aAAA;EACD,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,oBAAA,EAAuB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAE,CAAA,CAAC,CAAC;EACxE,SAAA;OACF;EAED,IAAA,KAAK,CAAI,SAAkC,EAAA;EACzC,QAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAE;cACrC,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;EAC7C,SAAA;EAAM,aAAA,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;EACxC,YAAA,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;EACvC,SAAA;EAAM,aAAA;EACL,YAAA,IAAI,QAAO,SAAS,KAAA,IAAA,IAAT,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,SAAS,CAAE,KAAK,CAAA,KAAK,QAAQ,EAAE;EACxC,gBAAA,MAAM,IAAI,KAAK,CACb,2EAA2E,CAC5E,CAAC;EACH,aAAA;EACD,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAE,CAAA,CAAC,CAAC;EACnE,SAAA;OACF;EAED,IAAA,uBAAuB,CAAI,KAAQ,EAAA;UACjC,OAAO;cACL,KAAK;WACN,CAAC;OACH;EAED,IAAA,cAAc,CACZ,KAAkC,EAAA;UAElC,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;EAC1D,YAAA,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;EAC5C,SAAA;EAAM,aAAA;EACL,YAAA,OAAO,KAAgC,CAAC;EACzC,SAAA;OACF;EAED,IAAA,sBAAsB,CACpB,KAA+D,EAAA;UAE/D,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;cAC1D,OAAO;EACL,gBAAA,IAAI,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;EACzC,gBAAA,EAAE,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;eACxC,CAAC;EACH,SAAA;eAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI,IAAI,EAAE;cACrD,MAAM,SAAS,GAAQ,KAAK,CAAC;cAC7B,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACpC,YAAA,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;kBACG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;EAE5D,aAAC,CAAC,CAAC;EAEH,YAAA,OAAO,KAAmC,CAAC;EAC5C,SAAA;EAAM,aAAA;EACL,YAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;EACxC,SAAA;OACF;EAED,IAAA,QAAQ,CAAI,kBAA6C,EAAA;UACvD,MAAM,qBAAqB,GAAG,MAAM,CAAC,IAAI,CACvC,kBAAkB,CACJ,CAAC;UACjB,MAAM,SAAS,GAAkB,EAAE,CAAC;EAEpC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACrD,YAAA,MAAM,QAAQ,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC;cAC1C,IAAI,sBAAsB,GAAG,CAAC,CAAC;cAC/B,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAC/C,kBAAkB,CAAC,QAAQ,CAAC,CAC7B,CAAC;cACF,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EAC5C,YAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;EAEpC,YAAA,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE;EACxD,gBAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;kBAC5B,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;kBAEpC,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;kBAC7D,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;kBAC9D,MAAM,OAAO,GAAG,sBAAsB,CAAC;EACvC,gBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;kBAEjE,sBAAsB,GAAG,KAAK,CAAC;kBAE/B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;kBAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;kBAC7C,MAAM,MAAM,GAAG,mBAAmB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;kBACxD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;kBACpD,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;kBACnD,MAAM,QAAQ,GAAG,CAAC,GAAG,UAAU,EAAE,GAAG,WAAW,CAAC,CAAC;kBACjD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;kBACxC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;EAEjC,gBAAA,MAAM,QAAQ,GAAG,IAAI,WAAW,CAAC;EAC/B,oBAAA,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE;sBAC7B,IAAI;sBACJ,EAAE;sBACF,QAAQ;sBACR,MAAM;sBACN,OAAO;sBACP,KAAK;EACN,iBAAA,CAAC,CAAC;EAEH,gBAAA,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC1B,aAAA;EACF,SAAA;EACD,QAAA,OAAO,SAAS,CAAC;OAClB;EACF;;EC7OD,MAAM,iBAAiB,GAAG,IAAI,SAAS,CAAC,MAAM,EAAE;EAC9C,IAAA,IAAI,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;EACnD,CAAA,CAAC,CAAC;EAEH,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;EAE5C,MAAM,OAAO,GAAG,CAAC,CAAC;EAEJ,MAAO,qBAAqB,CAAA;EAA1C,IAAA,WAAA,GAAA;UACU,IAAS,CAAA,SAAA,GAAG,CAAC,CAAC;UACd,IAAW,CAAA,WAAA,GAAG,CAAC,CAAC;UAChB,IAAQ,CAAA,QAAA,GAAG,CAAC,CAAC;UACb,IAAM,CAAA,MAAA,GAAG,CAAC,CAAC;UACZ,IAAK,CAAA,KAAA,GAAG,IAAI,CAAC;UACZ,IAAS,CAAA,SAAA,GAAoB,iBAAiB,CAAC;OAuJxD;EA9IS,IAAA,WAAW,CAAC,MAAW,EAAA;EAC7B,QAAA,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC;OAC1B;MAED,KAAK,CACH,SAAwB,EACxB,QAAgB,EAChB,MAAc,EACd,gBAAwB,EACxB,SAAS,GAAG,CAAC,EAAA;EAEb,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAC3B,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;EAC/C,QAAA,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC;EACpC,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;UAG3B,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;EAChC,YAAA,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC;EAC3B,SAAA;UAED,IAAI,CAAC,SAAS,EAAE,CAAC;UACjB,IAAI,CAAC,mBAAmB,EAAE,CAAC;UAE3B,OAAO,IAAI,CAAC,cAA+B,CAAC;OAC7C;EAEO,IAAA,eAAe,CAAC,KAAa,EAAA;EACnC,QAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;cAC7B,KAAK,GAAG,CAAC,CAAC;EACX,SAAA;;UAGD,IAAI,KAAK,IAAI,CAAC,EAAE;cACd,KAAK,GAAG,OAAO,CAAC;EACjB,SAAA;EACD,QAAA,OAAO,KAAK,CAAC;OACd;MAEO,WAAW,GAAA;UACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;UACxD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;UACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;UAEtD,IAAI,CAAC,oBAAoB,EAAE,CAAC;UAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;OACzB;MAEO,oBAAoB,GAAA;EAC1B,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;EACrD,YAAA,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;EACpE,SAAC,CAAC,CAAC;OACJ;MAEO,gBAAgB,GAAA;UACtB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;EAE/C,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;EACjD,YAAA,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;EAC3D,SAAC,CAAC,CAAC;OACJ;MAEO,sBAAsB,GAAA;EAC5B,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;EAChD,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;OACnE;MAEO,sBAAsB,GAAA;UAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACnC,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;OACnE;MAEO,SAAS,GAAA;UACf,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACnC,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;UAChE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EAEjD,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,OAAO,EAAE;cAC9B,IAAI,CAAC,sBAAsB,EAAE,CAAC;EAC/B,SAAA;EAAM,aAAA;cACL,IAAI,CAAC,sBAAsB,EAAE,CAAC;EAC/B,SAAA;EAED,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;cAC/C,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;cAEvC,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI,IAAI,EAAE;kBAC9C,IAAI,CAAC,WAAW,EAAE,CAAC;EACnB,gBAAA,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;EAChC,aAAA;EAAM,iBAAA;EACL,gBAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;EACnC,aAAA;EACH,SAAC,CAAC,CAAC;OACJ;EAEO,IAAA,kBAAkB,CAAC,QAAgB,EAAA;UACzC,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;UACrC,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UAEzC,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;EAC/C,QAAA,MAAM,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC;EACzB,QAAA,MAAM,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;EACrC,QAAA,MAAM,MAAM,GAAG,UAAU,GAAG,KAAK,CAAC;EAClC,QAAA,MAAM,EAAE,GAAG,GAAG,GAAG,MAAM,CAAC;EAExB,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;OAC9B;EAEO,IAAA,eAAe,CAAC,QAAgB,EAAA;UACtC,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;UACrC,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UACzC,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;UACjD,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UACzC,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;UAClD,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;UAEnC,cAAc,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;UAClD,cAAc,CAAC,MAAM,CAAC,YAAY,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;UAC7D,cAAc,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;UAC3D,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC;EAE1C,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;OAC9B;MAEO,mBAAmB,GAAA;UACzB,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;EAC1C,aAAA,GAAG,CAAC,CAAC,QAAQ,KAAI;cAChB,OAAO,IAAI,QAAQ,CAAC;kBAClB,QAAQ;EACR,gBAAA,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;EAC9B,gBAAA,QAAQ,EAAE,EAAE;EACZ,gBAAA,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;EAC3B,gBAAA,OAAO,EAAE,CAAC;EACV,gBAAA,KAAK,EAAE,CAAC;kBACR,MAAM,EAAE,OAAO,CAAC,MAAM;EACvB,aAAA,CAAC,CAAC;EACL,SAAC,CAAC;EACD,aAAA,IAAI,EAAE,CAAC;UAEV,IAAI,CAAC,cAAc,GAAG,IAAI,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;OACzD;EACF;;ECxKD,MAAM,qBAAqB,GAAG,IAAI,qBAAqB,EAAE,CAAC;EAE5C,MAAO,iBAAiB,CAAA;MAWpC,WACE,CAAA,SAAwB,EACxB,QAAgB,EAChB,MAAc,EACd,gBAAgB,GAAG,CAAC,EAAA;UANf,IAAI,CAAA,IAAA,GAAW,CAAC,CAAC;UAQtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;EAC/C,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;EACrB,QAAA,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;EAEzC,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;UAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;UAClD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;EAEhC,QAAA,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,KAAK,CAC/C,IAAI,CAAC,SAAS,EACd,QAAQ,EACR,CAAC,EACD,gBAAgB,EAChB,CAAC,CACF,CAAC;OACH;EAEO,IAAA,eAAe,CAAC,KAAa,EAAA;EACnC,QAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;cAC7B,KAAK,GAAG,CAAC,CAAC;EACX,SAAA;;UAGD,IAAI,KAAK,IAAI,CAAC,EAAE;cACd,KAAK,GAAG,OAAO,CAAC;EACjB,SAAA;EACD,QAAA,OAAO,KAAK,CAAC;OACd;EAED,IAAA,MAAM,CAAC,IAAY,EAAA;EACjB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACjB,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;EAEtC,QAAA,IAAI,UAAU,GAAG,qBAAqB,CAAC,KAAK,GAAG,CAAC,EAAE;EAChD,YAAA,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;EAC/B,gBAAA,OAAO,IAAI,CAAC;EACb,aAAA;cAED,MAAM,YAAY,GAAG,UAAU,GAAG,qBAAqB,CAAC,KAAK,GAAG,CAAC,CAAC;EAClE,YAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;cACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;EACxD,SAAA;EAAM,aAAA;EACL,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;EAC1B,gBAAA,OAAO,IAAI,CAAC;EACb,aAAA;EAED,YAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;cAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;EACnD,SAAA;EAED,QAAA,OAAO,IAAI,CAAC;OACb;MAED,KAAK,GAAA;UACH,OAAO,IAAI,iBAAiB,CAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EACtB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,gBAAgB,CACtB,CAAC;OACH;EACF;;EC/EoB,MAAA,gBAAoB,SAAQ,SAAY,CAAA;EAM3D,IAAA,WAAA,CACE,aAA4B,EAC5B,WAA0B,EAC1B,MAAyB,GAAA,OAAO,CAAC,WAAW,EAAA;EAE5C,QAAA,MAAM,UAAU,GAAG,aAAa,CAAC,aAAa,CAAC;EAC/C,QAAA,MAAM,QAAQ,GAAG,WAAW,CAAC,aAAa,CAAC;UAC3C,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,UAAiB,CAAC,CAAC;UAElD,MAAM,SAAS,GAAG,UAAU;EACzB,aAAA,GAAG,CAAC,CAAC,IAAI,KAAI;EACZ,YAAA,MAAM,IAAI,GAAI,UAAkB,CAAC,IAAI,CAAC,CAAC;EACvC,YAAA,MAAM,EAAE,GAAI,QAAgB,CAAC,IAAI,CAAC,CAAC;cAEnC,IAAI,EAAE,IAAI,IAAI,EAAE;EACd,gBAAA,MAAM,IAAI,KAAK,CACb,CAAA,iFAAA,EAAoF,IAAI,CAAC,SAAS,CAChG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAClB,CAAA,gBAAA,EAAmB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA,CAAE,CACtD,CAAC;EACH,aAAA;cAED,OAAO,IAAI,QAAQ,CAAC;EAClB,gBAAA,QAAQ,EAAE,IAAI;EACd,gBAAA,OAAO,EAAE,CAAC;EACV,gBAAA,KAAK,EAAE,CAAC;kBACR,IAAI;kBACJ,EAAE;EACF,gBAAA,QAAQ,EAAE,EAAE;EACZ,gBAAA,MAAM,EAAE,MAAM,IAAI,OAAO,CAAC,MAAM;EACjC,aAAA,CAAC,CAAC;EACL,SAAC,CAAC;EACD,aAAA,IAAI,EAAE,CAAC;EAEV,QAAA,KAAK,CAAC,CAAA,EAAG,aAAa,CAAC,IAAI,CAAA,CAAA,EAAI,WAAW,CAAC,IAAI,CAAA,QAAA,CAAU,EAAE,SAAS,CAAC,CAAC;EAEtE,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;EACrB,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;EAC7B,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;EACnC,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;OAChC;MAED,eAAe,GAAA;EACb,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;UAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;cAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EACnC,YAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC;EAC5C,YAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;cAEnC,QAAQ,CAAC,EAAE,GAAI,IAAI,CAAC,WAAW,CAAC,aAAqB,CAAC,QAAQ,CAAC,CAAC;cAChE,QAAQ,CAAC,IAAI,GAAI,IAAI,CAAC,aAAa,CAAC,aAAqB,CAAC,QAAQ,CAAC,CAAC;EACrE,SAAA;OACF;EAED,IAAA,MAAM,CAAC,IAAY,EAAA;EACjB,QAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;EAChC,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;UAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;EAEvB,QAAA,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;EACnB,QAAA,OAAO,IAAI,CAAC;OACb;MAED,KAAK,GAAA;UACH,OAAO,IAAI,gBAAgB,CACzB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,EAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EACxB,IAAI,CAAC,MAAM,CACZ,CAAC;OACH;EACF;;EC5Da,MAAO,kBAAkB,CAAA;EAAvC,IAAA,WAAA,GAAA;EACU,QAAA,IAAA,CAAA,cAAc,GAAwB,CAAC,KAAK,KAAK,KAAK,CAAC;EAkB/D,QAAA,IAAA,CAAA,eAAe,GAAG,CAAC,IAAY,EAAE,IAAY,KAAI;cAC/C,IAAI,IAAI,KAAK,MAAM,EAAE;kBACnB,OAAO,CAAC,CAAC,CAAC;EACX,aAAA;cAED,IAAI,IAAI,KAAK,MAAM,EAAE;EACnB,gBAAA,OAAO,CAAC,CAAC;EACV,aAAA;cAED,IAAI,IAAI,KAAK,IAAI,EAAE;EACjB,gBAAA,OAAO,CAAC,CAAC;EACV,aAAA;cAED,IAAI,IAAI,KAAK,IAAI,EAAE;kBACjB,OAAO,CAAC,CAAC,CAAC;EACX,aAAA;cAED,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;cAClC,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;cAClC,MAAM,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;cAC5C,MAAM,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;cAE5C,IAAI,UAAU,GAAG,UAAU,EAAE;kBAC3B,OAAO,CAAC,CAAC,CAAC;EACX,aAAA;mBAAM,IAAI,UAAU,GAAG,UAAU,EAAE;EAClC,gBAAA,OAAO,CAAC,CAAC;EACV,aAAA;EAED,YAAA,OAAO,CAAC,CAAC;EACX,SAAC,CAAC;OA+LH;EA5OC,IAAA,iBAAiB,CAAC,cAAmC,EAAA;EACnD,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;OACtC;EAED,IAAA,iBAAiB,CAAC,KAAU,EAAA;EAC1B,QAAA,OAAO,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;OACtC;EAED,IAAA,oBAAoB,CAAC,KAAU,EAAA;EAC7B,QAAA,OAAO,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;OACnE;EAED,IAAA,QAAQ,CAAC,KAAU,EAAA;UACjB,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC;OACnD;EAiCD,IAAA,wBAAwB,CAAC,UAAkB,EAAA;UACzC,IAAI,UAAU,KAAK,IAAI,EAAE;EACvB,YAAA,OAAO,CAAC,CAAC;EACV,SAAA;UAED,IAAI,UAAU,KAAK,MAAM,EAAE;EACzB,YAAA,OAAO,CAAC,CAAC;EACV,SAAA;UAED,MAAM,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;UAC9C,IAAI,OAAO,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAEnD,QAAA,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE;EAClB,YAAA,MAAM,IAAI,KAAK,CACb,0BAA0B,OAAO,CAAA,mCAAA,CAAqC,CACvE,CAAC;EACH,SAAA;UAED,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;UAC/B,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;EAE/B,QAAA,OAAO,OAAO,CAAC;OAChB;EAED,IAAA,SAAS,CAAI,YAAkC,EAAA;EAC7C,QAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,OAAO,IAAI,IAAI,EAAE;EACxE,YAAA,OAAO,YAAY,CAAC,OAAO,IAAI,QAAQ,CAAC;EACzC,SAAA;EAAM,aAAA;EACL,YAAA,OAAO,QAAQ,CAAC;EACjB,SAAA;OACF;EAED,IAAA,UAAU,CAAI,SAA+B,EAAA;EAC3C,QAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,IAAI,IAAI,EAAE;EACjE,YAAA,OAAO,SAAS,CAAC,MAAM,IAAI,QAAQ,CAAC;EACrC,SAAA;EAAM,aAAA;EACL,YAAA,OAAO,QAAQ,CAAC;EACjB,SAAA;OACF;EAED,IAAA,aAAa,CAAI,YAAkC,EAAA;EACjD,QAAA,IACE,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC;EACpC,YAAA,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,EACvC;EACA,YAAA,OAAO,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACpE,SAAA;EAAM,aAAA;EACL,YAAA,OAAO,EAAE,CAAC;EACX,SAAA;OACF;EAED,IAAA,cAAc,CAAI,SAA+B,EAAA;EAC/C,QAAA,IACE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;EACjC,YAAA,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,EACnC;EACA,YAAA,OAAO,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EAChE,SAAA;EAAM,aAAA;EACL,YAAA,OAAO,EAAE,CAAC;EACX,SAAA;OACF;EAED,IAAA,OAAO,CAAI,YAAkC,EAAA;EAC3C,QAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,EAAE;cACxC,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;EAChD,SAAA;EAAM,aAAA,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;EAC3C,YAAA,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;EAC1C,SAAA;EAAM,aAAA;EACL,YAAA,IAAI,QAAO,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,KAAK,CAAA,KAAK,QAAQ,EAAE;EAC3C,gBAAA,MAAM,IAAI,KAAK,CACb,2EAA2E,CAC5E,CAAC;EACH,aAAA;EACD,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,sBAAA,EAAyB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAE,CAAA,CAAC,CAAC;EAC1E,SAAA;OACF;EAED,IAAA,KAAK,CAAI,SAA+B,EAAA;UACtC,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;EAE5D,QAAA,IAAI,iBAAiB,EAAE;cACrB,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;EAC7C,SAAA;eAAM,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;EACzD,YAAA,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;EACvC,SAAA;EAAM,aAAA,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;EACxC,YAAA,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;EACvC,SAAA;EAAM,aAAA;EACL,YAAA,IAAI,QAAO,SAAS,KAAA,IAAA,IAAT,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,SAAS,CAAE,KAAK,CAAA,KAAK,QAAQ,EAAE;EACxC,gBAAA,MAAM,IAAI,KAAK,CACb,2EAA2E,CAC5E,CAAC;EACH,aAAA;EACD,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,oBAAA,EAAuB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAE,CAAA,CAAC,CAAC;EACrE,SAAA;OACF;EAED,IAAA,SAAS,CAAI,KAAQ,EAAA;UACnB,OAAO;cACL,KAAK;WACN,CAAC;OACH;EAED,IAAA,cAAc,CAAI,KAA+B,EAAA;UAC/C,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;EAC1D,YAAA,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;EAC9B,SAAA;EAAM,aAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;EACjE,YAAA,OAAO,IAAI,CAAC,SAAS,CAAC,KAAU,CAAC,CAAC;EACnC,SAAA;EAAM,aAAA;EACL,YAAA,OAAO,KAA6B,CAAC;EACtC,SAAA;OACF;EAED,IAAA,sBAAsB,CACpB,KAAyD,EAAA;UAEzD,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;cAC1D,OAAO;EACL,gBAAA,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;EAC3B,gBAAA,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;eAC1B,CAAC;EACH,SAAA;EAAM,aAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE;cACnE,MAAM,SAAS,GAAQ,KAAK,CAAC;cAC7B,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACpC,YAAA,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;kBACG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;EAE5D,aAAC,CAAC,CAAC;EAEH,YAAA,OAAO,KAAgC,CAAC;EACzC,SAAA;EAAM,aAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;cAC/B,OAAO;EACL,gBAAA,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAU,CAAC;EAChC,gBAAA,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,KAAU,CAAC;eAC/B,CAAC;EACH,SAAA;EAAM,aAAA;EACL,YAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;EACxC,SAAA;OACF;EAED,IAAA,QAAQ,CAAI,kBAA0C,EAAA;UACpD,MAAM,qBAAqB,GAAG,MAAM,CAAC,IAAI,CACvC,kBAAkB,CACJ,CAAC;UACjB,MAAM,SAAS,GAAkB,EAAE,CAAC;EAEpC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACrD,YAAA,MAAM,QAAQ,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC;cAC1C,IAAI,sBAAsB,GAAG,CAAC,CAAC;cAC/B,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAC/C,kBAAkB,CAAC,QAAQ,CAAC,CAC7B,CAAC;cACF,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EAC5C,YAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;EAEpC,YAAA,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE;EACxD,gBAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;kBAC5B,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;kBAEpC,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;kBAC7D,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;kBAC9D,MAAM,OAAO,GAAG,sBAAsB,CAAC;EACvC,gBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;kBAEjE,sBAAsB,GAAG,KAAK,CAAC;kBAE/B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;kBAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;kBAC7C,MAAM,MAAM,GAAG,mBAAmB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;kBACxD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;kBACpD,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;kBACnD,MAAM,QAAQ,GAAG,CAAC,GAAG,UAAU,EAAE,GAAG,WAAW,CAAC,CAAC;kBACjD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;kBACxC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;EAEjC,gBAAA,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC;EAC5B,oBAAA,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE;sBAC7B,IAAI;sBACJ,EAAE;sBACF,QAAQ;sBACR,MAAM;sBACN,OAAO;sBACP,KAAK;EACN,iBAAA,CAAC,CAAC;EAEH,gBAAA,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC1B,aAAA;EACF,SAAA;EACD,QAAA,OAAO,SAAS,CAAC;OAClB;EACF;;EC5PD,SAAS,iBAAiB,MAAK;EAEjB,MAAO,MAAM,CAAA;EASzB,IAAA,WAAA,CACE,MAA0C,EAC1C,UAAU,GAAG,KAAK,EAClB,MAAe,EAAA;UAVP,IAAe,CAAA,eAAA,GAAG,CAAC,CAAC;EACpB,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAIC,kBAAiB,EAAE,CAAC;UAC5C,IAAQ,CAAA,QAAA,GAA6B,IAAI,CAAC;UAGpD,IAAS,CAAA,SAAA,GAAyB,IAAI,CAAC;UAOrC,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,MAAM,EAAE,CAAC;UACrC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAY,KAAI;EACpC,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;EAC1B,gBAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;EAC5B,gBAAA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACxB,aAAA;EACH,SAAC,CAAC;EACF,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;OAC9B;EAED,IAAA,MAAM,CAAC,SAAwB,EAAA;EAC7B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAE3B,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC;EAC9B,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;EACzB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EAEnB,QAAA,OAAO,IAAI,CAAC;OACb;MAED,OAAO,CACL,SAAwB,EACxB,QAAmB,GAAA,CAAC,EACpB,MAAuB,EACvB,UAAU,GAAG,iBAAiB,EAAA;;EAE9B,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;EAC7C,QAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC;EACxC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;UAErC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;EACvD,QAAA,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;EAC3B,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;UAEvB,IAAI,QAAQ,KAAK,CAAC,EAAE;EAClB,YAAA,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EACpB,YAAA,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,CAAC;cACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;EAC1D,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC;EACzB,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;EACrB,YAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EACtB,YAAA,UAAU,EAAE,CAAC;cACb,OAAO;EACR,SAAA;UAED,IAAI,gBAAgB,IAAI,IAAI,EAAE;cAC5B,IAAI,IAAI,CAAC,UAAU,EAAE;EACnB,gBAAA,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EACpB,gBAAA,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,CAAC;kBACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;EAC1D,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC;EACzB,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;EACrB,gBAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EACtB,gBAAA,UAAU,EAAE,CAAC;kBACb,OAAO;EACR,aAAA;EAAM,iBAAA;EACL,gBAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAC5B,aAAA;EACF,SAAA;EAAM,aAAA;EACL,YAAA,MAAM,gBAAgB,GAAG,QAAQ,GAAG,eAAe,GAAG,WAAW,CAAC;EAElE,YAAA,IAAI,aAA4B,CAAC;cAEjC,IAAI,gBAAgB,GAAG,CAAC,EAAE;EACxB,gBAAA,aAAa,GAAG,IAAI,iBAAiB,CACnC,gBAAgB,EAChB,eAAe,EACf,WAAW,EACX,gBAAgB,CACjB,CAAC;EACH,aAAA;EAAM,iBAAA;EACL,gBAAA,MAAM,MAAM,GAAG,gBAAgB,CAAC,aAAa,CAAC;kBAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;kBAC3D,aAAa,GAAG,SAAS,CAAC;EAC3B,aAAA;cAED,MAAM,YAAY,GAAG,IAAI,gBAAgB,CACvC,aAAa,EACb,SAAS,EACT,MAAM,CACP,CAAC;EAEF,YAAA,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;EAE9B,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,EAAE,CAAC;EACzB,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,MAAK;EAClD,gBAAA,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EACvB,gBAAA,MAAM,MAAM,GAAG,YAAY,CAAC,aAAa,CAAC;kBAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;kBAC1D,UAAU,IAAI,UAAU,EAAE,CAAC;EAC7B,aAAC,CAAC,CAAC;EACJ,SAAA;EAED,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;EACrB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;OACpB;EAED,IAAA,WAAW,CAAC,SAAwB,EAAE,QAAQ,GAAG,CAAC,EAAE,MAAuB,EAAA;;EACzE,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;EAC7C,QAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC;EACxC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;UAErC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;EACvD,QAAA,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;EAC3B,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;EAEvB,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;UAC9B,IAAI,CAAC,MAAM,CAAC,eAAe,GAAGP,uBAAe,CAAC,OAAO,CAAC;UAEtD,IAAI,gBAAgB,IAAI,IAAI,EAAE;EAC5B,YAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAC5B,SAAA;EAAM,aAAA;EACL,YAAA,MAAM,gBAAgB,GAAG,QAAQ,GAAG,eAAe,GAAG,WAAW,CAAC;EAElE,YAAA,IAAI,aAA4B,CAAC;cAEjC,IAAI,gBAAgB,GAAG,CAAC,EAAE;EACxB,gBAAA,aAAa,GAAG,IAAI,iBAAiB,CACnC,gBAAgB,EAChB,eAAe,EACf,WAAW,EACX,gBAAgB,CACjB,CAAC;EACH,aAAA;EAAM,iBAAA;kBACL,aAAa,GAAG,gBAAgB,CAAC;EAClC,aAAA;EAED,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,gBAAgB,CACnC,aAAa,EACb,SAAS,EACT,MAAM,CACP,CAAC;EAEF,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,EAAE,CAAC;EACzB,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,MAAK;EAClD,gBAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAC7B,aAAC,CAAC,CAAC;EACJ,SAAA;EACD,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;EACrB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;OACpB;MAED,IAAI,GAAA;EACF,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACnB,QAAA,OAAO,IAAI,CAAC;OACb;MAED,IAAI,GAAA;EACF,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACnB,QAAA,OAAO,IAAI,CAAC;OACb;EAES,IAAA,2BAA2B,CAAC,MAAW,EAAA;EAC/C,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAI;cACxD,GAAG,CAAC,GAAG,CAAC,GAAG;EACT,gBAAA,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;EAC7C,gBAAA,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;eAC5C,CAAC;EACF,YAAA,OAAO,GAAG,CAAC;WACZ,EAAE,EAAS,CAAC,CAAC;EAEd,QAAA,OAAO,IAAI,SAAS,CAClB,gBAAgB,EAChB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAC3C,CAAC;OACH;EACF;;ECnLD,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAChC,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAChC,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAChC,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAChC,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAChC,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAChC,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAEhC,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EAC5B,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EAE5B,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;EAC9B,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;EAEvB,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,EAAE;MAC/C,CAAC;MACD,cAAc;MACd,CAAC;MACD,MAAM;MACN,CAAC;EACF,CAAA,CAAC,CAAC;EAEI,MAAM,oBAAoB,GAAG,IAAI,YAAY,CAAC,sBAAsB,EAAE;MAC3E,CAAC;MACD,cAAc;MACd,CAAC;EACF,CAAA,CAAC,CAAC;EAEI,MAAM,oBAAoB,GAAG,IAAI,YAAY,CAAC,sBAAsB,EAAE;MAC3E,CAAC;MACD,cAAc;MACd,EAAE;EACH,CAAA,CAAC,CAAC;EAEI,MAAM,sBAAsB,GAAG,IAAI,YAAY,CACpD,wBAAwB,EACxB,CAAC,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC,CACvB,CAAC;EAEK,MAAM,sBAAsB,GAAG,IAAI,YAAY,CACpD,wBAAwB,EACxB,CAAC,CAAC,EAAE,cAAc,EAAE,EAAE,CAAC,CACxB,CAAC;EAEK,MAAM,kBAAkB,GAAG,IAAI,YAAY,CAAC,oBAAoB,EAAE;MACvE,CAAC;MACD,cAAc;MACd,CAAC;MACD,MAAM;MACN,CAAC;MACD,OAAO;MACP,CAAC;MACD,MAAM;MACN,CAAC;MACD,OAAO;MACP,CAAC;MACD,MAAM;MACN,CAAC;EACF,CAAA,CAAC,CAAC;EAEI,MAAM,kBAAkB,GAAG,IAAI,YAAY,CAAC,oBAAoB,EAAE;MACvE,CAAC;MACD,cAAc;MACd,EAAE;MACF,MAAM;MACN,EAAE;MACF,OAAO;MACP,EAAE;MACF,MAAM;MACN,EAAE;MACF,OAAO;MACP,EAAE;MACF,MAAM;MACN,EAAE;EACH,CAAA,CAAC,CAAC;EAEI,MAAM,YAAY,GAAG,IAAI,WAAW,CAAC,cAAc,EAAE;MAC1D,MAAM;MACN,oBAAoB;MACpB,oBAAoB;MACpB,sBAAsB;MACtB,sBAAsB;MACtB,kBAAkB;MAClB,kBAAkB;EACnB,CAAA,CAAC,CAAC;EAEI,MAAM,IAAI,GAAG,IAAI,eAAe,CAAC,MAAM,EAAE,YAAY,EAAE,MAAM,CAAC;;EC1FrE,MAAMM,SAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAEjB,aAAa,CAAA;EA8BxB,IAAA,WAAA,CAAY,UAAkB,EAAE,MAAyB,GAAA,OAAO,CAAC,MAAM,EAAA;UA5B7D,IAAQ,CAAA,QAAA,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EAE1B,QAAA,IAAA,CAAA,cAAc,GAAG;EACzB,YAAA,CAAC,EAAE,CAAC;EACJ,YAAA,CAAC,EAAE,CAAC;WACL,CAAC;EACQ,QAAA,IAAA,CAAA,YAAY,GAAG;EACvB,YAAA,CAAC,EAAE,CAAC;EACJ,YAAA,CAAC,EAAE,CAAC;WACL,CAAC;UAEO,IAAa,CAAA,aAAA,GAAkB,EAAE,CAAC;UAClC,IAAa,CAAA,aAAA,GAAkB,EAAE,CAAC;UAE3C,IAAI,CAAA,IAAA,GAAW,EAAE,CAAC;EAehB,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;EAChD,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;UAE7BA,SAAO;eACJ,OAAO,CAAC,IAAI,CAAC;EACb,aAAA,UAAU,EAAE;EACZ,aAAA,KAAK,EAAE;eACP,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,iBAAiB,CAAC;EAC3C,aAAA,MAAM,EAAE;EACR,aAAA,KAAK,EAAE;eACP,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC;EAClC,aAAA,MAAM,EAAE;EACR,aAAA,KAAK,EAAE;eACP,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC;EACnC,aAAA,MAAM,EAAE,CAAC;UAEZ,IAAI,IAAI,IAAI,IAAI,EAAE;EAChB,YAAA,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;EAClC,SAAA;EAED,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UAErB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,KAAI;cAChC,IAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3B,SAAC,CAAC,CAAC;OACJ;EAtCD,IAAA,IAAI,UAAU,GAAA;EACZ,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;OAClC;EAED,IAAA,IAAI,aAAa,GAAA;UACf,OAAO,IAAI,CAAC,cAAc,CAAC;OAC5B;EAED,IAAA,IAAI,WAAW,GAAA;UACb,OAAO,IAAI,CAAC,YAAY,CAAC;OAC1B;EA8BO,IAAA,MAAM,CAAC,CAAgB,EAAA;EAC7B,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC3C,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAE3C,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;EACzB,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;OAC1B;EAEO,IAAA,oBAAoB,CAAC,CAAgB,EAAA;EAC3C,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC3C,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACrD,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAE9D,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;EAEzB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC5B;EAEO,IAAA,oBAAoB,CAAC,CAAgB,EAAA;EAC3C,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC7D,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACrD,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAE9D,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;EAEzB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC5B;EAEO,IAAA,sBAAsB,CAAC,CAAgB,EAAA;EAC7C,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC3C,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACrD,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;EAEzB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC5B;EAEO,IAAA,sBAAsB,CAAC,CAAgB,EAAA;EAC7C,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC7D,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACrD,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAE9D,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;EAEzB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC5B;EAEO,IAAA,kBAAkB,CAAC,CAAgB,EAAE,OAAe,EAAE,KAAa,EAAA;EACzE,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EACpC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAEpC,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC9C,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAE9C,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC9C,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAE9C,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC9C,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAE9C,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;EAC1E,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;EAE1E,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;EAC5B,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;EAE5B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC5B;EAEO,IAAA,kBAAkB,CAAC,CAAgB,EAAE,OAAe,EAAE,KAAa,EAAA;EACzE,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EACpC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAEpC,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAC5D,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAE5D,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAC5D,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAE5D,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAC5D,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAE5D,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;EAC1E,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;EAE1E,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;EAC5B,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;EAE5B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC5B;EAED,IAAA,MAAM,CAAC,IAAY,EAAA;EACjB,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;EACzC,QAAA,MAAM,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC;UACzB,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;UACvC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CACpB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,EACtD,CAAC,CACF,CAAC;UACF,MAAM,SAAS,GAAG,CAAC,YAAY,GAAG,KAAK,IAAI,KAAK,CAAC;EAEjD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;EACvD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;EACvD,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;EAC5D,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;EAE5D,QAAA,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1B,QAAA,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1B,QAAA,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC;EAC7B,QAAA,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,CAAC;EAE7B,QAAA,OAAO,IAAI,CAAC;OACb;MAED,KAAK,GAAA;UACH,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;OACxD;EACF;;QC9KY,oBAAoB,CAAA;EAmB/B,IAAA,WAAA,CAAY,IAAU,EAAE,MAAyB,GAAA,OAAO,CAAC,MAAM,EAAA;UAZ/D,IAAI,CAAA,IAAA,GAAG,EAAE,CAAC;EAGD,QAAA,IAAA,CAAA,aAAa,GAAG;EACvB,YAAA,CAAC,EAAE,CAAC;EACJ,YAAA,CAAC,EAAE,CAAC;WACL,CAAC;EAOA,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;EACrB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;EAClB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,KAAI;cACzD,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;cAEzC,MAAM,QAAQ,GAAG,YAAY,CAC3B,CAAC,EACD,CAAC,EACD,CAAC,CAAS,KAAI;kBACZ,MAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;kBAC5B,MAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EAE5B,gBAAA,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;eACjC,EACD,CAAC,CACF,CAAC;cAEF,OAAO;EACL,gBAAA,CAAC,EAAE,MAAM;EACT,gBAAA,CAAC,EAAE,MAAM;kBACT,QAAQ;EACR,gBAAA,cAAc,EAAE,CAAC;EACjB,gBAAA,OAAO,EAAE,CAAC;EACV,gBAAA,KAAK,EAAE,CAAC;eACT,CAAC;EACJ,SAAC,CAAC,CAAC;EAEH,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU;eAC7B,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,QAAQ,CAAC;EAC9B,aAAA,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;UAE3C,IAAI,MAAM,GAAG,CAAC,CAAC;UACf,IAAI,QAAQ,GAAG,CAAC,CAAC;UACjB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,KAAI;cAChC,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;EACnD,YAAA,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;cACvB,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,MAAM,GAAG,UAAU,CAAC;EAC3C,YAAA,KAAK,CAAC,cAAc,GAAG,QAAQ,CAAC;EAChC,YAAA,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC;EAC7B,SAAC,CAAC,CAAC;OACJ;EA7CD,IAAA,IAAI,QAAQ,GAAA;UACV,OAAO,IAAI,CAAC,SAAS,CAAC;OACvB;EA6CD,IAAA,MAAM,CAAC,IAAY,EAAA;UACjB,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;EACrC,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,KAAI;cAClD,MAAM,aAAa,GAAG,UAAU,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC;EACpD,YAAA,MAAM,YAAY,GAChB,UAAU,GAAG,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;EACzD,YAAA,QACE,aAAa;kBACb,YAAY;EACZ,iBAAC,UAAU,IAAI,KAAK,CAAC,OAAO,IAAI,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,EACzD;EACJ,SAAC,CAAC,CAAC;UAEH,IAAI,KAAK,IAAI,IAAI,EAAE;EACjB,YAAA,OAAO,IAAI,CAAC;EACb,SAAA;EAED,QAAA,MAAM,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;EAC7C,QAAA,MAAM,gBAAgB,GAAG,QAAQ,GAAG,KAAK,CAAC,cAAc,CAAC;EACzD,QAAA,MAAM,SAAS,GAAG,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC;EAC7C,QAAA,MAAM,YAAY,GAAG,SAAS,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;EAE/D,QAAA,MAAM,SAAS,GAAG,CAAC,CAAS,KAAI;cAC9B,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;cACvC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;EAEvC,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EAClC,SAAC,CAAC;EAEF,QAAA,MAAM,WAAW,GAAG,aAAa,CAC/B,CAAC,CAAC,KAAI;EACJ,YAAA,OAAO,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,GAAG,gBAAgB,CAAC;EAC7D,SAAC,EACD,SAAS,EACT,YAAY,EACZ,EAAE,CACH,CAAC;EAEF,QAAA,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;EACpD,QAAA,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;EAEpD,QAAA,OAAO,IAAI,CAAC;OACb;MAED,KAAK,GAAA;UACH,OAAO,IAAI,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;OAC1D;EACF;;EC1HD,MAAM,kBAAkB,GAAG,IAAI,kBAAkB,EAAE,CAAC;EAE9C,SAAU,eAAe,CAAI,kBAA0C,EAAA;MAC3E,MAAM,SAAS,GAAG,kBAAkB,CAAC,QAAQ,CAAI,kBAAkB,CAAC,CAAC;MACrE,MAAM,SAAS,GAAG,IAAI,SAAS,CAAI,EAAE,EAAE,SAAS,CAAC,CAAC;EAElD,IAAA,OAAO,SAAS,CAAC;EACnB;;ECLA,MAAM,qBAAqB,GAAG,IAAIE,qBAAqB,EAAE,CAAC;EAGpD,SAAU,kBAAkB,CAChC,kBAA6C,EAAA;MAE7C,MAAM,SAAS,GAAG,qBAAqB,CAAC,QAAQ,CAAI,kBAAkB,CAAC,CAAC;MACxE,MAAM,SAAS,GAAG,IAAI,SAAS,CAAa,EAAE,EAAE,SAAS,CAAC,CAAC;EAE3D,IAAA,OAAO,SAAS,CAAC;EACnB;;ECXA,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAQjB,OAAO,CAAA;EAkBlB,IAAA,WAAA,CAAY,UAAkB,EAAA;UAjBpB,IAAQ,CAAA,QAAA,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAE1B,IAAc,CAAA,cAAA,GAAkB,EAAE,CAAC;UACnC,IAAc,CAAA,cAAA,GAAkB,EAAE,CAAC;EAe3C,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;EAChD,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;UAE7B,OAAO;eACJ,OAAO,CAAC,IAAI,CAAC;EACb,aAAA,UAAU,EAAE;EACZ,aAAA,KAAK,EAAE;eACP,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,iBAAiB,CAAC;EAC3C,aAAA,MAAM,EAAE;EACR,aAAA,KAAK,EAAE;eACP,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC;EAClC,aAAA,MAAM,EAAE;EACR,aAAA,KAAK,EAAE;eACP,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC;EACnC,aAAA,MAAM,EAAE,CAAC;UAEZ,IAAI,IAAI,IAAI,IAAI,EAAE;EAChB,YAAA,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;EAClC,SAAA;UAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,KAAI;cAChC,IAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3B,SAAC,CAAC,CAAC;OACJ;EApCD,IAAA,IAAI,OAAO,GAAA;UACT,OAAO,IAAI,CAAC,cAAc,CAAC;OAC5B;EAED,IAAA,IAAI,OAAO,GAAA;UACT,OAAO,IAAI,CAAC,cAAc,CAAC;OAC5B;EAED,IAAA,IAAI,UAAU,GAAA;EACZ,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;OACnC;EA4BO,IAAA,MAAM,CAAC,CAAgB,EAAA;EAC7B,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC3C,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAE3C,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;EACzB,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;OAC1B;EAEO,IAAA,oBAAoB,CAAC,CAAgB,EAAA;EAC3C,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC3C,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACrD,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAE9D,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;EAEzB,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC7B;EAEO,IAAA,oBAAoB,CAAC,CAAgB,EAAA;EAC3C,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC7D,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACrD,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAE9D,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;EAEzB,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC7B;EAEO,IAAA,sBAAsB,CAAC,CAAgB,EAAA;EAC7C,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC3C,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACrD,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;EAEzB,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC7B;EAEO,IAAA,sBAAsB,CAAC,CAAgB,EAAA;EAC7C,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC7D,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACrD,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAE9D,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;EAEzB,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC7B;EAEO,IAAA,kBAAkB,CAAC,CAAgB,EAAE,OAAe,EAAE,KAAa,EAAA;EACzE,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EACpC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAEpC,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC9C,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAE9C,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC9C,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAE9C,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC9C,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAE9C,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;EAC1E,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;EAE1E,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;EAC5B,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;EAE5B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC7B;EAEO,IAAA,kBAAkB,CAAC,CAAgB,EAAE,OAAe,EAAE,KAAa,EAAA;EACzE,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EACpC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAEpC,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAC5D,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAE5D,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAC5D,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAE5D,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAC5D,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;EAE5D,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;EAC1E,QAAA,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;EAE1E,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;EAC5B,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;EAE5B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC7B;EACF;;QCrJY,SAAS,CAAA;EAgBpB,IAAA,WAAA,CAAY,MAAgB,EAAA;UAfpB,IAAQ,CAAA,QAAA,GAAkB,EAAE,CAAC;UAC7B,IAAQ,CAAA,QAAA,GAAkB,EAAE,CAAC;EAenC,QAAA,MAAM,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;UAExC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;EACjC,YAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;EAC/D,SAAA;EAED,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;EACzC,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,IAAI,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACxE,CAAC;EAEF,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,IAAI,WAAW,CAAC;kBACd,QAAQ,CAAC,CAAC,CAAC;EACX,gBAAA,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,gBAAA,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,gBAAA,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;EACd,aAAA,CAAC,CACH,CAAC;cACF,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;cAC5B,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC7B,SAAA;OACF;EAnCD,IAAA,IAAI,OAAO,GAAA;UACT,OAAO,IAAI,CAAC,QAAQ,CAAC;OACtB;EAED,IAAA,IAAI,OAAO,GAAA;UACT,OAAO,IAAI,CAAC,QAAQ,CAAC;OACtB;EAED,IAAA,IAAI,UAAU,GAAA;EACZ,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;OAC7B;EA0BF;;;;;;;;;;;;;;;;;;;;;;;;;;;"}