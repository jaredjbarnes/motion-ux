{"version":3,"file":"index.browser.js","sources":["../src/BezierCurve.ts","../src/Visitor.ts","../src/TreeUtility.ts","../src/GraphsVisitor.ts","../src/Animator.ts","../src/easingFunctions/easeInQuad.ts","../src/easingFunctions/easeOutQuad.ts","../src/easingFunctions/easeInOutQuad.ts","../src/easingFunctions/easeInElastic.ts","../src/easingFunctions/easeInOutElastic.ts","../src/easingFunctions/easeOutElastic.ts","../src/easingFunctions/easeInOutBack.ts","../src/easingFunctions/easeOutBounce.ts","../src/easingFunctions/easeInBounce.ts","../src/easingFunctions/easeInOutBounce.ts","../src/easingFunctions/easeInCubic.ts","../src/easingFunctions/easeOutCubic.ts","../src/easingFunctions/easeInOutCubic.ts","../src/easingFunctions/easeInQuart.ts","../src/easingFunctions/easeOutQuart.ts","../src/easingFunctions/easeInOutQuart.ts","../src/easingFunctions/easeInQuint.ts","../src/easingFunctions/easeOutQuint.ts","../src/easingFunctions/easeInOutQuint.ts","../src/easingFunctions/easeInSine.ts","../src/easingFunctions/easeOutSine.ts","../src/easingFunctions/easeInOutSine.ts","../src/easingFunctions/easeInExpo.ts","../src/easingFunctions/easeOutExpo.ts","../src/easingFunctions/easeInOutExpo.ts","../src/easingFunctions/easeInCirc.ts","../src/easingFunctions/easeOutCirc.ts","../src/easingFunctions/easeInOutCirc.ts","../src/easingFunctions/easeInBack.ts","../src/easingFunctions/easeOutBack.ts","../src/easingFunctions/easeLinear.ts","../src/easings.ts","../node_modules/clarity-pattern-parser/dist/index.esm.js","../src/patterns/divider.ts","../src/patterns/number.ts","../src/patterns/unit.ts","../src/patterns/hex.ts","../src/patterns/name.ts","../src/patterns/optionalSpaces.ts","../src/patterns/method.ts","../src/patterns/array.ts","../src/patterns/value.ts","../src/patterns/spaces.ts","../src/patterns/values.ts","../src/patterns/cssValue.ts","../src/HexColor.ts","../src/TreeNormalizer.ts","../src/ParsedValue.ts","../src/KeyframeConfigValidator.ts","../src/KeyframeUtility.ts","../src/Keyframe.ts","../src/createDynamicEasing.ts","../src/Animation.ts","../src/Observer.ts","../src/TimeObserver.ts","../src/Observable.ts","../src/DefaultClock.ts","../src/GraphOperations.ts","../src/GraphOperator.ts","../src/SlopeAnimationBuilder.ts","../src/BlendedAnimation.ts","../src/Player.ts"],"sourcesContent":["export default class BezierCurve {\n  points: any;\n  reducedPoints: any;\n\n  constructor(points: number[]) {\n    this.setPoints(points);\n  }\n\n  setPoints(points: number[]) {\n    this.points = points;\n    this.reducedPoints = new Array(points.length);\n\n    Object.freeze(this.points);\n  }\n\n  valueAt(percentage: number) {\n    const points = this.points;\n    const reducedPoints = this.reducedPoints;\n    const length = points.length;\n\n    for (let x = 0; x < length; x++) {\n      reducedPoints[x] = points[x];\n    }\n\n    for (let x = 0; x < length; x++) {\n      const innerLength = length - x - 1;\n\n      for (let y = 0; y < innerLength; y++) {\n        const nextPoint = reducedPoints[y + 1];\n        const point = reducedPoints[y];\n\n        reducedPoints[y] = (nextPoint - point) * percentage + point;\n      }\n    }\n\n    return reducedPoints[0];\n  }\n\n  clone() {\n    return new BezierCurve(this.points.slice());\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\n\nconst emptyFn = () => {};\n\nexport default class Visitor {\n  public callback: any;\n\n  constructor(callback: (node: Node) => void = emptyFn) {\n    this.setCallback(callback);\n    this.visitDown = this.visitDown.bind(this);\n    this.visitUp = this.visitUp.bind(this);\n  }\n\n  walkUp(node: Node) {\n    if (node.isComposite) {\n      node.children.forEach(this.visitUp);\n    }\n\n    this.callback(node);\n  }\n\n  visitUp(node: Node) {\n    this.walkUp(node);\n  }\n\n  walkDown(node: Node) {\n    this.callback(node);\n\n    if (node.isComposite) {\n      node.children.forEach(this.visitDown);\n    }\n  }\n\n  visitDown(node: Node) {\n    this.walkDown(node);\n  }\n\n  setCallback(callback: (node: Node) => void) {\n    if (typeof callback === \"function\") {\n      this.callback = callback;\n    } else {\n      this.callback = emptyFn;\n    }\n\n    this.callback = callback;\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport Visitor from \"./Visitor\";\n\nconst visitor = new Visitor();\n\nfunction convertNumberNode(node: Node) {\n  if (node.name === \"number\") {\n    (node as any).value = Number(node.value);\n  }\n}\n\n// Hashing function, this may not be the best. So this may need to be replaced.\n// https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\nfunction hash(str: string, seed = 0) {\n  let h1 = 0xdeadbeef ^ seed,\n    h2 = 0x41c6ce57 ^ seed;\n  for (let i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i);\n    h1 = Math.imul(h1 ^ ch, 2654435761);\n    h2 = Math.imul(h2 ^ ch, 1597334677);\n  }\n  h1 =\n    Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^\n    Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n  h2 =\n    Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^\n    Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n  return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n}\n\nexport default class TreeUtility {\n  areTreeStructuresEqual(nodeA: Node, nodeB: Node) {\n    const nodeASequence = this.sequence(nodeA);\n    const nodeBSequence = this.sequence(nodeB);\n    return nodeASequence === nodeBSequence;\n  }\n\n  sequence(node: Node) {\n    const sequence: string[] = [];\n    visitor.setCallback((node: Node) => {\n      sequence.push(node.name);\n    });\n    visitor.visitDown(node);\n\n    return sequence.join(\"|\");\n  }\n\n  sequenceHash(node: Node) {\n    return hash(this.sequence(node));\n  }\n\n  convertNumberNodesToNumberValues(node: Node) {\n    visitor.setCallback(convertNumberNode);\n    visitor.visitDown(node);\n  }\n}\n","import TreeUtility from \"./TreeUtility\";\nimport { Node } from \"clarity-pattern-parser\";\n\nconst emptyFn = () => {};\nconst treeUtility = new TreeUtility();\n\ntype Visitor = (graphs: Node[]) => void;\n\nexport default class GraphsVisitor {\n  private visitor: Visitor = emptyFn;\n\n  constructor(callback: Visitor = emptyFn) {\n    this.setCallback(callback);\n    this.visitDown = this.visitDown.bind(this);\n    this.visitUp = this.visitUp.bind(this);\n  }\n\n  visitUp(graphs: Node[], optimized = false) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    const siblings = graphs.slice(1);\n    const node = graphs[0];\n\n    if (!optimized) {\n      const areEqual = siblings.every((sibling) =>\n        treeUtility.areTreeStructuresEqual(node, sibling)\n      );\n\n      if (!areEqual) {\n        throw new Error(\"The nodes structures need to be the same.\");\n      }\n    }\n\n    this.walkUp(graphs);\n  }\n\n  walkUp(graphs: Node[]) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    const node = graphs[0];\n\n    if (node.isComposite) {\n      for (let index = 0; index < node.children.length; index++) {\n        const childGraphs = graphs.map((node) => {\n          return node.children[index];\n        });\n        this.walkUp(childGraphs);\n      }\n    }\n\n    this.visitor(graphs);\n  }\n\n  visitDown(graphs: Node[], optimized = false) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    const siblings = graphs.slice(1);\n    const node = graphs[0];\n\n    if (!optimized) {\n      const areEqual = siblings.every((sibling) =>\n        treeUtility.areTreeStructuresEqual(node, sibling)\n      );\n\n      if (!areEqual) {\n        throw new Error(\"The nodes structures need to be the same.\");\n      }\n    }\n\n    this.walkDown(graphs);\n  }\n\n  walkDown(graphs: Node[]) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    this.visitor(graphs);\n\n    const node = graphs[0];\n    if (node.isComposite) {\n      for (let index = 0; index < node.children.length; index++) {\n        const childGraphs = graphs.map((node) => {\n          return node.children[index];\n        });\n        this.walkDown(childGraphs);\n      }\n    }\n  }\n\n  setCallback(visitor: Visitor) {\n    if (typeof visitor === \"function\") {\n      this.visitor = visitor;\n    } else {\n      this.visitor = emptyFn;\n    }\n\n    this.visitor = visitor;\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport BezierCurve from \"./BezierCurve\";\nimport GraphsVisitor from \"./GraphsVisitor\";\nimport Keyframe from \"./Keyframe\";\n\nconst visitor = new GraphsVisitor();\n\nexport default class Animator {\n  public keyframe: Keyframe;\n  public time: number;\n  public bezierCurve: BezierCurve;\n  public keyframeGraphs: Node[];\n\n  constructor(keyframe: Keyframe) {\n    this.keyframe = keyframe;\n    this.visit = this.visit.bind(this);\n    this.time = 0;\n    this.bezierCurve = new BezierCurve([]);\n    this.keyframeGraphs = [];\n    this.updateKeyframeGraphs();\n  }\n\n  private updateKeyframeGraphs() {\n    this.keyframeGraphs.length = 0;\n    this.keyframeGraphs.push(this.keyframe.from.graph);\n\n    for (let x = 0; x < this.keyframe.controls.length; x++) {\n      this.keyframeGraphs.push(this.keyframe.controls[x].graph);\n    }\n\n    this.keyframeGraphs.push(this.keyframe.to.graph);\n    this.keyframeGraphs.push(this.keyframe.result.graph);\n  }\n\n  visit(nodes: Node[]) {\n    const cloneNodes = nodes.slice();\n    const resultNode = cloneNodes.pop();\n    const time = this.time;\n\n    if (resultNode == null) {\n      return;\n    }\n\n    if (cloneNodes[0].name === \"number\") {\n      const elapsedTime = time - this.keyframe.startAt;\n      const animationDuration = this.keyframe.endAt - this.keyframe.startAt;\n      const timeWithEasing = this.keyframe.easing(\n        elapsedTime / animationDuration\n      );\n\n      const points = cloneNodes.map((node) => Number(node.value));\n\n      this.bezierCurve.setPoints(points);\n      resultNode.value = this.bezierCurve.valueAt(timeWithEasing);\n    } else {\n      if (!resultNode.isComposite) {\n        if (time >= this.keyframe.startAt) {\n          resultNode.value = cloneNodes[cloneNodes.length - 1].value;\n        } else {\n          resultNode.value = cloneNodes[0].value;\n        }\n      }\n    }\n  }\n\n  update(time: number) {\n    this.updateKeyframeGraphs();\n    this.time = time;\n\n    visitor.setCallback(this.visit);\n    visitor.visitDown(this.keyframeGraphs, true);\n\n    const value = this.keyframe.result.graph.toString();\n    this.keyframe.result.value = value;\n\n    return this.keyframe.result;\n  }\n}\n","export default (percentage: number) => {\n  return percentage * percentage;\n};\n","export default (percentage: number) => {\n  return -percentage * (percentage - 2);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1) return (1 / 2) * percentage * percentage;\n  return (-1 / 2) * (--percentage * (percentage - 2) - 1);\n};\n","export default (percentage: number) => {\n  const p = 0.3 / 1;\n  const s = p / 4;\n  const a = 1;\n\n  if (percentage <= 0) return 0;\n  if (percentage >= 1) return 1;\n\n  return -(\n    a *\n    Math.pow(2, 10 * (percentage -= 1)) *\n    Math.sin(((percentage - s) * (2 * Math.PI)) / p)\n  );\n};\n","export default (t: number) => {\n  var b = 0;\n  var c = 1;\n  var d = 1;\n  var s = 1.70158;\n  var p = 0;\n  var a = c;\n\n  if (t == 0) return b;\n  if ((t /= d / 2) == 2) return b + c;\n  if (!p) p = d * (0.3 / 1);\n  if (a < Math.abs(c)) {\n    a = c;\n    var s = p / 4;\n  } else var s = (p / (2 * Math.PI)) * Math.asin(c / a);\n  if (t < 1)\n    return (\n      -0.5 *\n        (a *\n          Math.pow(2, 10 * (t -= 1)) *\n          Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\n      b\n    );\n  return (\n    a *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\n      0.5 +\n    c +\n    b\n  );\n};\n","export default (percentage: number) => {\n  const p = 0.3 / 1;\n  const s = p / 4;\n  const a = 1;\n\n  if (percentage <= 0) return 0;\n  if (percentage >= 1) return 1;\n\n  return (\n    a *\n      Math.pow(2, -10 * percentage) *\n      Math.sin(((percentage - s) * (2 * Math.PI)) / p) +\n    1\n  );\n};\n","export default (percentage: number) => {\n  const s = 1.70158 * 1.525;\n\n  if ((percentage /= 1 / 2) < 1) {\n    return (1 / 2) * (percentage * percentage * ((s + 1) * percentage - s));\n  }\n\n  return (\n    (1 / 2) * ((percentage -= 2) * percentage * ((s + 1) * percentage + s) + 2)\n  );\n};\n","export default (percentage: number) => {\n  let t = percentage;\n\n  if ((t /= 1) < 1 / 2.75) {\n    return 7.5625 * t * t;\n  } else if (t < 2 / 2.75) {\n    return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n  } else if (t < 2.5 / 2.75) {\n    return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n  } else {\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  }\n};\n","import easeOutBounce from \"./easeOutBounce\";\n\nexport default (percentage: number) => {\n  return 1 - easeOutBounce(1 - percentage);\n};\n","import easeInBounce from \"./easeInBounce\";\nimport easeOutBounce from \"./easeOutBounce\";\n\nexport default (percentage: number) => {\n  if (percentage < 0.5) {\n    return easeInBounce(percentage * 2) * 0.5;\n  } else {\n    return easeOutBounce(percentage * 2 - 1) * 0.5 + 0.5;\n  }\n};\n","export default (percentage: number) => {\n  return 1 * (percentage /= 1) * percentage * percentage;\n};\n","export default (percentage: number) => {\n  return 1 * ((percentage = percentage / 1 - 1) * percentage * percentage + 1);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * percentage * percentage * percentage;\n  return (1 / 2) * ((percentage -= 2) * percentage * percentage + 2);\n};\n","export default (percentage: number) => {\n  return 1 * (percentage /= 1) * percentage * percentage * percentage;\n};\n","export default (percentage: number) => {\n  return (\n    -1 *\n    ((percentage = percentage / 1 - 1) * percentage * percentage * percentage -\n      1)\n  );\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * percentage * percentage * percentage * percentage;\n  return (\n    (-1 / 2) * ((percentage -= 2) * percentage * percentage * percentage - 2)\n  );\n};\n","export default (percentage: number) => {\n  return (\n    1 * (percentage /= 1) * percentage * percentage * percentage * percentage\n  );\n};\n","export default (percentage: number) => {\n  return (\n    1 *\n    ((percentage = percentage / 1 - 1) *\n      percentage *\n      percentage *\n      percentage *\n      percentage +\n      1)\n  );\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (\n      (1 / 2) * percentage * percentage * percentage * percentage * percentage\n    );\n  return (\n    (1 / 2) *\n    ((percentage -= 2) * percentage * percentage * percentage * percentage + 2)\n  );\n};\n","export default (percentage: number) => {\n  return -Math.cos(percentage * (Math.PI / 2)) + 1;\n};\n","export default (percentage: number) => {\n  return 1 * Math.sin((percentage / 1) * (Math.PI / 2));\n};\n","export default (percentage: number) => {\n  return (-1 / 2) * (Math.cos((Math.PI * percentage) / 1) - 1);\n};\n","export default (percentage: number) => {\n  return percentage == 0 ? 0 : 1 * Math.pow(2, 10 * (percentage / 1 - 1));\n};\n","export default (percentage: number) => {\n  return percentage == 1 ? 1 : 1 * (-Math.pow(2, (-10 * percentage) / 1) + 1);\n};\n","export default (percentage: number) => {\n  if (percentage == 0) return 0;\n  if (percentage == 1) return 1;\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * Math.pow(2, 10 * (percentage - 1));\n  return (1 / 2) * (-Math.pow(2, -10 * --percentage) + 2);\n};\n","export default (percentage: number) => {\n  return -1 * (Math.sqrt(1 - (percentage /= 1) * percentage) - 1);\n};\n","export default (percentage: number) => {\n  return 1 * Math.sqrt(1 - (percentage = percentage / 1 - 1) * percentage);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (-1 / 2) * (Math.sqrt(1 - percentage * percentage) - 1);\n  return (1 / 2) * (Math.sqrt(1 - (percentage -= 2) * percentage) + 1);\n};\n","export default (percentage: number) => {\n  const s = 1.70158;\n  return 1 * (percentage /= 1) * percentage * ((s + 1) * percentage - s);\n};\n","export default (percentage: number) => {\n  const s = 1.70158;\n  return (\n    1 *\n    ((percentage = percentage / 1 - 1) *\n      percentage *\n      ((s + 1) * percentage + s) +\n      1)\n  );\n};\n","export default (percentage: number) => {\n  return percentage;\n};\n","import easeInQuad from \"./easingFunctions/easeInQuad\";\nimport easeOutQuad from \"./easingFunctions/easeOutQuad\";\nimport easeInOutQuad from \"./easingFunctions/easeInOutQuad\";\nimport easeInElastic from \"./easingFunctions/easeInElastic\";\nimport easeInOutElastic from \"./easingFunctions/easeInOutElastic\";\nimport easeOutElastic from \"./easingFunctions/easeOutElastic\";\nimport easeInOutBack from \"./easingFunctions/easeInOutBack\";\nimport easeInOutBounce from \"./easingFunctions/easeInOutBounce\";\nimport easeInBounce from \"./easingFunctions/easeInBounce\";\nimport easeOutBounce from \"./easingFunctions/easeOutBounce\";\nimport easeInCubic from \"./easingFunctions/easeInCubic\";\nimport easeOutCubic from \"./easingFunctions/easeOutCubic\";\nimport easeInOutCubic from \"./easingFunctions/easeInOutCubic\";\nimport easeInQuart from \"./easingFunctions/easeInQuart\";\nimport easeOutQuart from \"./easingFunctions/easeOutQuart\";\nimport easeInOutQuart from \"./easingFunctions/easeInOutQuart\";\nimport easeInQuint from \"./easingFunctions/easeInQuint\";\nimport easeOutQuint from \"./easingFunctions/easeOutQuint\";\nimport easeInOutQuint from \"./easingFunctions/easeInOutQuint\";\nimport easeInSine from \"./easingFunctions/easeInSine\";\nimport easeOutSine from \"./easingFunctions/easeOutSine\";\nimport easeInOutSine from \"./easingFunctions/easeInOutSine\";\nimport easeInExpo from \"./easingFunctions/easeInExpo\";\nimport easeOutExpo from \"./easingFunctions/easeOutExpo\";\nimport easeInOutExpo from \"./easingFunctions/easeInOutExpo\";\nimport easeInCirc from \"./easingFunctions/easeInCirc\";\nimport easeOutCirc from \"./easingFunctions/easeOutCirc\";\nimport easeInOutCirc from \"./easingFunctions/easeInOutCirc\";\nimport easeInBack from \"./easingFunctions/easeInBack\";\nimport easeOutBack from \"./easingFunctions/easeOutBack\";\nimport easeLinear from \"./easingFunctions/easeLinear\";\n\nexport type EasingFunction = (percentage: number) => number;\n\nexport type EasingNames =\n  | \"easeInQuad\"\n  | \"easeOutQuad\"\n  | \"easeInOutQuad\"\n  | \"easeInCubic\"\n  | \"easeOutCubic\"\n  | \"easeInOutCubic\"\n  | \"easeInQuart\"\n  | \"easeOutQuart\"\n  | \"easeInOutQuart\"\n  | \"easeInQuint\"\n  | \"easeOutQuint\"\n  | \"easeInOutQuint\"\n  | \"easeInSine\"\n  | \"easeOutSine\"\n  | \"easeInOutSine\"\n  | \"easeInExpo\"\n  | \"easeOutExpo\"\n  | \"easeInOutExpo\"\n  | \"easeInCirc\"\n  | \"easeOutCirc\"\n  | \"easeInOutCirc\"\n  | \"easeInElastic\"\n  | \"easeOutElastic\"\n  | \"easeInOutElastic\"\n  | \"easeInBack\"\n  | \"easeOutBack\"\n  | \"easeInOutBack\"\n  | \"easeInBounce\"\n  | \"easeOutBounce\"\n  | \"easeInOutBounce\"\n  | \"linear\";\n\nconst easings = {\n  easeInQuad: easeInQuad,\n  easeOutQuad: easeOutQuad,\n  easeInOutQuad: easeInOutQuad,\n  easeInCubic: easeInCubic,\n  easeOutCubic: easeOutCubic,\n  easeInOutCubic: easeInOutCubic,\n  easeInQuart: easeInQuart,\n  easeOutQuart: easeOutQuart,\n  easeInOutQuart: easeInOutQuart,\n  easeInQuint: easeInQuint,\n  easeOutQuint: easeOutQuint,\n  easeInOutQuint: easeInOutQuint,\n  easeInSine: easeInSine,\n  easeOutSine: easeOutSine,\n  easeInOutSine: easeInOutSine,\n  easeInExpo: easeInExpo,\n  easeOutExpo: easeOutExpo,\n  easeInOutExpo: easeInOutExpo,\n  easeInCirc: easeInCirc,\n  easeOutCirc: easeOutCirc,\n  easeInOutCirc: easeInOutCirc,\n  easeInElastic: easeInElastic,\n  easeOutElastic: easeOutElastic,\n  easeInOutElastic: easeInOutElastic,\n  easeInBack: easeInBack,\n  easeOutBack: easeOutBack,\n  easeInOutBack: easeInOutBack,\n  easeInBounce: easeInBounce,\n  easeOutBounce: easeOutBounce,\n  easeInOutBounce: easeInOutBounce,\n  linear: easeLinear,\n};\n\nexport default easings;\n","class Node {\r\n    constructor(type, name, startIndex, endIndex, isComposite = false) {\r\n        this.children = [];\r\n        this.value = \"\";\r\n        this.type = type;\r\n        this.name = name;\r\n        this.startIndex = startIndex;\r\n        this.endIndex = endIndex;\r\n        this.isComposite = isComposite;\r\n        if (typeof this.startIndex !== \"number\" ||\r\n            typeof this.endIndex !== \"number\") {\r\n            throw new Error(\"Invalid Arguments: startIndex and endIndex need to be number.\");\r\n        }\r\n    }\r\n}\n\nclass CompositeNode extends Node {\r\n    constructor(type, name, startIndex = 0, endIndex = 0) {\r\n        super(type, name, startIndex, endIndex, true);\r\n    }\r\n    clone() {\r\n        const node = new CompositeNode(this.type, this.name, this.startIndex, this.endIndex);\r\n        node.children = this.children.map((child) => {\r\n            return child.clone();\r\n        });\r\n        return node;\r\n    }\r\n    filter(shouldKeep, context = []) {\r\n        const childrenContext = context.slice();\r\n        childrenContext.push(this);\r\n        Object.freeze(childrenContext);\r\n        const matches = this.children.reduce((acc, child) => {\r\n            return acc.concat(child.filter(shouldKeep, childrenContext));\r\n        }, []);\r\n        const match = shouldKeep(this, context);\r\n        if (match) {\r\n            matches.push(this);\r\n        }\r\n        return matches;\r\n    }\r\n    toString() {\r\n        return this.children.map((child) => child.toString()).join(\"\");\r\n    }\r\n}\n\nclass ValueNode extends Node {\r\n    constructor(type, name, value, startIndex = 0, endIndex = 0) {\r\n        super(type, name, startIndex, endIndex);\r\n        this.value = value;\r\n    }\r\n    clone() {\r\n        return new ValueNode(this.type, this.name, this.value, this.startIndex, this.endIndex);\r\n    }\r\n    filter(shouldKeep, context = []) {\r\n        const match = shouldKeep(this, context);\r\n        if (match) {\r\n            return [this];\r\n        }\r\n        return [];\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\n\nclass CursorHistory {\r\n    constructor() {\r\n        this.isRecording = false;\r\n        this.furthestMatch = {\r\n            pattern: null,\r\n            astNode: null,\r\n        };\r\n        this.furthestError = null;\r\n        this.patterns = [];\r\n        this.astNodes = [];\r\n        this.errors = [];\r\n    }\r\n    addMatch(pattern, astNode) {\r\n        if (this.isRecording) {\r\n            this.patterns.push(pattern);\r\n            this.astNodes.push(astNode);\r\n        }\r\n        if (this.furthestMatch.astNode == null ||\r\n            astNode.endIndex >= this.furthestMatch.astNode.endIndex) {\r\n            this.furthestMatch.pattern = pattern;\r\n            this.furthestMatch.astNode = astNode;\r\n        }\r\n    }\r\n    addError(error) {\r\n        if (this.isRecording) {\r\n            this.errors.push(error);\r\n        }\r\n        if (this.furthestError == null || error.index >= this.furthestError.index) {\r\n            this.furthestError = error;\r\n        }\r\n    }\r\n    startRecording() {\r\n        this.isRecording = true;\r\n    }\r\n    stopRecording() {\r\n        this.isRecording = false;\r\n        this.clear();\r\n    }\r\n    clear() {\r\n        this.patterns.length = 0;\r\n        this.astNodes.length = 0;\r\n        this.errors.length = 0;\r\n    }\r\n    getFurthestError() {\r\n        return this.furthestError;\r\n    }\r\n    getFurthestMatch() {\r\n        return this.furthestMatch;\r\n    }\r\n    getLastMatch() {\r\n        if (this.isRecording) {\r\n            return {\r\n                pattern: this.patterns[this.patterns.length - 1] || null,\r\n                astNode: this.astNodes[this.astNodes.length - 1] || null,\r\n            };\r\n        }\r\n        else {\r\n            return this.furthestMatch;\r\n        }\r\n    }\r\n    getLastError() {\r\n        return this.errors[this.errors.length - 1] || null;\r\n    }\r\n    getAllParseStacks() {\r\n        const stacks = this.astNodes.reduce((acc, node) => {\r\n            let container = acc[acc.length - 1];\r\n            if (node.startIndex === 0) {\r\n                container = [];\r\n                acc.push(container);\r\n            }\r\n            container.push(node);\r\n            return acc;\r\n        }, []);\r\n        // There are times when the matching will fail and hit again on the same node.\r\n        // This filters them out.\r\n        // We simply check to see if there is any overlap with the previous one,\r\n        // and if there is we don't add it. This is why we move backwards.\r\n        const cleanedStack = stacks.map((stack) => {\r\n            const cleanedStack = [];\r\n            for (let x = stack.length - 1; x >= 0; x--) {\r\n                const currentNode = stack[x];\r\n                const previousNode = stack[x + 1];\r\n                if (previousNode == null) {\r\n                    cleanedStack.unshift(currentNode);\r\n                }\r\n                else {\r\n                    const left = Math.max(currentNode.startIndex, previousNode.startIndex);\r\n                    const right = Math.min(currentNode.endIndex, previousNode.endIndex);\r\n                    const isOverlapping = left <= right;\r\n                    if (!isOverlapping) {\r\n                        cleanedStack.unshift(currentNode);\r\n                    }\r\n                }\r\n            }\r\n            return cleanedStack;\r\n        });\r\n        return cleanedStack;\r\n    }\r\n    getLastParseStack() {\r\n        const stacks = this.getAllParseStacks();\r\n        return stacks[stacks.length - 1] || [];\r\n    }\r\n}\n\nclass Cursor {\r\n    constructor(text) {\r\n        this.text = text;\r\n        this.assertValidity();\r\n        this.index = 0;\r\n        this.length = text.length;\r\n        this.history = new CursorHistory();\r\n        this.isInErrorState = false;\r\n    }\r\n    assertValidity() {\r\n        if (this.isNullOrEmpty(this.text)) {\r\n            throw new Error(\"Illegal Argument: Cursor needs to have a string that has a length greater than 0.\");\r\n        }\r\n    }\r\n    startRecording() {\r\n        this.history.startRecording();\r\n    }\r\n    stopRecording() {\r\n        this.history.stopRecording();\r\n    }\r\n    get parseError() {\r\n        return this.history.getFurthestError();\r\n    }\r\n    get lastMatch() {\r\n        return this.history.getFurthestMatch();\r\n    }\r\n    throwError(parseError) {\r\n        this.isInErrorState = true;\r\n        this.history.addError(parseError);\r\n    }\r\n    addMatch(pattern, astNode) {\r\n        this.history.addMatch(pattern, astNode);\r\n    }\r\n    resolveError() {\r\n        this.isInErrorState = false;\r\n    }\r\n    hasUnresolvedError() {\r\n        return this.isInErrorState;\r\n    }\r\n    isNullOrEmpty(value) {\r\n        return value == null || (typeof value === \"string\" && value.length === 0);\r\n    }\r\n    hasNext() {\r\n        return this.index + 1 < this.text.length;\r\n    }\r\n    hasPrevious() {\r\n        return this.index - 1 >= 0;\r\n    }\r\n    next() {\r\n        if (this.hasNext()) {\r\n            this.index++;\r\n        }\r\n        else {\r\n            throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n        }\r\n    }\r\n    previous() {\r\n        if (this.hasPrevious()) {\r\n            this.index--;\r\n        }\r\n        else {\r\n            throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n        }\r\n    }\r\n    mark() {\r\n        return this.index;\r\n    }\r\n    moveToMark(mark) {\r\n        this.index = mark;\r\n    }\r\n    moveToBeginning() {\r\n        this.index = 0;\r\n    }\r\n    moveToEnd() {\r\n        this.index = this.text.length - 1;\r\n    }\r\n    getChar() {\r\n        return this.text.charAt(this.index);\r\n    }\r\n    getIndex() {\r\n        return this.index;\r\n    }\r\n    setIndex(index) {\r\n        if (typeof index === \"number\") {\r\n            if (index < 0 || index > this.lastIndex()) {\r\n                throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n            }\r\n            this.index = index;\r\n        }\r\n    }\r\n    isAtBeginning() {\r\n        return this.index === 0;\r\n    }\r\n    isAtEnd() {\r\n        return this.index === this.text.length - 1;\r\n    }\r\n    lastIndex() {\r\n        return this.length - 1;\r\n    }\r\n    didSuccessfullyParse() {\r\n        return !this.hasUnresolvedError() && this.isAtEnd();\r\n    }\r\n}\n\nclass ParseError {\r\n    constructor(message, index, pattern) {\r\n        this.name = \"ParseError\";\r\n        this.message = message;\r\n        this.index = index;\r\n        this.pattern = pattern;\r\n    }\r\n}\n\nclass Pattern {\r\n    constructor(type = \"\", name, children = []) {\r\n        this._type = type;\r\n        this._name = name;\r\n        this._children = [];\r\n        this._parent = null;\r\n        this.isSequence = false;\r\n        this._assertName();\r\n        this.children = children;\r\n    }\r\n    _assertName() {\r\n        if (typeof this.name !== \"string\") {\r\n            throw new Error(\"Invalid Argument: Patterns needs to have a name that's a string.\");\r\n        }\r\n    }\r\n    exec(text) {\r\n        const cursor = new Cursor(text);\r\n        const node = this.parse(cursor);\r\n        if (cursor.didSuccessfullyParse()) {\r\n            return node;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    test(text) {\r\n        return this.exec(text) != null;\r\n    }\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    set parent(value) {\r\n        if (value instanceof Pattern) {\r\n            this._parent = value;\r\n        }\r\n    }\r\n    get children() {\r\n        return this._children;\r\n    }\r\n    set children(value) {\r\n        this._children = value;\r\n        this._cloneChildren();\r\n        this._assertChildren();\r\n        this._assignAsParent();\r\n    }\r\n    _assertChildren() {\r\n        // Empty,can be overridden by subclasses.\r\n    }\r\n    _cloneChildren() {\r\n        // We need to clone the patterns so nested patterns can be parsed.\r\n        this._children = this._children.map((pattern) => {\r\n            if (!(pattern instanceof Pattern)) {\r\n                throw new Error(`The ${this.name} pattern has an invalid child pattern.`);\r\n            }\r\n            return pattern.clone();\r\n        });\r\n        // We need to freeze the children so they aren't modified.\r\n        Object.freeze(this._children);\r\n    }\r\n    _assignAsParent() {\r\n        this._children.forEach((child) => (child.parent = this));\r\n    }\r\n    getNextTokens() {\r\n        var _a, _b, _c;\r\n        const parent = this._parent;\r\n        if (parent != null) {\r\n            const siblings = parent.children;\r\n            const index = siblings.findIndex((c) => c === this);\r\n            const nextSibling = siblings[index + 1];\r\n            // I don't like this, so I think we need to rethink this.\r\n            if (parent.type.indexOf(\"repeat\") === 0) {\r\n                const tokens = parent.getNextTokens();\r\n                if (index === 0 && siblings.length > 1) {\r\n                    return nextSibling.getTokens().concat(tokens);\r\n                }\r\n                else if (index === 1) {\r\n                    return siblings[0].getTokens().concat(tokens);\r\n                }\r\n                else {\r\n                    return this.getTokens().concat(tokens);\r\n                }\r\n            }\r\n            // Another thing I don't like.\r\n            if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.indexOf(\"and\")) === 0 &&\r\n                nextSibling != null &&\r\n                ((_c = nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.type) === null || _c === void 0 ? void 0 : _c.indexOf(\"optional\")) === 0) {\r\n                let tokens = [];\r\n                for (let x = index + 1; x < siblings.length; x++) {\r\n                    const child = siblings[x];\r\n                    if (child.type.indexOf(\"optional\") === 0) {\r\n                        tokens = tokens.concat(child.getTokens());\r\n                    }\r\n                    else {\r\n                        tokens = tokens.concat(child.getTokens());\r\n                        break;\r\n                    }\r\n                    if (x === siblings.length - 1) {\r\n                        tokens = tokens.concat(this._parent.getNextTokens());\r\n                    }\r\n                }\r\n                return tokens;\r\n            }\r\n            // If you are an or you have already qualified.\r\n            if (parent.type.indexOf(\"or\") === 0) {\r\n                return parent.getNextTokens();\r\n            }\r\n            if (nextSibling != null) {\r\n                return nextSibling.getTokens();\r\n            }\r\n            else {\r\n                return parent.getNextTokens();\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    getTokenValue() {\r\n        return null;\r\n    }\r\n}\n\nclass ValuePattern extends Pattern {\r\n    constructor(type, name, children = []) {\r\n        super(type, name, children);\r\n    }\r\n}\n\nclass RegexValue extends ValuePattern {\r\n    constructor(name, regex) {\r\n        super(\"regex-value\", name);\r\n        this.node = null;\r\n        this.substring = \"\";\r\n        this.regexString = regex;\r\n        this.regex = new RegExp(`^${regex}`, \"g\");\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.regexString !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The regex argument needs to be a string of regex.\");\r\n        }\r\n        if (this.regexString.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The regex string argument needs to be at least one character long.\");\r\n        }\r\n        if (this.regexString.charAt(0) === \"^\") {\r\n            throw new Error(\"Invalid Arguments: The regex string cannot start with a '^' because it is expected to be in the middle of a string.\");\r\n        }\r\n        if (this.regexString.charAt(this.regexString.length - 1) === \"$\") {\r\n            throw new Error(\"Invalid Arguments: The regex string cannot end with a '$' because it is expected to be in the middle of a string.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.regex.lastIndex = 0;\r\n        this.substring = this.cursor.text.substr(this.cursor.getIndex());\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        const result = this.regex.exec(this.substring);\r\n        if (result != null && result.index === 0) {\r\n            const currentIndex = this.cursor.getIndex();\r\n            const newIndex = currentIndex + result[0].length - 1;\r\n            this.node = new ValueNode(\"regex-value\", this.name, result[0], currentIndex, newIndex);\r\n            this.cursor.index = newIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected regex pattern of '${this.regexString}' but found '${this.substring}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RegexValue(name, this.regexString);\r\n    }\r\n    getTokenValue() {\r\n        return this.name;\r\n    }\r\n    getTokens() {\r\n        return [this.name];\r\n    }\r\n}\n\nclass OptionalValue extends ValuePattern {\r\n    constructor(pattern) {\r\n        super(\"optional-value\", \"optional-value\", [pattern]);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (!(this.children[0] instanceof ValuePattern)) {\r\n            throw new Error(\"Invalid Arguments: Expected a ValuePattern.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        const mark = cursor.mark();\r\n        const node = this.children[0].parse(cursor);\r\n        if (cursor.hasUnresolvedError() || node == null) {\r\n            cursor.resolveError();\r\n            cursor.moveToMark(mark);\r\n            return null;\r\n        }\r\n        else {\r\n            cursor.addMatch(this, node);\r\n            return node;\r\n        }\r\n    }\r\n    clone() {\r\n        return new OptionalValue(this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass AndValue extends ValuePattern {\r\n    constructor(name, patterns) {\r\n        super(\"and-value\", name, patterns);\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: AndValue needs to have more than one value pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPatterns();\r\n        return this.node;\r\n    }\r\n    _tryPatterns() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n            }\r\n            if (!this._next()) {\r\n                this._processValue();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    _next() {\r\n        if (this._hasMorePatterns()) {\r\n            if (this.cursor.hasNext()) {\r\n                // If the last result was a failed optional, then don't increment the cursor.\r\n                if (this.nodes[this.nodes.length - 1] != null) {\r\n                    this.cursor.next();\r\n                }\r\n                this.index++;\r\n                return true;\r\n            }\r\n            else if (this.nodes[this.nodes.length - 1] == null) {\r\n                this.index++;\r\n                return true;\r\n            }\r\n            this._assertRestOfPatternsAreOptional();\r\n            return false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _hasMorePatterns() {\r\n        return this.index + 1 < this._children.length;\r\n    }\r\n    _assertRestOfPatternsAreOptional() {\r\n        const areTheRestOptional = this.children.every((pattern, index) => {\r\n            return index <= this.index || pattern instanceof OptionalValue;\r\n        });\r\n        if (!areTheRestOptional) {\r\n            const parseError = new ParseError(`Could not match ${this.name} before string ran out.`, this.index, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n    }\r\n    _processValue() {\r\n        if (this.cursor.hasUnresolvedError()) {\r\n            this.node = null;\r\n        }\r\n        else {\r\n            this.nodes = this.nodes.filter((node) => node != null);\r\n            const lastNode = this.nodes[this.nodes.length - 1];\r\n            const startIndex = this.mark;\r\n            const endIndex = lastNode.endIndex;\r\n            const value = this.nodes.map((node) => node.value).join(\"\");\r\n            this.node = new ValueNode(\"and-value\", this.name, value, startIndex, endIndex);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AndValue(name, this._children);\r\n    }\r\n    getTokens() {\r\n        let tokens = [];\r\n        for (let x = 0; x < this._children.length; x++) {\r\n            const child = this._children[x];\r\n            if (child instanceof OptionalValue) {\r\n                tokens = tokens.concat(child.getTokens());\r\n            }\r\n            else {\r\n                tokens = tokens.concat(child.getTokens());\r\n                break;\r\n            }\r\n        }\r\n        return tokens;\r\n    }\r\n}\n\nclass AnyOfThese extends ValuePattern {\r\n    constructor(name, characters) {\r\n        super(\"any-of-these\", name);\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.characters = characters;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.characters !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The characters argument needs to be a string of characters.\");\r\n        }\r\n        if (this.characters.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The characters argument needs to be at least one character long.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        if (this._isMatch()) {\r\n            const value = this.cursor.getChar();\r\n            const index = this.cursor.getIndex();\r\n            this.node = new ValueNode(\"any-of-these\", this.name, value, index, index);\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _isMatch() {\r\n        return this.characters.indexOf(this.cursor.getChar()) > -1;\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected one of these characters, '${this.characters}' but found '${this.cursor.getChar()}' while parsing for '${this.name}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AnyOfThese(name, this.characters);\r\n    }\r\n    getTokens() {\r\n        return this.characters.split(\"\");\r\n    }\r\n}\n\nclass Literal extends ValuePattern {\r\n    constructor(name, literal) {\r\n        super(\"literal\", name);\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.substring = \"\";\r\n        this.literal = literal;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.literal !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The literal argument needs to be a string of characters.\");\r\n        }\r\n        if (this.literal.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The literalString argument needs to be at least one character long.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n        this.substring = this.cursor.text.substring(this.mark, this.mark + this.literal.length);\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        if (this.substring === this.literal) {\r\n            this._processMatch();\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected '${this.literal}' but found '${this.substring}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    _processMatch() {\r\n        this.node = new ValueNode(\"literal\", this.name, this.substring, this.mark, this.mark + this.literal.length - 1);\r\n        this.cursor.index = this.node.endIndex;\r\n        this.cursor.addMatch(this, this.node);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new Literal(name, this.literal);\r\n    }\r\n    getTokenValue() {\r\n        return this.literal;\r\n    }\r\n    getTokens() {\r\n        return [this.getTokenValue()];\r\n    }\r\n}\n\nclass NotValue extends ValuePattern {\r\n    constructor(name, pattern) {\r\n        super(\"not-value\", name, [pattern]);\r\n        this.match = \"\";\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (!(this.children[0] instanceof Pattern)) {\r\n            throw new Error(\"Invalid Arguments: Expected the pattern to be a ValuePattern.\");\r\n        }\r\n        if (typeof this.name !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: Expected name to be a string.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.match = \"\";\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const mark = this.cursor.mark();\r\n            this.children[0].parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this.cursor.resolveError();\r\n                this.cursor.moveToMark(mark);\r\n                this.match += this.cursor.getChar();\r\n                break;\r\n            }\r\n            else {\r\n                this.cursor.moveToMark(mark);\r\n                break;\r\n            }\r\n        }\r\n        this._processMatch();\r\n    }\r\n    _processMatch() {\r\n        if (this.match.length === 0) {\r\n            const parseError = new ParseError(`Didn't find any characters that didn't match the ${this.children[0].name} pattern.`, this.mark, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n        else {\r\n            this.node = new ValueNode(\"not-value\", this.name, this.match, this.mark, this.mark);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new NotValue(name, this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return [];\r\n    }\r\n}\n\nclass OrValue extends ValuePattern {\r\n    constructor(name, patterns) {\r\n        super(\"or-value\", name, patterns);\r\n        this.index = 0;\r\n        this.errors = [];\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.parseError = null;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: OrValue needs to have more than one value pattern.\");\r\n        }\r\n        const hasOptionalChildren = this._children.some((pattern) => pattern instanceof OptionalValue);\r\n        if (hasOptionalChildren) {\r\n            throw new Error(\"OrValues cannot have optional values.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.errors = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                if (this.index + 1 < this._children.length) {\r\n                    this.cursor.resolveError();\r\n                    this.index++;\r\n                    this.cursor.moveToMark(this.mark);\r\n                }\r\n                else {\r\n                    this.node = null;\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                this.node = new ValueNode(\"or-value\", this.name, node.value, node.startIndex, node.endIndex);\r\n                this.cursor.index = this.node.endIndex;\r\n                this.cursor.addMatch(this, this.node);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new OrValue(name, this._children);\r\n    }\r\n    getTokens() {\r\n        const tokens = this._children.map((c) => c.getTokens());\r\n        const hasPrimitiveTokens = tokens.every((t) => t.every((value) => typeof value === \"string\"));\r\n        if (hasPrimitiveTokens && tokens.length > 0) {\r\n            return tokens.reduce((acc, t) => acc.concat(t), []);\r\n        }\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass RepeatValue extends ValuePattern {\r\n    constructor(name, pattern, divider) {\r\n        super(\"repeat-value\", name, divider != null ? [pattern, divider] : [pattern]);\r\n        this.nodes = [];\r\n        this.mark = 0;\r\n        this.node = null;\r\n        this._pattern = this.children[0];\r\n        this._divider = this.children[1];\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._pattern instanceof OptionalValue) {\r\n            throw new Error(\"Invalid Arguments: The pattern cannot be a optional pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.nodes = [];\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const node = this._pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this._processMatch();\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n                if (node.endIndex === this.cursor.lastIndex()) {\r\n                    this._processMatch();\r\n                    break;\r\n                }\r\n                this.cursor.next();\r\n                if (this._divider != null) {\r\n                    const mark = this.cursor.mark();\r\n                    const node = this._divider.parse(this.cursor);\r\n                    if (this.cursor.hasUnresolvedError()) {\r\n                        this.cursor.moveToMark(mark);\r\n                        this._processMatch();\r\n                        break;\r\n                    }\r\n                    else {\r\n                        this.nodes.push(node);\r\n                        this.cursor.next();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _processMatch() {\r\n        this.cursor.resolveError();\r\n        if (this.nodes.length === 0) {\r\n            const parseError = new ParseError(`Did not find a repeating match of ${this.name}.`, this.mark, this);\r\n            this.cursor.throwError(parseError);\r\n            this.node = null;\r\n        }\r\n        else {\r\n            const value = this.nodes.map((node) => node.value).join(\"\");\r\n            this.node = new ValueNode(\"repeat-value\", this.name, value, this.nodes[0].startIndex, this.nodes[this.nodes.length - 1].endIndex);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RepeatValue(name, this._pattern, this._divider);\r\n    }\r\n    getTokens() {\r\n        return this._pattern.getTokens();\r\n    }\r\n}\n\nclass CompositePattern extends Pattern {\r\n    constructor(type, name, children = []) {\r\n        super(type, name, children);\r\n    }\r\n}\n\nclass OptionalComposite extends CompositePattern {\r\n    constructor(pattern) {\r\n        super(\"optional-composite\", \"optional-composite\", [pattern]);\r\n    }\r\n    parse(cursor) {\r\n        const mark = cursor.mark();\r\n        this.mark = mark;\r\n        const node = this.children[0].parse(cursor);\r\n        if (cursor.hasUnresolvedError()) {\r\n            cursor.resolveError();\r\n            cursor.moveToMark(mark);\r\n            return null;\r\n        }\r\n        else {\r\n            if (node != null) {\r\n                cursor.addMatch(this, node);\r\n            }\r\n            return node;\r\n        }\r\n    }\r\n    clone() {\r\n        return new OptionalComposite(this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass AndComposite extends CompositePattern {\r\n    constructor(name, patterns = []) {\r\n        super(\"and-composite\", name, patterns);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: AndValue needs to have more than one value pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPatterns();\r\n        return this.node;\r\n    }\r\n    _tryPatterns() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this.cursor.moveToMark(this.mark);\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n            }\r\n            if (!this._next()) {\r\n                this._processValue();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    _next() {\r\n        if (this._hasMorePatterns()) {\r\n            if (this.cursor.hasNext()) {\r\n                // If the last result was a failed optional, then don't increment the cursor.\r\n                if (this.nodes[this.nodes.length - 1] != null) {\r\n                    this.cursor.next();\r\n                }\r\n                this.index++;\r\n                return true;\r\n            }\r\n            else if (this.nodes[this.nodes.length - 1] == null) {\r\n                this.index++;\r\n                return true;\r\n            }\r\n            this._assertRestOfPatternsAreOptional();\r\n            return false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _hasMorePatterns() {\r\n        return this.index + 1 < this._children.length;\r\n    }\r\n    _assertRestOfPatternsAreOptional() {\r\n        const areTheRestOptional = this.children.every((pattern, index) => {\r\n            return (index <= this.index ||\r\n                pattern instanceof OptionalValue ||\r\n                pattern instanceof OptionalComposite);\r\n        });\r\n        if (!areTheRestOptional) {\r\n            const parseError = new ParseError(`Could not match ${this.name} before string ran out.`, this.index, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n    }\r\n    _processValue() {\r\n        if (!this.cursor.hasUnresolvedError()) {\r\n            this.nodes = this.nodes.filter((node) => node != null);\r\n            const lastNode = this.nodes[this.nodes.length - 1];\r\n            const startIndex = this.mark;\r\n            const endIndex = lastNode.endIndex;\r\n            this.node = new CompositeNode(\"and-composite\", this.name, startIndex, endIndex);\r\n            this.node.children = this.nodes;\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this.node = null;\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AndComposite(name, this._children);\r\n    }\r\n    getTokens() {\r\n        let tokens = [];\r\n        for (let x = 0; x < this._children.length; x++) {\r\n            const child = this._children[x];\r\n            if (child instanceof OptionalValue ||\r\n                child instanceof OptionalComposite) {\r\n                tokens = tokens.concat(child.getTokens());\r\n            }\r\n            else {\r\n                tokens = tokens.concat(child.getTokens());\r\n                break;\r\n            }\r\n        }\r\n        return tokens;\r\n    }\r\n}\n\nclass OrComposite extends CompositePattern {\r\n    constructor(name, patterns) {\r\n        super(\"or-composite\", name, patterns);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: OrValue needs to have more than one value pattern.\");\r\n        }\r\n        const hasOptionalChildren = this._children.some((pattern) => pattern instanceof OptionalValue || pattern instanceof OptionalComposite);\r\n        if (hasOptionalChildren) {\r\n            throw new Error(\"OrComposite cannot have optional values.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = null;\r\n        this.index = 0;\r\n        this.node = null;\r\n        this.mark = cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        if (this.node != null) {\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            this.node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                if (this.index + 1 < this._children.length) {\r\n                    this.cursor.resolveError();\r\n                    this.index++;\r\n                    this.cursor.moveToMark(this.mark);\r\n                }\r\n                else {\r\n                    this.node = null;\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                this.cursor.index = this.node.endIndex;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new OrComposite(name, this._children);\r\n    }\r\n    getTokens() {\r\n        const tokens = this._children.map((c) => c.getTokens());\r\n        const hasPrimitiveTokens = tokens.every((t) => t.every((value) => typeof value === \"string\"));\r\n        if (hasPrimitiveTokens && tokens.length > 0) {\r\n            return tokens.reduce((acc, t) => acc.concat(t), []);\r\n        }\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass RepeatComposite extends CompositePattern {\r\n    constructor(name, pattern, divider) {\r\n        super(\"repeat-composite\", name, divider != null ? [pattern, divider] : [pattern]);\r\n        this.nodes = [];\r\n        this.mark = 0;\r\n        this.node = null;\r\n        this._pattern = this.children[0];\r\n        this._divider = this.children[1];\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._pattern instanceof OptionalComposite) {\r\n            throw new Error(\"Invalid Arguments: The pattern cannot be a optional pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.nodes = [];\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const node = this._pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError() || node == null) {\r\n                this._processMatch();\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n                if (node.endIndex === this.cursor.lastIndex()) {\r\n                    this._processMatch();\r\n                    break;\r\n                }\r\n                this.cursor.next();\r\n                if (this._divider != null) {\r\n                    const mark = this.cursor.mark();\r\n                    const node = this._divider.parse(this.cursor);\r\n                    if (this.cursor.hasUnresolvedError() || node == null) {\r\n                        this.cursor.moveToMark(mark);\r\n                        this._processMatch();\r\n                        break;\r\n                    }\r\n                    else {\r\n                        this.nodes.push(node);\r\n                        this.cursor.next();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _processMatch() {\r\n        this.cursor.resolveError();\r\n        if (this.nodes.length === 0) {\r\n            this.cursor.throwError(new ParseError(`Did not find a repeating match of ${this.name}.`, this.mark, this));\r\n            this.node = null;\r\n        }\r\n        else {\r\n            this.node = new CompositeNode(\"repeat-composite\", this.name, this.nodes[0].startIndex, this.nodes[this.nodes.length - 1].endIndex);\r\n            this.node.children = this.nodes;\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RepeatComposite(name, this._pattern, this._divider);\r\n    }\r\n    getTokens() {\r\n        return this._pattern.getTokens();\r\n    }\r\n}\n\nclass RecursivePattern extends Pattern {\r\n    constructor(name) {\r\n        super(\"recursive\", name);\r\n        this.pattern = null;\r\n        this.isRecursing = false;\r\n    }\r\n    getPattern() {\r\n        return this._climb(this.parent, (pattern) => {\r\n            if (pattern == null) {\r\n                return false;\r\n            }\r\n            return pattern.name === this.name;\r\n        });\r\n    }\r\n    _climb(pattern, isMatch) {\r\n        if (isMatch(pattern)) {\r\n            return pattern;\r\n        }\r\n        else {\r\n            if (pattern && pattern.parent != null) {\r\n                return this._climb(pattern.parent, isMatch);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        if (this.pattern == null) {\r\n            const pattern = this.getPattern();\r\n            if (pattern == null) {\r\n                cursor.throwError(new ParseError(`Couldn't find parent pattern to recursively parse, with the name ${this.name}.`, cursor.index, this));\r\n                return null;\r\n            }\r\n            this.pattern = pattern.clone();\r\n            this.pattern.parent = this;\r\n        }\r\n        const node = this.pattern.parse(cursor);\r\n        if (!cursor.hasUnresolvedError() && node != null) {\r\n            cursor.addMatch(this, node);\r\n        }\r\n        return node;\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RecursivePattern(name);\r\n    }\r\n    getTokenValue() {\r\n        var _a;\r\n        return ((_a = this.getPattern()) === null || _a === void 0 ? void 0 : _a.getTokenValue()) || null;\r\n    }\r\n    getTokens() {\r\n        var _a;\r\n        if (!this.isRecursing) {\r\n            this.isRecursing = true;\r\n            const tokens = ((_a = this.getPattern()) === null || _a === void 0 ? void 0 : _a.getTokens()) || [];\r\n            this.isRecursing = false;\r\n            return tokens;\r\n        }\r\n        return [];\r\n    }\r\n}\n\nclass TextSuggester {\r\n    constructor() {\r\n        this.cursor = null;\r\n        this.result = null;\r\n        this.text = \"\";\r\n        this.match = null;\r\n        this.error = null;\r\n        this.patternMatch = null;\r\n        this.matchedText = \"\";\r\n        this.rootPattern = null;\r\n        this.tokens = {\r\n            startIndex: 0,\r\n            values: [],\r\n        };\r\n        this.options = [];\r\n        this.parseStack = [];\r\n    }\r\n    suggest(text, pattern) {\r\n        var _a, _b, _c;\r\n        this.reset();\r\n        this.text = text;\r\n        this.rootPattern = pattern;\r\n        // If no text all options are available.\r\n        if (text.length === 0) {\r\n            return {\r\n                pattern: null,\r\n                astNode: null,\r\n                match: null,\r\n                error: null,\r\n                options: {\r\n                    startIndex: 0,\r\n                    values: pattern.getTokens(),\r\n                },\r\n                isComplete: false,\r\n                parseStack: [],\r\n            };\r\n        }\r\n        this.parse();\r\n        this.saveParseStack();\r\n        this.saveMatchedText();\r\n        this.saveMatch();\r\n        this.saveError();\r\n        this.saveOptions();\r\n        this.saveNextToken();\r\n        return {\r\n            pattern: ((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.pattern) || null,\r\n            astNode: ((_b = this.patternMatch) === null || _b === void 0 ? void 0 : _b.astNode) || null,\r\n            match: this.match,\r\n            error: this.error,\r\n            options: this.tokens,\r\n            isComplete: ((_c = this.cursor) === null || _c === void 0 ? void 0 : _c.didSuccessfullyParse()) || false,\r\n            parseStack: this.parseStack,\r\n        };\r\n    }\r\n    reset() {\r\n        this.cursor = null;\r\n        this.result = null;\r\n        this.text = \"\";\r\n        this.match = null;\r\n        this.error = null;\r\n        this.patternMatch = null;\r\n        this.matchedText = \"\";\r\n        this.rootPattern = null;\r\n        this.tokens = {\r\n            startIndex: 0,\r\n            values: [],\r\n        };\r\n        this.options = [];\r\n        this.parseStack = [];\r\n    }\r\n    parse() {\r\n        var _a;\r\n        this.rootPattern = this.rootPattern;\r\n        this.cursor = new Cursor(this.text || \"\");\r\n        this.cursor.startRecording();\r\n        this.result = ((_a = this.rootPattern) === null || _a === void 0 ? void 0 : _a.parse(this.cursor)) || null;\r\n        this.patternMatch = this.cursor.lastMatch;\r\n    }\r\n    saveParseStack() {\r\n        var _a;\r\n        this.parseStack = ((_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.getLastParseStack()) || [];\r\n    }\r\n    saveMatchedText() {\r\n        var _a, _b;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode) != null) {\r\n            this.matchedText =\r\n                ((_b = this.text) === null || _b === void 0 ? void 0 : _b.substring(0, this.patternMatch.astNode.endIndex + 1)) || \"\";\r\n        }\r\n    }\r\n    saveMatch() {\r\n        var _a;\r\n        const node = (_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode;\r\n        if (node == null) {\r\n            this.match = null;\r\n            return;\r\n        }\r\n        let endIndex = this.matchedText.length - 1;\r\n        this.match = {\r\n            text: this.matchedText,\r\n            startIndex: 0,\r\n            endIndex: endIndex,\r\n        };\r\n    }\r\n    saveError() {\r\n        var _a;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode) == null) {\r\n            this.error = {\r\n                startIndex: 0,\r\n                endIndex: this.text.length - 1,\r\n                text: this.text,\r\n            };\r\n            return this;\r\n        }\r\n        if (this.patternMatch != null &&\r\n            this.text.length > this.matchedText.length) {\r\n            const difference = this.text.length - this.matchedText.length;\r\n            const startIndex = this.patternMatch.astNode.endIndex + 1;\r\n            const endIndex = startIndex + difference - 1;\r\n            this.error = {\r\n                startIndex: startIndex,\r\n                endIndex: endIndex,\r\n                text: this.text.substring(startIndex, endIndex + 1),\r\n            };\r\n            return;\r\n        }\r\n        else {\r\n            this.error = null;\r\n            return;\r\n        }\r\n    }\r\n    saveNextToken() {\r\n        var _a, _b, _c, _d;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.pattern) === this.rootPattern &&\r\n            ((_b = this.cursor) === null || _b === void 0 ? void 0 : _b.didSuccessfullyParse())) {\r\n            this.tokens = null;\r\n            return;\r\n        }\r\n        if (((_c = this.patternMatch) === null || _c === void 0 ? void 0 : _c.astNode) == null) {\r\n            let options = (_d = this.rootPattern) === null || _d === void 0 ? void 0 : _d.getTokens();\r\n            const parts = this.text.split(\" \").filter((part) => {\r\n                return part.length > 0;\r\n            });\r\n            options = options === null || options === void 0 ? void 0 : options.filter((option) => {\r\n                return parts.some((part) => {\r\n                    return option.indexOf(part) > -1;\r\n                });\r\n            });\r\n            if ((options === null || options === void 0 ? void 0 : options.length) === 0) {\r\n                this.tokens = null;\r\n                return;\r\n            }\r\n            this.tokens = {\r\n                startIndex: 0,\r\n                values: options || [],\r\n            };\r\n            return;\r\n        }\r\n        const options = this.options;\r\n        let startIndex = this.matchedText.length;\r\n        if (this.matchedText.length < this.text.length) {\r\n            const leftOver = this.text.substring(this.matchedText.length);\r\n            const partialMatchOptions = options\r\n                .filter((option) => {\r\n                return option.indexOf(leftOver) === 0;\r\n            })\r\n                .map((option) => {\r\n                return option.substring(leftOver.length);\r\n            });\r\n            if (partialMatchOptions.length === 0) {\r\n                this.tokens = null;\r\n                return;\r\n            }\r\n            else {\r\n                if (this.match == null) {\r\n                    return;\r\n                }\r\n                this.match = {\r\n                    text: this.match.text + leftOver,\r\n                    startIndex: this.match.startIndex,\r\n                    endIndex: this.match.endIndex + leftOver.length,\r\n                };\r\n                this.error = null;\r\n                this.tokens = {\r\n                    startIndex: this.match.endIndex + 1,\r\n                    values: partialMatchOptions,\r\n                };\r\n                return;\r\n            }\r\n        }\r\n        this.tokens = {\r\n            startIndex,\r\n            values: options,\r\n        };\r\n    }\r\n    saveOptions() {\r\n        var _a;\r\n        const furthestMatches = (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.astNodes.reduce((acc, node, index) => {\r\n            if (node.endIndex === acc.furthestTextIndex) {\r\n                acc.nodeIndexes.push(index);\r\n            }\r\n            else if (node.endIndex > acc.furthestTextIndex) {\r\n                acc.furthestTextIndex = node.endIndex;\r\n                acc.nodeIndexes = [index];\r\n            }\r\n            return acc;\r\n        }, { furthestTextIndex: -1, nodeIndexes: [] });\r\n        const matches = furthestMatches.nodeIndexes.reduce((acc, index) => {\r\n            var _a;\r\n            const pattern = (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.patterns[index];\r\n            const tokens = pattern === null || pattern === void 0 ? void 0 : pattern.getNextTokens();\r\n            tokens === null || tokens === void 0 ? void 0 : tokens.forEach((token) => {\r\n                acc[token] = true;\r\n            });\r\n            return acc;\r\n        }, {});\r\n        this.options = Object.keys(matches);\r\n    }\r\n    static suggest(text, pattern) {\r\n        return new TextSuggester().suggest(text, pattern);\r\n    }\r\n}\n\nexport { AndComposite, AndValue, AnyOfThese, CompositeNode, CompositePattern, Cursor, Literal, Node, NotValue, OptionalComposite, OptionalValue, OrComposite, OrValue, ParseError, Pattern, RecursivePattern, RegexValue, RepeatComposite, RepeatValue, TextSuggester, ValueNode, ValuePattern };\n//# sourceMappingURL=index.esm.js.map\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst divider = new RegexValue(\"divider\", \"\\\\s*[,]\\\\s*\");\n\nexport default divider;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst number = new RegexValue(\n  \"number\",\n  \"[-+]?[0-9]*[.]?[0-9]+([eE][-+]?[0-9]+)?\"\n);\n\nexport default number;\n","import { AndComposite, RegexValue } from \"clarity-pattern-parser\";\n\nimport number from \"./number\";\n\nconst unitType = new RegexValue(\"unit-type\", \"[a-zA-Z%]+\");\nconst unit = new AndComposite(\"unit\", [number, unitType]);\n\nexport default unit;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst hex = new RegexValue(\"hex\", \"#[0-9a-fA-F]{6}|#[0-9a-fA-F]{3}\");\n\nexport default hex;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst name = new RegexValue(\"name\", \"[a-zA-Z]+[a-zA-Z0-9_-]*\");\n\nexport default name;\n","import { Literal, RepeatValue } from \"clarity-pattern-parser\";\nimport { OptionalValue } from \"clarity-pattern-parser\";\n\nconst space = new Literal(\"optional-space\", \" \");\nconst spaces = new RepeatValue(\"optional-spaces\", space);\nconst optionalSpaces = new OptionalValue(spaces);\n\nexport default optionalSpaces;\n","import {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n  RecursivePattern,\n  OptionalComposite\n} from \"clarity-pattern-parser\";\n\nimport name from \"./name\";\nimport optionalSpaces from \"./optionalSpaces\";\nimport divider from \"./divider\";\n\nconst openParen = new Literal(\"open-paren\", \"(\");\nconst closeParen = new Literal(\"close-paren\", \")\");\nconst values = new RecursivePattern(\"values\");\nconst args = new RepeatComposite(\"arguments\", values, divider);\nconst optionalArgs = new OptionalComposite(args);\n\nconst method = new AndComposite(\"method\", [\n  name,\n  openParen,\n  optionalSpaces,\n  optionalArgs,\n  optionalSpaces,\n  closeParen\n]);\n\nexport default method;\n","import divider from \"./divider\";\nimport number from \"./number\";\nimport optionalSpaces from \"./optionalSpaces\";\n\nimport {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n} from \"clarity-pattern-parser\";\n\nconst openBracket = new Literal(\"open-square-bracket\", \"[\");\nconst closeBracket = new Literal(\"close-square-bracket\", \"]\");\nconst items = new RepeatComposite(\"items\", number, divider);\n\nconst array = new AndComposite(\"array\", [\n  openBracket,\n  optionalSpaces,\n  items,\n  optionalSpaces,\n  closeBracket,\n]);\n\nexport default array;\n","import { OrComposite } from \"clarity-pattern-parser\";\nimport unit from \"./unit\";\nimport hex from \"./hex\";\nimport number from \"./number\";\nimport method from \"./method\";\nimport name from \"./name\";\nimport array from \"./array\";\n\nconst value = new OrComposite(\"value\", [\n  array,\n  hex,\n  method,\n  unit,\n  number,\n  name,\n]);\n\nexport default value;\n","import { Literal, RepeatValue } from \"clarity-pattern-parser\";\n\nconst space = new Literal(\"space\", \" \");\nconst spaces = new RepeatValue(\"spaces\", space);\n\nexport default spaces;\n","import { RepeatComposite } from \"clarity-pattern-parser\";\nimport value from \"./value\";\nimport spaces from \"./spaces\";\n\nconst values = new RepeatComposite(\"values\", value, spaces);\n\nexport default values;\n","import { RepeatComposite } from \"clarity-pattern-parser\";\nimport divider from \"./divider\";\nimport values from \"./values\";\n\nconst cssValue = new RepeatComposite(\"css-value\", values, divider);\n\nexport default cssValue;\n","import { Node, ValueNode } from \"clarity-pattern-parser\";\nimport { CompositeNode } from \"clarity-pattern-parser\";\n\nconst hexRegEx = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})|([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i;\n\nexport default class HexColor {\n  public hexString: any;\n  public rgba: any;\n\n  constructor(hexString: string) {\n    this.setHex(hexString);\n  }\n\n  setHex(hexString: string) {\n    this.hexString = hexString;\n    this.normalizeHex();\n    this.saveRgba();\n  }\n\n  saveRgba() {\n    const hex = this.hexString;\n    hexRegEx.lastIndex = 0;\n    const result = hexRegEx.exec(hex);\n    this.rgba = result\n      ? [\n          parseInt(result[1], 16),\n          parseInt(result[2], 16),\n          parseInt(result[3], 16),\n          1,\n        ]\n      : [0, 0, 0, 1];\n  }\n\n  toComplexNode() {\n    const children = this.rgba\n      .map((number: number) => {\n        const valuesNode = new CompositeNode(\"repeat-composite\", \"values\");\n        valuesNode.children.push(\n          new ValueNode(\"regex-value\", \"number\", number.toString())\n        );\n\n        return valuesNode;\n      })\n      .reduce((acc: Node[], valueNode: Node) => {\n        acc.push(valueNode);\n        acc.push(new ValueNode(\"regex-value\", \"divider\", \", \"));\n        return acc;\n      }, []);\n\n    const node = new CompositeNode(\"and-composite\", \"method\");\n    const name = new ValueNode(\"regex-value\", \"name\", \"rgba\");\n    const openParen = new ValueNode(\"literal\", \"open-paren\", \"(\");\n    const args = new CompositeNode(\"repeat-composite\", \"arguments\");\n    const closeParen = new ValueNode(\"literal\", \"close-paren\", \")\");\n\n    args.children = children;\n\n    node.children.push(name, openParen, args, closeParen);\n\n    return node;\n  }\n\n  toValueNode() {\n    return new ValueNode(\"literal\", \"hex\", this.hexString);\n  }\n\n  toRgbString() {\n    return `rgb(${this.rgba[0]},${this.rgba[1]},${this.rgba[2]})`;\n  }\n\n  normalizeHex() {\n    if (this.hexString.length === 4) {\n      this.hexString = this.hexString + this.hexString.substring(1);\n    }\n  }\n\n  numberToHex(number: number) {\n    if (number > 255) {\n      number = 255;\n    }\n\n    if (number < 0) {\n      number = 0;\n    }\n\n    let hex = number.toString(16);\n    if (hex.length < 2) {\n      hex = \"0\" + hex;\n    }\n\n    return hex;\n  }\n\n  toHexString() {\n    const rgbArray = this.rgba;\n    const red = this.numberToHex(rgbArray[0]);\n    const green = this.numberToHex(rgbArray[1]);\n    const blue = this.numberToHex(rgbArray[2]);\n\n    return `#${red}${green}${blue}`;\n  }\n}\n","import Visitor from \"./Visitor\";\nimport HexColor from \"./HexColor\";\nimport { Node } from \"clarity-pattern-parser\";\n\nconst filterOutSpaces = (child: Node) => child.name !== \"optional-spaces\";\n\nexport default class TreeNormalizer {\n  public visitor: any;\n\n  constructor() {\n    this.visitNode = this.visitNode.bind(this);\n    this.visitor = new Visitor(this.visitNode);\n  }\n\n  visitNode(node: Node) {\n    if (node.isComposite) {\n      this.removeOptionalSpaces(node);\n      this.replaceHex(node);\n      this.removeUnnecessaryDividers(node);\n      this.removeUnnecessaryValuesSpaces(node);\n    }\n\n    this.collapseWhiteSpace(node);\n    this.removeSpacesAroundDividers(node);\n  }\n\n  collapseWhiteSpace(node: Node) {\n    if (node.name === \"spaces\") {\n      node.value = \" \";\n    }\n  }\n\n  removeSpacesAroundDividers(node: Node) {\n    if (node.name === \"divider\") {\n      node.value = node.value.trim() + \" \";\n    }\n  }\n\n  removeUnnecessaryDividers(node: Node) {\n    const children = node.children;\n\n    while (\n      children.length > 0 &&\n      children[children.length - 1].name === \"divider\"\n    ) {\n      children.pop();\n    }\n  }\n\n  removeUnnecessaryValuesSpaces(node: Node) {\n    const children = node.children;\n\n    while (\n      node.name === \"values\" &&\n      children.length > 0 &&\n      children[children.length - 1].name === \"spaces\"\n    ) {\n      children.pop();\n    }\n  }\n\n  removeOptionalSpaces(node: Node) {\n    node.children = node.children.filter(filterOutSpaces);\n  }\n\n  replaceHex(node: Node) {\n    node.children = node.children.map((child) => {\n      if (child.name === \"hex\") {\n        const hexColor = new HexColor(child.value);\n        return hexColor.toComplexNode();\n      }\n      return child;\n    });\n  }\n\n  normalize(node: Node) {\n    this.visitor.visitDown(node);\n    return node;\n  }\n}\n","import cssValue from \"./patterns/cssValue\";\nimport TreeNormalizer from \"./TreeNormalizer\";\nimport TreeUtility from \"./TreeUtility\";\nimport { Cursor, Node } from \"clarity-pattern-parser\";\n\nconst treeUtility = new TreeUtility();\nconst treeNormalizer = new TreeNormalizer();\n\nexport default class ParsedValue {\n  public value: string;\n  public graph: Node;\n  public graphHash: string;\n\n  constructor(value: string, graph?: Node, graphHash?: string) {\n    this.value = value;\n\n    if (typeof graph === \"undefined\") {\n      const node = cssValue.parse(new Cursor(value));\n      if (node == null) {\n        throw new Error(\"Couldn't parse css value.\");\n      }\n\n      this.graph = treeNormalizer.normalize(node);\n      treeUtility.convertNumberNodesToNumberValues(this.graph);\n    } else {\n      this.graph = graph;\n    }\n\n    if (typeof graphHash === \"undefined\") {\n      this.graphHash = treeUtility.sequenceHash(this.graph).toString();\n    } else {\n      this.graphHash = graphHash;\n    }\n  }\n\n  clone() {\n    return new ParsedValue(this.value, this.graph.clone(), this.graphHash);\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport { KeyframeConfig } from \"./Keyframe\";\nimport { SimpleKeyframeConfig } from \"./KeyframeUtility\";\nimport ParsedValue from \"./ParsedValue\";\n\nexport default class KeyframeConfigValidator {\n\tpublic config: any;\n\n  constructor() {\n    this.config = null;\n  }\n\n  setConfig(config: KeyframeConfig | SimpleKeyframeConfig) {\n    this.config = config;\n  }\n\n  isSimpleConfig() {\n    return this.hasValidToAsString();\n  }\n\n  validateConfig() {\n    if (this.config == null) {\n      throw new Error(\n        `Invalid Arguments: The \"config\" cannot be null or undefined.`\n      );\n    }\n  }\n\n  validate(config: KeyframeConfig) {\n    this.setConfig(config);\n    this.validateName();\n    this.validateProperty();\n    this.validateToAsParsedValue();\n    this.validateControlsAsParsedValues();\n    this.validateFromAsParsedValue();\n    this.validateStartAt();\n    this.validateEndAt();\n    this.validateEasingFunction();\n    this.validateNodes();\n  }\n\n  validateName() {\n    this.validateConfig();\n\n    if (!this.hasValidName()) {\n      throw new Error(\n        `Invalid Arguments: The \"name\" property needs to be an string.`\n      );\n    }\n  }\n\n  hasValidName() {\n    return typeof this.config.name === \"string\";\n  }\n\n  validateProperty() {\n    this.validateConfig();\n\n    if (!this.hasValidProperty()) {\n      throw new Error(`The \"property\" property needs to be a string.`);\n    }\n  }\n\n  hasValidProperty() {\n    return typeof this.config.property === \"string\";\n  }\n\n  validateToAsString() {\n    this.validateConfig();\n\n    if (!this.hasValidToAsString()) {\n      throw new Error(\n        `The \"to\" property needs to be a string, but found ${this.config.to}.`\n      );\n    }\n  }\n\n  hasValidToAsString() {\n    return typeof this.config.to === \"string\";\n  }\n\n  validateToAsParsedValue() {\n    this.validateConfig();\n\n    if (!this.hasValidToAsParsedValue()) {\n      throw new Error(\n        `The \"to\" property needs to be a ParsedValue, but found ${this.config.to}.`\n      );\n    }\n  }\n\n  hasValidToAsParsedValue() {\n    return this.config.to instanceof ParsedValue;\n  }\n\n  validateFromAsString() {\n    this.validateConfig();\n\n    if (typeof this.config.from !== \"string\") {\n      throw new Error(\n        `The \"from\" property needs to be a string, but found ${this.config.from}.`\n      );\n    }\n  }\n\n  hasValidFromAsString() {\n    return typeof this.config.from === \"string\";\n  }\n\n  validateFromAsParsedValue() {\n    this.validateConfig();\n\n    if (!this.hasValidFromAsParsedValue()) {\n      throw new Error(\n        `The \"from\" property needs to be a ParsedValue, but found ${this.config.from}.`\n      );\n    }\n  }\n\n  hasValidFromAsParsedValue() {\n    return this.config.from instanceof ParsedValue;\n  }\n\n  validateControlsAsStrings() {\n    this.validateConfig();\n\n    if (!this.hasValidControlsAsStrings()) {\n      throw new Error(\n        `The \"controls\" property needs to be made of strings, but found ${this.config.controls}.`\n      );\n    }\n  }\n\n  hasValidControlsAsStrings() {\n    return (\n      Array.isArray(this.config.controls) &&\n      this.config.controls.every((control: string) => typeof control === \"string\")\n    );\n  }\n\n  validateControlsAsParsedValues() {\n    this.validateConfig();\n\n    if (!this.hasValidControlsAsParsedValues()) {\n      throw new Error(\n        `The \"controls\" property needs to be made of ParsedValues, but found ${this.config.controls}.`\n      );\n    }\n  }\n\n  hasValidControlsAsParsedValues() {\n    return this.config.controls.every(\n      (control: ParsedValue) => control instanceof ParsedValue\n    );\n  }\n\n  validateStartAt() {\n    this.validateConfig();\n\n    if (!this.hasValidStartAt) {\n      throw new Error(\n        `The \"startAt\" property must be a number between 0 and 1.`\n      );\n    }\n  }\n\n  hasValidStartAt() {\n    return (\n      typeof this.config.startAt === \"number\" &&\n      this.config.startAt >= 0 &&\n      this.config.startAt <= 1\n    );\n  }\n\n  validateEndAt() {\n    this.validateConfig();\n\n    if (!this.hasValidEndAt()) {\n      throw new Error(`The \"endAt\" property must be a number between 0 and 1.`);\n    }\n  }\n\n  hasValidEndAt() {\n    return (\n      typeof this.config.endAt === \"number\" &&\n      this.config.endAt >= 0 &&\n      this.config.endAt <= 1\n    );\n  }\n\n  validateEasingString() {\n    this.validateConfig();\n\n    if (!this.hasValidEasingString()) {\n      throw new Error(`The \"easing\" property must be a string.`);\n    }\n  }\n\n  hasValidEasingString() {\n    return typeof this.config.easing === \"string\";\n  }\n\n  validateEasingFunction() {\n    this.validateConfig();\n\n    if (!this.hasValidEasingFunction()) {\n      throw new Error(`The \"easing\" property must be a function.`);\n    }\n  }\n\n  hasValidEasingFunction() {\n    return typeof this.config.easing === \"function\";\n  }\n\n  validateNodes() {\n    this.validateConfig();\n    const config = this.config;\n\n    if (!this.areGraphStructuresEqual()) {\n      throw new Error(\n        `Invalid Keyframe: The value types that are being animated do not match. From: ${JSON.stringify(\n          config.from.value\n        )}, To:${JSON.stringify(config.to.value)}, Controls: ${JSON.stringify(\n          config.controls.map((v: Node) => v.value)\n        )}`\n      );\n    }\n  }\n\n  areGraphStructuresEqual() {\n    let allStructuresAreEqual = true;\n    const config = this.config;\n\n    if (config.to.graphHash !== config.from.graphHash) {\n      allStructuresAreEqual = false;\n    }\n\n    for (let x = 0; x < config.controls.length; x++) {\n      const value = config.controls[x];\n\n      if (value.graphHash !== config.from.graphHash) {\n        allStructuresAreEqual = false;\n        break;\n      }\n    }\n\n    return allStructuresAreEqual;\n  }\n}\n","import easings, {\n  EasingFunction,\n  EasingNames as EasingAsStrings,\n} from \"./easings\";\nimport { KeyframeConfig } from \"./Keyframe\";\nimport KeyframeConfigValidator from \"./KeyframeConfigValidator\";\nimport ParsedValue from \"./ParsedValue\";\n\nconst validator = new KeyframeConfigValidator();\n\nexport interface SimpleKeyframeConfig {\n  name: string;\n  property: string;\n  to: string;\n  from: string;\n  endAt: number;\n  startAt: number;\n  controls?: string[];\n  easing?: EasingAsStrings | EasingFunction;\n  value?: string;\n}\n\nexport default class KeyframeUtility {\n  public config!: SimpleKeyframeConfig;\n  public result!: KeyframeConfig;\n\n  private _setConfig(config: SimpleKeyframeConfig) {\n    this.config = config;\n    this.result = {} as any;\n    validator.setConfig(config);\n  }\n\n  normalizeConfig(config: SimpleKeyframeConfig) {\n    this._setConfig(config);\n    this._normalizeName();\n    this._normalizeProperty();\n    this._normalizeValue();\n    this._normalizeFrom();\n    this._normalizeControls();\n    this._normalizeTo();\n    this._normalizeStartAt();\n    this._normalizeEndAt();\n    this._normalizeEasing();\n\n    return this.result;\n  }\n\n  private _normalizeName() {\n    this.result.name = this.config.name;\n  }\n\n  private _normalizeProperty() {\n    this.result.property = this.config.property;\n  }\n\n  private _normalizeValue() {\n    if (this.config.value != null) {\n      this.config.to = this.config.value;\n      this.config.from = this.config.value;\n    }\n  }\n\n  private _normalizeFrom() {\n    if (validator.hasValidFromAsString()) {\n      this.result.from = new ParsedValue(this.config.from);\n    } else {\n      validator.validateFromAsString();\n    }\n  }\n\n  private _normalizeControls() {\n    if (!Array.isArray(this.config.controls)) {\n      this.config.controls = [];\n    }\n\n    if (validator.hasValidControlsAsStrings()) {\n      this.result.controls = this.config.controls.map(\n        (control: string) => new ParsedValue(control)\n      );\n    } else {\n      validator.validateControlsAsStrings();\n    }\n  }\n\n  private _normalizeTo() {\n    if (validator.hasValidToAsString()) {\n      this.result.to = new ParsedValue(this.config.to);\n    } else {\n      validator.validateToAsString();\n    }\n  }\n\n  private _normalizeStartAt() {\n    if (validator.hasValidStartAt()) {\n      this.result.startAt = this.config.startAt;\n    } else {\n      this.result.startAt = 0;\n    }\n  }\n\n  private _normalizeEndAt() {\n    if (validator.hasValidEndAt()) {\n      this.result.endAt = this.config.endAt;\n    } else {\n      this.result.endAt = 1;\n    }\n  }\n\n  private _normalizeEasing() {\n    if (\n      !validator.hasValidEasingString() &&\n      !validator.hasValidEasingFunction()\n    ) {\n      this.result.easing = easings.linear;\n    } else if (validator.hasValidEasingString()) {\n      this.result.easing =\n        (easings as any)[this.config.easing as EasingAsStrings] ||\n        easings.linear;\n    } else if (validator.hasValidEasingFunction()) {\n      this.result.easing = this.config.easing as EasingFunction;\n    }\n  }\n}\n","import easings, { EasingFunction } from \"./easings\";\nimport KeyframeConfigValidator from \"./KeyframeConfigValidator\";\nimport KeyframeUtility, { SimpleKeyframeConfig } from \"./KeyframeUtility\";\nimport ParsedValue from \"./ParsedValue\";\n\nconst validator = new KeyframeConfigValidator();\nconst utility = new KeyframeUtility();\n\nexport interface KeyframeConfig {\n  name: string;\n  property: string;\n  to: ParsedValue;\n  from: ParsedValue;\n  endAt: number;\n  startAt: number;\n  controls?: ParsedValue[];\n  easing?: EasingFunction;\n}\n\nexport default class Keyframe {\n  public name: string;\n  public property: string;\n  public to: ParsedValue;\n  public from: ParsedValue;\n  public result: ParsedValue;\n  public startAt: number;\n  public endAt: number;\n  public controls: ParsedValue[];\n  public easing: EasingFunction;\n\n  constructor(config: KeyframeConfig) {\n    validator.setConfig(config);\n    validator.validate(config);\n\n    this.name = config.name;\n    this.property = config.property;\n    this.to = config.to;\n    this.from = config.from;\n    this.result = config.from.clone();\n    this.startAt = config.startAt;\n    this.endAt = config.endAt;\n    this.controls = config.controls || [];\n    this.easing = config.easing || easings.linear;\n  }\n\n  static fromSimpleConfig(config: SimpleKeyframeConfig) {\n    return new Keyframe(utility.normalizeConfig(config));\n  }\n}\n","import BezierCurve from \"./BezierCurve\";\n\nconst easingOutMap = {\n  linear: [1],\n  quad: [1, 1],\n  cubic: [1, 1, 1],\n  quart: [1, 1, 1, 1],\n  back: [0, 0, -0.5],\n  quint: [1, 1, 1, 1, 1],\n  expo: [1, 1, 1, 1, 1, 1],\n  circ: [0.65, 0.75, 0.85, 0.95, 1, 1, 1, 1],\n  elastic: [2, 2, -1, 1.5, 1.5, 0.75, 1.25, 0.85, 1, 1, 1],\n};\n\nconst easingInMap = {\n  linear: [0],\n  quad: [0, 0],\n  cubic: [0, 0, 0],\n  quart: [0, 0, 0, 0],\n  back: [1.5, 1, 1],\n  quint: [0, 0, 0, 0, 0],\n  expo: [0, 0, 0, 0, 0, 0],\n  circ: [0, 0, 0, 0, 0.05, 0.15, 0.25, 0.35],\n  elastic: [0, 0, 0, 0.15, -0.25, 0.25, -0.5, -0.5, 2, -1, -1],\n};\n\nexport type IEasingNames =\n  | \"quad\"\n  | \"cubic\"\n  | \"quart\"\n  | \"back\"\n  | \"quint\"\n  | \"expo\"\n  | \"circ\"\n  | \"elastic\"\n  | \"linear\";\n\nexport default function createDynamicEasing(\n  easingIn: IEasingNames,\n  easingOut: IEasingNames\n) {\n  const points = [...easingInMap[easingIn], ...easingOutMap[easingOut]];\n  const bezierCurve = new BezierCurve(points);\n\n  return (percentage: number) => {\n    return bezierCurve.valueAt(percentage);\n  };\n}\n","import Animator from \"./Animator\";\nimport Keyframe from \"./Keyframe\";\nimport { SimpleKeyframeConfig } from \"./KeyframeUtility\";\nimport ParsedValue from \"./ParsedValue\";\nimport createDynamicEasing, { IEasingNames } from \"./createDynamicEasing\";\n\nconst sortAsc = (animatorA: Animator, animatorB: Animator) => {\n  return animatorA.keyframe.startAt - animatorB.keyframe.startAt;\n};\n\ntype AnimationState = {\n  [key: string]: { [key: string]: ParsedValue };\n};\n\nexport interface IComplexKeyframeValue {\n  value: string;\n  controlsIn?: string[];\n  controlsOut?: string[];\n  easeIn?: IEasingNames;\n  easeOut?: IEasingNames;\n}\n\nexport type IAnimationKeyframeValue = string | IComplexKeyframeValue;\n\nexport interface IAnimationKeyframes {\n  [key: string]: {\n    [key: string]: IAnimationKeyframeValue;\n  };\n  from: {\n    [key: string]: IAnimationKeyframeValue;\n  };\n  to: {\n    [key: string]: IAnimationKeyframeValue;\n  };\n}\n\nconst sortPercentages = (keyA: string, keyB: string) => {\n  if (keyA === \"from\") {\n    return -1;\n  }\n\n  if (keyB === \"from\") {\n    return 1;\n  }\n\n  if (keyA === \"to\") {\n    return 1;\n  }\n\n  if (keyB === \"to\") {\n    return -1;\n  }\n\n  const keyANumber = parseInt(keyA, 10);\n  const keyBNumber = parseInt(keyB, 10);\n\n  if (keyANumber < keyBNumber) {\n    return -1;\n  } else if (keyANumber > keyBNumber) {\n    return 1;\n  }\n\n  return 0;\n};\n\nfunction getDecimalFromPercentage(percentage: string) {\n  let decimal = parseInt(percentage, 10) / 100;\n\n  decimal = Math.max(0, decimal);\n  decimal = Math.min(1, decimal);\n\n  return decimal;\n}\n\nexport default class Animation {\n  public animators: Animator[] = [];\n  public _time: number = 0;\n  public _currentValues!: AnimationState;\n\n  constructor(keyframes: Keyframe[] | SimpleKeyframeConfig[]) {\n    this.initialize(keyframes);\n  }\n\n  initialize(keyframes: Keyframe[] | SimpleKeyframeConfig[]) {\n    this._currentValues = {};\n\n    this.animators = keyframes\n      .map((keyframe: any) => {\n        if (keyframe instanceof Keyframe) {\n          return keyframe;\n        } else {\n          return Keyframe.fromSimpleConfig(keyframe);\n        }\n      })\n      .map((keyframe) => new Animator(keyframe));\n\n    this._createCurrentValues();\n\n    // Sort by time.\n    this.animators.sort(sortAsc);\n  }\n\n  private _createCurrentValues() {\n    this._currentValues = this.animators.reduce(\n      (results: AnimationState, animator) => {\n        const name = animator.keyframe.name;\n        const property = animator.keyframe.property;\n\n        let keyframe = results[name];\n\n        if (keyframe == null) {\n          keyframe = results[name] = {};\n        }\n\n        if (keyframe[property] == null) {\n          keyframe[property] = animator.keyframe.result.clone();\n        }\n\n        return results;\n      },\n      {}\n    );\n  }\n\n  private _assignValue(keyframe: Keyframe) {\n    const currentValue = this._currentValues[keyframe.name][keyframe.property];\n\n    currentValue.value = keyframe.result.value;\n    currentValue.graph = keyframe.result.graph;\n    currentValue.graphHash = keyframe.result.graphHash;\n  }\n\n  private _saveCurrentValues() {\n    const visitedMap = new Map();\n    const animators = this.animators;\n    const length = animators.length;\n\n    // Assign all values at least once.\n    // This initials values beyond the time we are at.\n    for (let x = 0; x < length; x++) {\n      const keyframe = animators[x].keyframe;\n      const key = `${keyframe.name}|${keyframe.property}`;\n\n      if (!visitedMap.has(key)) {\n        visitedMap.set(key, true);\n        this._assignValue(keyframe);\n      }\n    }\n\n    // Assign if the value of the start at was before the time now.\n    // Since we have it sorted, the most current will win.\n    for (let x = 0; x < length; x++) {\n      const keyframe = animators[x].keyframe;\n\n      if (keyframe.startAt <= this._time) {\n        this._assignValue(keyframe);\n      }\n    }\n  }\n\n  update(time: number) {\n    this._time = time;\n    // Update all keyframes\n    this.animators.forEach((animator) => {\n      animator.update(time);\n    });\n\n    this._saveCurrentValues();\n\n    return this;\n  }\n\n  getCurrentValues() {\n    return this._currentValues;\n  }\n\n  merge(animation: Animation) {\n    const oldKeyframes = this.animators.map((a) => a.keyframe);\n    const newKeyframes = animation.animators.map((a) => a.keyframe);\n\n    this.initialize([...oldKeyframes, ...newKeyframes]);\n\n    return this;\n  }\n\n  static fromKeyframes(name: string, config: IAnimationKeyframes) {\n    const timeKeys = Object.keys(config);\n    const keyframes: Keyframe[] = [];\n    let lastKeyFramePercentage = 0;\n    timeKeys.sort(sortPercentages);\n\n    for (let index = 0; index < timeKeys.length - 1; index++) {\n      const key = timeKeys[index];\n      const nextKey = timeKeys[index + 1];\n      const currentAnimationKeyframe = config[key];\n      const nextAnimationKeyframe = config[nextKey] || null;\n      const startAt = lastKeyFramePercentage;\n      const endAt = getDecimalFromPercentage(timeKeys[index + 1]);\n\n      lastKeyFramePercentage = endAt;\n\n      Object.keys(currentAnimationKeyframe).forEach((key) => {\n        const currentValue = currentAnimationKeyframe[key];\n        const nextValue = nextAnimationKeyframe[key];\n\n        if (nextValue == null) {\n          throw new Error(\n            `All keyframe declarations need to have the same properties. Missing: '${key}'`\n          );\n        }\n\n        const easingIn =\n          typeof currentValue === \"string\"\n            ? \"linear\"\n            : currentValue.easeOut || \"linear\";\n        const easingOut =\n          typeof nextValue === \"string\"\n            ? \"linear\"\n            : nextValue.easeIn || \"linear\";\n\n        const easing = createDynamicEasing(easingIn, easingOut);\n\n        const controlsIn =\n          typeof currentValue === \"string\" ? [] : currentValue.controlsIn || [];\n        const controlsOut =\n          typeof nextValue === \"string\" ? [] : nextValue.controlsOut || [];\n\n        const controls = [...controlsIn, ...controlsOut];\n\n        const from =\n          typeof currentValue === \"string\" ? currentValue : currentValue.value;\n\n        const to = typeof nextValue === \"string\" ? nextValue : nextValue.value;\n\n        const keyframeConfig: SimpleKeyframeConfig = {\n          name,\n          property: key,\n          from,\n          to,\n          controls,\n          easing,\n          startAt,\n          endAt,\n        };\n\n        keyframes.push(Keyframe.fromSimpleConfig(keyframeConfig));\n      });\n    }\n\n    return new Animation(keyframes);\n  }\n}\n","const states = {\n  ACTIVE: 1,\n  STOPPED: 0,\n  DISPOSED: -1,\n};\n\nexport interface IEvent {\n  type: string;\n}\n\nexport default class Observer<TEvent extends IEvent> {\n  protected type: any;\n  protected callback: any;\n  protected unbind: any;\n  protected state: any;\n\n  constructor(\n    type: string,\n    callback: (event: TEvent) => void,\n    unbind: () => void\n  ) {\n    this.type = type;\n    this.callback = callback;\n    this.unbind = unbind;\n    this.state = states.ACTIVE;\n  }\n\n  notify(event: TEvent) {\n    if (event.type === this.type) {\n      this.callback(event);\n    }\n  }\n\n  stop() {\n    if (this.state === states.ACTIVE) {\n      this.state = states.STOPPED;\n    }\n  }\n\n  start() {\n    if (this.state !== states.DISPOSED) {\n      this.state = states.ACTIVE;\n    }\n  }\n\n  dispose() {\n    this.state = states.DISPOSED;\n    this.unbind();\n  }\n}\n","import Observer, { IEvent } from \"./Observer\";\n\nexport interface ITimeEvent extends IEvent {\n    time: number;\n    lastTime: number;\n}\n\nexport default class TimeObserver<\n  TEvent extends ITimeEvent\n> extends Observer<TEvent> {\n  public time: any;\n\n  constructor(\n    time: number,\n    callback: (event: TEvent) => void,\n    unbind: () => void\n  ) {\n    super(\"TIME_OBSERVER\", callback, unbind);\n    this.time = time;\n  }\n\n  notify(event: TEvent) {\n    if (typeof event.lastTime === \"number\" && typeof event.time === \"number\") {\n      const high = Math.max(event.time, event.lastTime);\n      const low = Math.min(event.time, event.lastTime);\n\n      if (this.time >= low && this.time <= high) {\n        this.callback(event);\n      }\n    }\n  }\n}\n","import Observer, { IEvent } from \"./Observer\";\nimport TimeObserver, { ITimeEvent } from \"./TimeObserver\";\n\nexport default class Observable {\n  private observers: any;\n\n  constructor() {\n    this.observers = [];\n  }\n\n  observeTime<TEvent extends ITimeEvent>(\n    time: number,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = new TimeObserver(time, callback, () => {\n      const index = this.observers.indexOf(observer);\n      if (index > -1) {\n        this.observers.splice(index, 1);\n      }\n    });\n\n    this.observers.push(observer);\n    return observer;\n  }\n\n  observe<TEvent extends IEvent>(\n    type: string,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = new Observer<TEvent>(type, callback, () => {\n      const index = this.observers.indexOf(observer);\n      if (index > -1) {\n        this.observers.splice(index, 1);\n      }\n    });\n\n    this.observers.push(observer);\n    return observer;\n  }\n\n  notify<TEvent extends IEvent>(event: TEvent) {\n    this.observers.forEach((observer: Observer<TEvent>) => {\n      observer.notify(event);\n    });\n  }\n\n  dispose() {\n    this.observers = [];\n  }\n}\n","import {IClock, TickCallback} from \"./IClock\";\n\nexport default class DefaultClock implements IClock {\n  public registeredCallbacks: Map<TickCallback, TickCallback>;\n  public animationFrame: any;\n\n  constructor() {\n    this.registeredCallbacks = new Map();\n    this._tick = this._tick.bind(this);\n    this.animationFrame = null;\n  }\n\n  _tick() {\n    this.registeredCallbacks.forEach((callback) => {\n      callback();\n    });\n\n    if (this.registeredCallbacks.size > 0) {\n      this.animationFrame = window.requestAnimationFrame(this._tick);\n    } else {\n      this.animationFrame = null;\n    }\n  }\n\n  register(callback: TickCallback) {\n    this.registeredCallbacks.set(callback, callback);\n\n    if (this.animationFrame == null) {\n      this._tick();\n    }\n  }\n\n  unregister(callback: TickCallback) {\n    this.registeredCallbacks.delete(callback);\n  }\n\n  now() {\n    return performance.now();\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\n\nexport default class GraphOperations {\n  constructor() {\n    this.add = this.add.bind(this);\n    this.subtract = this.subtract.bind(this);\n    this.multiply = this.multiply.bind(this);\n    this.divide = this.divide.bind(this);\n  }\n\n  add(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      resultNode.value = leftNode.value + rightNode.value;\n    }\n  }\n\n  subtract(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      (resultNode as any).value =\n        (leftNode as any).value - (rightNode as any).value;\n    }\n  }\n\n  multiply(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      (resultNode as any).value =\n        (leftNode as any).value * (rightNode as any).value;\n    }\n  }\n\n  divide(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      (resultNode as any).value =\n        (leftNode as any).value / (rightNode as any).value;\n    }\n  }\n\n  isNumberNode(nodes: Node[]) {\n    return nodes[0].name === \"number\";\n  }\n\n  canOperate(nodes: Node[]) {\n    return nodes.length === 3;\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport GraphOperations from \"./GraphOperations\";\nimport GraphsVisitor from \"./GraphsVisitor\";\nimport Visitor from \"./Visitor\";\n\nexport default class GraphOperator {\n  public graphsVisitor: any;\n  public visitor: any;\n  public graphOperations: any;\n\n  constructor() {\n    this.graphsVisitor = new GraphsVisitor();\n    this.visitor = new Visitor();\n    this.graphOperations = new GraphOperations();\n  }\n\n  assign(graph: Node, number: number) {\n    this.visitor.setCallback((node: Node) => {\n      if (node.name === \"number\") {\n        (node as any).value = number;\n      }\n    });\n\n    this.visitor.visitDown(graph);\n  }\n\n  add(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.add);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  subtract(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.subtract);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  multiply(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.multiply);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  divide(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.divide);\n    this.graphsVisitor.visitDown(graphs);\n  }\n}\n","import easings from \"./easings\";\nimport GraphOperator from \"./GraphOperator\";\nimport Keyframe from \"./Keyframe\";\nimport Animation from \"./Animation\";\nimport { PlayerState } from \"./Player\";\n\nconst FORWARD = 1;\nconst BACKWARD = -1;\n\nexport default class SlopeAnimationBuilder {\n  public animation: any;\n  public slopeAnimation: any;\n  public direction: any;\n  public newDuration: any;\n  public duration: any;\n  public offset: any;\n  public delta: any;\n  public deltaStepValues: any;\n  public scaledValues: any;\n  public deltaValues: any;\n  public nowValues: any;\n  public diffValues: any;\n  public derivativeValues: any;\n  public toValues: any;\n  public graphOperator: any;\n  public scaleValues: any;\n\n  constructor() {\n    this.animation = null;\n    this.slopeAnimation = null;\n    this.direction = 0;\n    this.newDuration = 0;\n    this.duration = 0;\n    this.offset = 0;\n    this.delta = 0.0001;\n    this.deltaStepValues = null;\n    this.scaledValues = null;\n    this.deltaValues = null;\n    this.nowValues = null;\n    this.diffValues = null;\n    this.derivativeValues = null;\n    this.scaledValues = null;\n    this.toValues = null;\n    this.graphOperator = new GraphOperator();\n  }\n\n  private cloneValues(values: any) {\n    return Object.keys(values).reduce((clone: any, name) => {\n      clone[name] = Object.keys(values[name]).reduce((clone: any, property) => {\n        clone[property] = values[name][property].clone();\n        return clone;\n      }, {});\n      return clone;\n    }, {});\n  }\n\n  build(\n    animation: Animation,\n    offset: number,\n    duration: number,\n    newDuration: number,\n    direction: PlayerState\n  ) {\n    this.animation = animation;\n    this.offset = offset;\n    this.duration = duration;\n    this.newDuration = newDuration;\n    this.direction = direction;\n\n    this.cacheValues();\n    this.calculate();\n    this.createSlopeTimeline();\n\n    return this.slopeAnimation;\n  }\n\n  private cacheValues() {\n    this.animation.update(this.offset);\n    this.nowValues = this.cloneValues(this.animation.getCurrentValues());\n\n    this.deltaStepValues = this.cloneValues(this.nowValues);\n    this.scaleValues = this.cloneValues(this.nowValues);\n    this.diffValues = this.cloneValues(this.nowValues);\n    this.derivativeValues = this.cloneValues(this.nowValues);\n    this.scaledValues = this.cloneValues(this.nowValues);\n    this.toValues = this.cloneValues(this.nowValues);\n\n    this.cacheDeltaStepValues();\n    this.cacheScaleValues();\n\n    if (this.direction === FORWARD) {\n      this.cacheDeltaValueForward();\n    } else if (this.direction === BACKWARD) {\n      this.cacheDeltaValueBackward();\n    } else {\n      this.cacheDeltaValueStopped();\n    }\n  }\n\n  private cacheDeltaStepValues() {\n    Object.keys(this.deltaStepValues).forEach((name) => {\n      Object.keys(this.deltaStepValues[name]).forEach((property) => {\n        this.graphOperator.assign(\n          this.deltaStepValues[name][property].graph,\n          this.delta\n        );\n      });\n    });\n  }\n\n  private cacheScaleValues() {\n    const scale = this.newDuration / this.duration;\n\n    Object.keys(this.scaleValues).forEach((name) => {\n      Object.keys(this.scaleValues[name]).forEach((property) => {\n        this.graphOperator.assign(\n          this.scaleValues[name][property].graph,\n          scale\n        );\n      });\n    });\n  }\n\n  private cacheDeltaValueForward() {\n    this.animation.update(this.offset + this.delta);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  private cacheDeltaValueBackward() {\n    this.animation.update(this.offset - this.delta);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  private cacheDeltaValueStopped() {\n    this.animation.update(this.offset);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  private calculate() {\n    Object.keys(this.nowValues).forEach((name) => {\n      Object.keys(this.nowValues[name]).forEach((property) => {\n        const now = this.nowValues[name][property].graph;\n        const delta = this.deltaValues[name][property].graph;\n        const diff = this.diffValues[name][property].graph;\n\n        const deltaStep = this.deltaStepValues[name][property].graph;\n        const derivative = this.derivativeValues[name][property].graph;\n        const scale = this.scaleValues[name][property].graph;\n        const scaled = this.scaledValues[name][property].graph;\n        const to = this.toValues[name][property].graph;\n\n        this.graphOperator.subtract([delta, now, diff]);\n        this.graphOperator.divide([diff, deltaStep, derivative]);\n        this.graphOperator.multiply([derivative, scale, scaled]);\n        this.graphOperator.add([now, scaled, to]);\n\n        // Lets update the ParsedValue.value.\n        this.toValues[name][property].value = to.toString();\n      });\n    });\n  }\n\n  private createSlopeTimeline() {\n    const keyframes = Object.keys(this.nowValues)\n      .map((name) => {\n        return Object.keys(this.nowValues[name]).map((property) => {\n          return new Keyframe({\n            name,\n            property,\n            from: this.nowValues[name][property],\n            controls: [],\n            to: this.toValues[name][property],\n            startAt: 0,\n            endAt: 1,\n            easing: easings.linear,\n          });\n        });\n      })\n      .flat();\n\n    this.slopeAnimation = new Animation(keyframes);\n  }\n}\n","import Animation from \"./Animation\";\nimport Keyframe from \"./Keyframe\";\nimport easings, { EasingFunction } from \"./easings\";\n\nexport default class BlendedAnimation extends Animation {\n  public fromAnimation: any;\n  public toAnimation: any;\n\n  constructor(\n    fromAnimation: Animation,\n    toAnimation: Animation,\n    easing: EasingFunction\n  ) {\n    const fromValues = fromAnimation.getCurrentValues();\n    const toValues = toAnimation.getCurrentValues();\n\n    const animations = Object.keys(fromValues)\n      .map((name) => {\n        const fromValue = fromValues[name];\n        const toValue = toValues[name];\n\n        if (toValue == null) {\n          throw new Error(\n            `Blended animations need to have the same properties to animate.  From Animation: ${JSON.stringify(\n              Object.keys(fromValues)\n            )}, To Animation: ${JSON.stringify(Object.keys(toValues))}`\n          );\n        }\n\n        return Object.keys(fromValue).map((property) => {\n          const from = fromValue[property];\n          const to = toValue[property];\n\n          return new Keyframe({\n            name,\n            property,\n            startAt: 0,\n            endAt: 1,\n            from,\n            to,\n            controls: [],\n            easing: easing || easings.linear,\n          });\n        });\n      })\n      .flat();\n\n    super(animations);\n\n    this.fromAnimation = fromAnimation;\n    this.toAnimation = toAnimation;\n  }\n\n  update(time: number) {\n    this.fromAnimation.update(time);\n    this.toAnimation.update(time);\n\n    super.update(time);\n    return this;\n  }\n}\n","import Observable from \"./Observable\";\nimport DefaultClock from \"./DefaultClock\";\nimport SlopeAnimationBuilder from \"./SlopeAnimationBuilder\";\nimport BlendedAnimation from \"./BlendedAnimation\";\nimport { IClock } from \"./IClock\";\nimport easings, { EasingFunction } from \"./easings\";\nimport Animation from \"./Animation\";\n\nconst defaultClock = new DefaultClock();\n\nconst DEFAULT = 0;\nconst ALTERNATE = 1;\n\nconst FORWARD = 1;\nconst REVERSE = -1;\nconst STOPPED = 0;\n\nconst repeatDirections = {\n  DEFAULT,\n  ALTERNATE,\n};\n\nconst states = {\n  FORWARD,\n  REVERSE,\n  STOPPED,\n};\n\nfunction defaultRender() {}\n\nexport type RepeatDirection = 0 | 1;\nexport type PlayerState = 1 | -1 | 0;\n\nexport interface PlayerOptions {\n  clock?: IClock;\n  duration?: number;\n  repeatDirection?: RepeatDirection;\n  timeScale?: number;\n  render?: (animation: Animation) => void;\n}\n\nexport default class Player extends Observable {\n  public _timeScale: number;\n  public _time: number;\n  public _step: any;\n  public _duration: number;\n  public _lastTimestamp: number;\n  public _animationFrame: any;\n  public _iterations: any;\n  public _repeat: any;\n  public _repeatDirection: any;\n  public _animation: Animation;\n  public _clock: any;\n  public _state: any;\n  public _render: any;\n  public _slopeAnimationBuilder: any;\n\n  constructor(animation: Animation, options: PlayerOptions = {}) {\n    super();\n    const { clock, duration, timeScale, repeatDirection, render } = options;\n    this._timeScale = typeof timeScale === \"number\" ? timeScale : 1;\n    this._time = 0;\n    this._step = 0;\n    this._duration = typeof duration === \"number\" ? duration : 0;\n    this._lastTimestamp = 0;\n    this._animationFrame = null;\n    this._iterations = 0;\n    this._repeat = 1;\n    this._repeatDirection =\n      typeof repeatDirection === \"number\" ? repeatDirection : DEFAULT;\n    this._animation = animation;\n    this._clock = clock || defaultClock;\n    this._state = STOPPED;\n    this._render = typeof render === \"function\" ? render : defaultRender;\n    this._slopeAnimationBuilder = new SlopeAnimationBuilder();\n\n    this.tick = this.tick.bind(this);\n  }\n\n  get time() {\n    return this._time;\n  }\n\n  get timeScale() {\n    return this._timeScale;\n  }\n\n  set timeScale(value) {\n    if (value > 0) {\n      this._timeScale = value;\n    }\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(value) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing. All Math blows up if the duration is \"0\".\n    if (value <= 0) {\n      value = 0.00001;\n    }\n\n    this._duration = value;\n  }\n\n  get repeat() {\n    return this._repeat;\n  }\n\n  set repeat(value) {\n    if (typeof value !== \"number\" && value > 0) {\n      return;\n    }\n\n    this._repeat = value;\n  }\n\n  get repeatDirection() {\n    return this._repeatDirection;\n  }\n\n  set repeatDirection(value: RepeatDirection) {\n    if (value !== 0 && value !== 1) {\n      return;\n    }\n\n    this._repeatDirection = value;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  get animation() {\n    return this._animation;\n  }\n\n  set animation(animation: Animation) {\n    this._animation = animation;\n  }\n\n  get render() {\n    return this._render;\n  }\n\n  set render(render: (animation: Animation) => void) {\n    this._render = render;\n  }\n\n  get iterations() {\n    return this._iterations;\n  }\n\n  play() {\n    if (this._state !== FORWARD) {\n      this._lastTimestamp = this._clock.now();\n      this._state = FORWARD;\n      this._clock.register(this.tick);\n\n      this.notify({\n        type: \"PLAYED\",\n        animation: this._animation,\n      });\n    }\n\n    return this;\n  }\n\n  private tick() {\n    const timestamp = this._clock.now();\n    const deltaTime = timestamp - this._lastTimestamp;\n    this._step = (deltaTime / this._duration) * this._timeScale;\n\n    if (this._step > 1) {\n      this._step = 1;\n    }\n\n    if (deltaTime === 0) {\n      return;\n    }\n\n    if (this._state === REVERSE) {\n      this.stepBackward();\n    } else if (this._state === FORWARD) {\n      this.stepForward();\n    }\n\n    this._lastTimestamp = timestamp;\n  }\n\n  private stepForward() {\n    let time = this._time + this._step;\n    let lastTime = this._time;\n\n    const repeatDirection = this._repeatDirection;\n\n    if (time >= 1) {\n      this._iterations++;\n\n      if (this._iterations >= this._repeat) {\n        this.seek(1);\n        this.stop();\n        return;\n      }\n\n      if (repeatDirection === ALTERNATE) {\n        const adjustedTime = 1 - (time - 1);\n\n        this.notify({\n          type: \"TICK\",\n          time: 1,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 1;\n        this.seek(adjustedTime);\n        this._state = REVERSE;\n      } else {\n        const adjustedTime = time - 1;\n\n        this.notify({\n          type: \"TICK\",\n          time: 1,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 0;\n        this.seek(adjustedTime);\n        this._state = FORWARD;\n      }\n    } else {\n      this.seek(time);\n    }\n  }\n\n  private stepBackward() {\n    let time = this._time - this._step;\n    let lastTime = this._time;\n\n    const repeatDirection = this._repeatDirection;\n\n    if (time <= 0) {\n      this._iterations++;\n\n      if (this._iterations >= this._repeat) {\n        this.seek(0);\n        this.stop();\n        return;\n      }\n\n      if (repeatDirection === ALTERNATE) {\n        const adjustedTime = time * -1;\n\n        this.notify({\n          type: \"TICK\",\n          time: 0,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 0;\n        this.seek(adjustedTime);\n        this._state = FORWARD;\n      } else {\n        const adjustedTime = 1 + time;\n\n        this.notify({\n          type: \"TICK\",\n          time: 1,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 1;\n        this.seek(adjustedTime);\n        this._state = REVERSE;\n      }\n    } else {\n      this.seek(time);\n    }\n  }\n\n  seek(time: number) {\n    const lastTime = this._time;\n    this._time = time;\n\n    this._animation.update(this._time);\n    this._render(this._animation);\n\n    this.notify({\n      type: \"TICK\",\n      time,\n      lastTime,\n      animation: this._animation,\n    });\n\n    return this;\n  }\n\n  stop() {\n    if (this._state !== STOPPED) {\n      this._state = STOPPED;\n      this._clock.unregister(this.tick);\n\n      this.notify({\n        type: \"STOPPED\",\n        animation: this._animation,\n      });\n    }\n\n    return this;\n  }\n\n  reverse() {\n    if (this._state !== REVERSE) {\n      this._lastTimestamp = this._clock.now();\n      this._state = REVERSE;\n      this._clock.register(this.tick);\n\n      this.notify({\n        type: \"REVERSED\",\n        animation: this._animation,\n      });\n    }\n\n    return this;\n  }\n\n  transitionToAnimation(\n    animation: Animation,\n    duration: number,\n    transitionDuration?: number,\n    transitionEasing: EasingFunction = easings.linear\n  ) {\n    transitionDuration =\n      typeof transitionDuration === \"number\" ? transitionDuration : duration;\n\n    const slopeAnimation = this._slopeAnimationBuilder.build(\n      this._animation,\n      this._time,\n      this._duration,\n      transitionDuration,\n      this._state\n    );\n\n    const blendedAnimation = new BlendedAnimation(\n      slopeAnimation,\n      animation,\n      transitionEasing\n    );\n\n    this._animation = blendedAnimation;\n    this._time = 0;\n    this._duration = transitionDuration;\n\n    this.notify({\n      type: \"TRANSITION\",\n      animation: this._animation,\n    });\n\n    const observer = this.observeTime(1, () => {\n      this._animation = animation;\n      this._duration = duration;\n\n      observer.dispose();\n      transitionObserver.dispose();\n\n      this.notify({\n        type: \"TRANSITION-END\",\n        animation: this._animation,\n      });\n    });\n\n    const transitionObserver = this.observe(\"TRANSITION\", () => {\n      observer.dispose();\n      transitionObserver.dispose();\n    });\n\n    return this;\n  }\n\n  dispose() {\n    this.stop();\n    super.dispose();\n  }\n\n  static get repeatDirections() {\n    return repeatDirections;\n  }\n\n  static get states() {\n    return states;\n  }\n}\n"],"names":["emptyFn","visitor","treeUtility","space","spaces","values","validator","states","FORWARD"],"mappings":"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"}