{"version":3,"file":"index.esm.js","sources":["../src/BezierCurve.ts","../src/Visitor.ts","../src/TreeUtility.ts","../src/GraphsVisitor.ts","../src/Animator.ts","../src/easingFunctions/easeInQuad.ts","../src/easingFunctions/easeOutQuad.ts","../src/easingFunctions/easeInOutQuad.ts","../src/easingFunctions/easeInElastic.ts","../src/easingFunctions/easeInOutElastic.ts","../src/easingFunctions/easeOutElastic.ts","../src/easingFunctions/easeInOutBack.ts","../src/easingFunctions/easeOutBounce.ts","../src/easingFunctions/easeInBounce.ts","../src/easingFunctions/easeInOutBounce.ts","../src/easingFunctions/easeInCubic.ts","../src/easingFunctions/easeOutCubic.ts","../src/easingFunctions/easeInOutCubic.ts","../src/easingFunctions/easeInQuart.ts","../src/easingFunctions/easeOutQuart.ts","../src/easingFunctions/easeInOutQuart.ts","../src/easingFunctions/easeInQuint.ts","../src/easingFunctions/easeOutQuint.ts","../src/easingFunctions/easeInOutQuint.ts","../src/easingFunctions/easeInSine.ts","../src/easingFunctions/easeOutSine.ts","../src/easingFunctions/easeInOutSine.ts","../src/easingFunctions/easeInExpo.ts","../src/easingFunctions/easeOutExpo.ts","../src/easingFunctions/easeInOutExpo.ts","../src/easingFunctions/easeInCirc.ts","../src/easingFunctions/easeOutCirc.ts","../src/easingFunctions/easeInOutCirc.ts","../src/easingFunctions/easeInBack.ts","../src/easingFunctions/easeOutBack.ts","../src/easingFunctions/easeLinear.ts","../src/easings.ts","../node_modules/clarity-pattern-parser/dist/index.esm.js","../src/patterns/divider.ts","../src/patterns/number.ts","../src/patterns/unit.ts","../src/patterns/hex.ts","../src/patterns/name.ts","../src/patterns/optionalSpaces.ts","../src/patterns/method.ts","../src/patterns/array.ts","../src/patterns/value.ts","../src/patterns/spaces.ts","../src/patterns/values.ts","../src/patterns/cssValue.ts","../src/HexColor.ts","../src/TreeNormalizer.ts","../src/ParsedValue.ts","../src/KeyframeConfigValidator.ts","../src/KeyframeUtility.ts","../src/Keyframe.ts","../src/createDynamicEasing.ts","../src/Animation.ts","../src/Observer.ts","../src/TimeObserver.ts","../src/Observable.ts","../src/DefaultClock.ts","../src/GraphOperations.ts","../src/GraphOperator.ts","../src/SlopeAnimationBuilder.ts","../src/BlendedAnimation.ts","../src/Player.ts"],"sourcesContent":["export default class BezierCurve {\n  points: any;\n  reducedPoints: any;\n\n  constructor(points: number[]) {\n    this.setPoints(points);\n  }\n\n  setPoints(points: number[]) {\n    this.points = points;\n    this.reducedPoints = new Array(points.length);\n\n    Object.freeze(this.points);\n  }\n\n  valueAt(percentage: number) {\n    const points = this.points;\n    const reducedPoints = this.reducedPoints;\n    const length = points.length;\n\n    for (let x = 0; x < length; x++) {\n      reducedPoints[x] = points[x];\n    }\n\n    for (let x = 0; x < length; x++) {\n      const innerLength = length - x - 1;\n\n      for (let y = 0; y < innerLength; y++) {\n        const nextPoint = reducedPoints[y + 1];\n        const point = reducedPoints[y];\n\n        reducedPoints[y] = (nextPoint - point) * percentage + point;\n      }\n    }\n\n    return reducedPoints[0];\n  }\n\n  clone() {\n    return new BezierCurve(this.points.slice());\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\n\nconst emptyFn = () => {};\n\nexport default class Visitor {\n  public callback: any;\n\n  constructor(callback: (node: Node) => void = emptyFn) {\n    this.setCallback(callback);\n    this.visitDown = this.visitDown.bind(this);\n    this.visitUp = this.visitUp.bind(this);\n  }\n\n  walkUp(node: Node) {\n    if (node.isComposite) {\n      node.children.forEach(this.visitUp);\n    }\n\n    this.callback(node);\n  }\n\n  visitUp(node: Node) {\n    this.walkUp(node);\n  }\n\n  walkDown(node: Node) {\n    this.callback(node);\n\n    if (node.isComposite) {\n      node.children.forEach(this.visitDown);\n    }\n  }\n\n  visitDown(node: Node) {\n    this.walkDown(node);\n  }\n\n  setCallback(callback: (node: Node) => void) {\n    if (typeof callback === \"function\") {\n      this.callback = callback;\n    } else {\n      this.callback = emptyFn;\n    }\n\n    this.callback = callback;\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport Visitor from \"./Visitor\";\n\nconst visitor = new Visitor();\n\nfunction convertNumberNode(node: Node) {\n  if (node.name === \"number\") {\n    (node as any).value = Number(node.value);\n  }\n}\n\n// Hashing function, this may not be the best. So this may need to be replaced.\n// https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\nfunction hash(str: string, seed = 0) {\n  let h1 = 0xdeadbeef ^ seed,\n    h2 = 0x41c6ce57 ^ seed;\n  for (let i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i);\n    h1 = Math.imul(h1 ^ ch, 2654435761);\n    h2 = Math.imul(h2 ^ ch, 1597334677);\n  }\n  h1 =\n    Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^\n    Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n  h2 =\n    Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^\n    Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n  return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n}\n\nexport default class TreeUtility {\n  areTreeStructuresEqual(nodeA: Node, nodeB: Node) {\n    const nodeASequence = this.sequence(nodeA);\n    const nodeBSequence = this.sequence(nodeB);\n    return nodeASequence === nodeBSequence;\n  }\n\n  sequence(node: Node) {\n    const sequence: string[] = [];\n    visitor.setCallback((node: Node) => {\n      sequence.push(node.name);\n    });\n    visitor.visitDown(node);\n\n    return sequence.join(\"|\");\n  }\n\n  sequenceHash(node: Node) {\n    return hash(this.sequence(node));\n  }\n\n  convertNumberNodesToNumberValues(node: Node) {\n    visitor.setCallback(convertNumberNode);\n    visitor.visitDown(node);\n  }\n}\n","import TreeUtility from \"./TreeUtility\";\nimport { Node } from \"clarity-pattern-parser\";\n\nconst emptyFn = () => {};\nconst treeUtility = new TreeUtility();\n\ntype Visitor = (graphs: Node[]) => void;\n\nexport default class GraphsVisitor {\n  private visitor: Visitor = emptyFn;\n\n  constructor(callback: Visitor = emptyFn) {\n    this.setCallback(callback);\n    this.visitDown = this.visitDown.bind(this);\n    this.visitUp = this.visitUp.bind(this);\n  }\n\n  visitUp(graphs: Node[], optimized = false) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    const siblings = graphs.slice(1);\n    const node = graphs[0];\n\n    if (!optimized) {\n      const areEqual = siblings.every((sibling) =>\n        treeUtility.areTreeStructuresEqual(node, sibling)\n      );\n\n      if (!areEqual) {\n        throw new Error(\"The nodes structures need to be the same.\");\n      }\n    }\n\n    this.walkUp(graphs);\n  }\n\n  walkUp(graphs: Node[]) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    const node = graphs[0];\n\n    if (node.isComposite) {\n      for (let index = 0; index < node.children.length; index++) {\n        const childGraphs = graphs.map((node) => {\n          return node.children[index];\n        });\n        this.walkUp(childGraphs);\n      }\n    }\n\n    this.visitor(graphs);\n  }\n\n  visitDown(graphs: Node[], optimized = false) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    const siblings = graphs.slice(1);\n    const node = graphs[0];\n\n    if (!optimized) {\n      const areEqual = siblings.every((sibling) =>\n        treeUtility.areTreeStructuresEqual(node, sibling)\n      );\n\n      if (!areEqual) {\n        throw new Error(\"The nodes structures need to be the same.\");\n      }\n    }\n\n    this.walkDown(graphs);\n  }\n\n  walkDown(graphs: Node[]) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    this.visitor(graphs);\n\n    const node = graphs[0];\n    if (node.isComposite) {\n      for (let index = 0; index < node.children.length; index++) {\n        const childGraphs = graphs.map((node) => {\n          return node.children[index];\n        });\n        this.walkDown(childGraphs);\n      }\n    }\n  }\n\n  setCallback(visitor: Visitor) {\n    if (typeof visitor === \"function\") {\n      this.visitor = visitor;\n    } else {\n      this.visitor = emptyFn;\n    }\n\n    this.visitor = visitor;\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport BezierCurve from \"./BezierCurve\";\nimport GraphsVisitor from \"./GraphsVisitor\";\nimport Keyframe from \"./Keyframe\";\n\nconst visitor = new GraphsVisitor();\n\nexport default class Animator {\n  public keyframe: Keyframe;\n  public time: number;\n  public bezierCurve: BezierCurve;\n  public keyframeGraphs: Node[];\n\n  constructor(keyframe: Keyframe) {\n    this.keyframe = keyframe;\n    this.visit = this.visit.bind(this);\n    this.time = 0;\n    this.bezierCurve = new BezierCurve([]);\n    this.keyframeGraphs = [];\n    this.updateKeyframeGraphs();\n  }\n\n  private updateKeyframeGraphs() {\n    this.keyframeGraphs.length = 0;\n    this.keyframeGraphs.push(this.keyframe.from.graph);\n\n    for (let x = 0; x < this.keyframe.controls.length; x++) {\n      this.keyframeGraphs.push(this.keyframe.controls[x].graph);\n    }\n\n    this.keyframeGraphs.push(this.keyframe.to.graph);\n    this.keyframeGraphs.push(this.keyframe.result.graph);\n  }\n\n  visit(nodes: Node[]) {\n    const cloneNodes = nodes.slice();\n    const resultNode = cloneNodes.pop();\n    const time = this.time;\n\n    if (resultNode == null) {\n      return;\n    }\n\n    if (cloneNodes[0].name === \"number\") {\n      const elapsedTime = time - this.keyframe.startAt;\n      const animationDuration = this.keyframe.endAt - this.keyframe.startAt;\n      const timeWithEasing = this.keyframe.easing(\n        elapsedTime / animationDuration\n      );\n\n      const points = cloneNodes.map((node) => Number(node.value));\n\n      this.bezierCurve.setPoints(points);\n      resultNode.value = this.bezierCurve.valueAt(timeWithEasing);\n    } else {\n      if (!resultNode.isComposite) {\n        if (time >= this.keyframe.startAt) {\n          resultNode.value = cloneNodes[cloneNodes.length - 1].value;\n        } else {\n          resultNode.value = cloneNodes[0].value;\n        }\n      }\n    }\n  }\n\n  update(time: number) {\n    this.updateKeyframeGraphs();\n    this.time = time;\n\n    visitor.setCallback(this.visit);\n    visitor.visitDown(this.keyframeGraphs, true);\n\n    const value = this.keyframe.result.graph.toString();\n    this.keyframe.result.value = value;\n\n    return this.keyframe.result;\n  }\n}\n","export default (percentage: number) => {\n  return percentage * percentage;\n};\n","export default (percentage: number) => {\n  return -percentage * (percentage - 2);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1) return (1 / 2) * percentage * percentage;\n  return (-1 / 2) * (--percentage * (percentage - 2) - 1);\n};\n","export default (percentage: number) => {\n  const p = 0.3 / 1;\n  const s = p / 4;\n  const a = 1;\n\n  if (percentage <= 0) return 0;\n  if (percentage >= 1) return 1;\n\n  return -(\n    a *\n    Math.pow(2, 10 * (percentage -= 1)) *\n    Math.sin(((percentage - s) * (2 * Math.PI)) / p)\n  );\n};\n","export default (t: number) => {\n  var b = 0;\n  var c = 1;\n  var d = 1;\n  var s = 1.70158;\n  var p = 0;\n  var a = c;\n\n  if (t == 0) return b;\n  if ((t /= d / 2) == 2) return b + c;\n  if (!p) p = d * (0.3 / 1);\n  if (a < Math.abs(c)) {\n    a = c;\n    var s = p / 4;\n  } else var s = (p / (2 * Math.PI)) * Math.asin(c / a);\n  if (t < 1)\n    return (\n      -0.5 *\n        (a *\n          Math.pow(2, 10 * (t -= 1)) *\n          Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\n      b\n    );\n  return (\n    a *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\n      0.5 +\n    c +\n    b\n  );\n};\n","export default (percentage: number) => {\n  const p = 0.3 / 1;\n  const s = p / 4;\n  const a = 1;\n\n  if (percentage <= 0) return 0;\n  if (percentage >= 1) return 1;\n\n  return (\n    a *\n      Math.pow(2, -10 * percentage) *\n      Math.sin(((percentage - s) * (2 * Math.PI)) / p) +\n    1\n  );\n};\n","export default (percentage: number) => {\n  const s = 1.70158 * 1.525;\n\n  if ((percentage /= 1 / 2) < 1) {\n    return (1 / 2) * (percentage * percentage * ((s + 1) * percentage - s));\n  }\n\n  return (\n    (1 / 2) * ((percentage -= 2) * percentage * ((s + 1) * percentage + s) + 2)\n  );\n};\n","export default (percentage: number) => {\n  let t = percentage;\n\n  if ((t /= 1) < 1 / 2.75) {\n    return 7.5625 * t * t;\n  } else if (t < 2 / 2.75) {\n    return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n  } else if (t < 2.5 / 2.75) {\n    return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n  } else {\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  }\n};\n","import easeOutBounce from \"./easeOutBounce\";\n\nexport default (percentage: number) => {\n  return 1 - easeOutBounce(1 - percentage);\n};\n","import easeInBounce from \"./easeInBounce\";\nimport easeOutBounce from \"./easeOutBounce\";\n\nexport default (percentage: number) => {\n  if (percentage < 0.5) {\n    return easeInBounce(percentage * 2) * 0.5;\n  } else {\n    return easeOutBounce(percentage * 2 - 1) * 0.5 + 0.5;\n  }\n};\n","export default (percentage: number) => {\n  return 1 * (percentage /= 1) * percentage * percentage;\n};\n","export default (percentage: number) => {\n  return 1 * ((percentage = percentage / 1 - 1) * percentage * percentage + 1);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * percentage * percentage * percentage;\n  return (1 / 2) * ((percentage -= 2) * percentage * percentage + 2);\n};\n","export default (percentage: number) => {\n  return 1 * (percentage /= 1) * percentage * percentage * percentage;\n};\n","export default (percentage: number) => {\n  return (\n    -1 *\n    ((percentage = percentage / 1 - 1) * percentage * percentage * percentage -\n      1)\n  );\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * percentage * percentage * percentage * percentage;\n  return (\n    (-1 / 2) * ((percentage -= 2) * percentage * percentage * percentage - 2)\n  );\n};\n","export default (percentage: number) => {\n  return (\n    1 * (percentage /= 1) * percentage * percentage * percentage * percentage\n  );\n};\n","export default (percentage: number) => {\n  return (\n    1 *\n    ((percentage = percentage / 1 - 1) *\n      percentage *\n      percentage *\n      percentage *\n      percentage +\n      1)\n  );\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (\n      (1 / 2) * percentage * percentage * percentage * percentage * percentage\n    );\n  return (\n    (1 / 2) *\n    ((percentage -= 2) * percentage * percentage * percentage * percentage + 2)\n  );\n};\n","export default (percentage: number) => {\n  return -Math.cos(percentage * (Math.PI / 2)) + 1;\n};\n","export default (percentage: number) => {\n  return 1 * Math.sin((percentage / 1) * (Math.PI / 2));\n};\n","export default (percentage: number) => {\n  return (-1 / 2) * (Math.cos((Math.PI * percentage) / 1) - 1);\n};\n","export default (percentage: number) => {\n  return percentage == 0 ? 0 : 1 * Math.pow(2, 10 * (percentage / 1 - 1));\n};\n","export default (percentage: number) => {\n  return percentage == 1 ? 1 : 1 * (-Math.pow(2, (-10 * percentage) / 1) + 1);\n};\n","export default (percentage: number) => {\n  if (percentage == 0) return 0;\n  if (percentage == 1) return 1;\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * Math.pow(2, 10 * (percentage - 1));\n  return (1 / 2) * (-Math.pow(2, -10 * --percentage) + 2);\n};\n","export default (percentage: number) => {\n  return -1 * (Math.sqrt(1 - (percentage /= 1) * percentage) - 1);\n};\n","export default (percentage: number) => {\n  return 1 * Math.sqrt(1 - (percentage = percentage / 1 - 1) * percentage);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (-1 / 2) * (Math.sqrt(1 - percentage * percentage) - 1);\n  return (1 / 2) * (Math.sqrt(1 - (percentage -= 2) * percentage) + 1);\n};\n","export default (percentage: number) => {\n  const s = 1.70158;\n  return 1 * (percentage /= 1) * percentage * ((s + 1) * percentage - s);\n};\n","export default (percentage: number) => {\n  const s = 1.70158;\n  return (\n    1 *\n    ((percentage = percentage / 1 - 1) *\n      percentage *\n      ((s + 1) * percentage + s) +\n      1)\n  );\n};\n","export default (percentage: number) => {\n  return percentage;\n};\n","import easeInQuad from \"./easingFunctions/easeInQuad\";\nimport easeOutQuad from \"./easingFunctions/easeOutQuad\";\nimport easeInOutQuad from \"./easingFunctions/easeInOutQuad\";\nimport easeInElastic from \"./easingFunctions/easeInElastic\";\nimport easeInOutElastic from \"./easingFunctions/easeInOutElastic\";\nimport easeOutElastic from \"./easingFunctions/easeOutElastic\";\nimport easeInOutBack from \"./easingFunctions/easeInOutBack\";\nimport easeInOutBounce from \"./easingFunctions/easeInOutBounce\";\nimport easeInBounce from \"./easingFunctions/easeInBounce\";\nimport easeOutBounce from \"./easingFunctions/easeOutBounce\";\nimport easeInCubic from \"./easingFunctions/easeInCubic\";\nimport easeOutCubic from \"./easingFunctions/easeOutCubic\";\nimport easeInOutCubic from \"./easingFunctions/easeInOutCubic\";\nimport easeInQuart from \"./easingFunctions/easeInQuart\";\nimport easeOutQuart from \"./easingFunctions/easeOutQuart\";\nimport easeInOutQuart from \"./easingFunctions/easeInOutQuart\";\nimport easeInQuint from \"./easingFunctions/easeInQuint\";\nimport easeOutQuint from \"./easingFunctions/easeOutQuint\";\nimport easeInOutQuint from \"./easingFunctions/easeInOutQuint\";\nimport easeInSine from \"./easingFunctions/easeInSine\";\nimport easeOutSine from \"./easingFunctions/easeOutSine\";\nimport easeInOutSine from \"./easingFunctions/easeInOutSine\";\nimport easeInExpo from \"./easingFunctions/easeInExpo\";\nimport easeOutExpo from \"./easingFunctions/easeOutExpo\";\nimport easeInOutExpo from \"./easingFunctions/easeInOutExpo\";\nimport easeInCirc from \"./easingFunctions/easeInCirc\";\nimport easeOutCirc from \"./easingFunctions/easeOutCirc\";\nimport easeInOutCirc from \"./easingFunctions/easeInOutCirc\";\nimport easeInBack from \"./easingFunctions/easeInBack\";\nimport easeOutBack from \"./easingFunctions/easeOutBack\";\nimport easeLinear from \"./easingFunctions/easeLinear\";\n\nexport type EasingFunction = (percentage: number) => number;\n\nexport type EasingNames =\n  | \"easeInQuad\"\n  | \"easeOutQuad\"\n  | \"easeInOutQuad\"\n  | \"easeInCubic\"\n  | \"easeOutCubic\"\n  | \"easeInOutCubic\"\n  | \"easeInQuart\"\n  | \"easeOutQuart\"\n  | \"easeInOutQuart\"\n  | \"easeInQuint\"\n  | \"easeOutQuint\"\n  | \"easeInOutQuint\"\n  | \"easeInSine\"\n  | \"easeOutSine\"\n  | \"easeInOutSine\"\n  | \"easeInExpo\"\n  | \"easeOutExpo\"\n  | \"easeInOutExpo\"\n  | \"easeInCirc\"\n  | \"easeOutCirc\"\n  | \"easeInOutCirc\"\n  | \"easeInElastic\"\n  | \"easeOutElastic\"\n  | \"easeInOutElastic\"\n  | \"easeInBack\"\n  | \"easeOutBack\"\n  | \"easeInOutBack\"\n  | \"easeInBounce\"\n  | \"easeOutBounce\"\n  | \"easeInOutBounce\"\n  | \"linear\";\n\nconst easings = {\n  easeInQuad: easeInQuad,\n  easeOutQuad: easeOutQuad,\n  easeInOutQuad: easeInOutQuad,\n  easeInCubic: easeInCubic,\n  easeOutCubic: easeOutCubic,\n  easeInOutCubic: easeInOutCubic,\n  easeInQuart: easeInQuart,\n  easeOutQuart: easeOutQuart,\n  easeInOutQuart: easeInOutQuart,\n  easeInQuint: easeInQuint,\n  easeOutQuint: easeOutQuint,\n  easeInOutQuint: easeInOutQuint,\n  easeInSine: easeInSine,\n  easeOutSine: easeOutSine,\n  easeInOutSine: easeInOutSine,\n  easeInExpo: easeInExpo,\n  easeOutExpo: easeOutExpo,\n  easeInOutExpo: easeInOutExpo,\n  easeInCirc: easeInCirc,\n  easeOutCirc: easeOutCirc,\n  easeInOutCirc: easeInOutCirc,\n  easeInElastic: easeInElastic,\n  easeOutElastic: easeOutElastic,\n  easeInOutElastic: easeInOutElastic,\n  easeInBack: easeInBack,\n  easeOutBack: easeOutBack,\n  easeInOutBack: easeInOutBack,\n  easeInBounce: easeInBounce,\n  easeOutBounce: easeOutBounce,\n  easeInOutBounce: easeInOutBounce,\n  linear: easeLinear,\n};\n\nexport default easings;\n","class Node {\r\n    constructor(type, name, startIndex, endIndex, isComposite = false) {\r\n        this.children = [];\r\n        this.value = \"\";\r\n        this.type = type;\r\n        this.name = name;\r\n        this.startIndex = startIndex;\r\n        this.endIndex = endIndex;\r\n        this.isComposite = isComposite;\r\n        if (typeof this.startIndex !== \"number\" ||\r\n            typeof this.endIndex !== \"number\") {\r\n            throw new Error(\"Invalid Arguments: startIndex and endIndex need to be number.\");\r\n        }\r\n    }\r\n}\n\nclass CompositeNode extends Node {\r\n    constructor(type, name, startIndex = 0, endIndex = 0) {\r\n        super(type, name, startIndex, endIndex, true);\r\n    }\r\n    clone() {\r\n        const node = new CompositeNode(this.type, this.name, this.startIndex, this.endIndex);\r\n        node.children = this.children.map((child) => {\r\n            return child.clone();\r\n        });\r\n        return node;\r\n    }\r\n    filter(shouldKeep, context = []) {\r\n        const childrenContext = context.slice();\r\n        childrenContext.push(this);\r\n        Object.freeze(childrenContext);\r\n        const matches = this.children.reduce((acc, child) => {\r\n            return acc.concat(child.filter(shouldKeep, childrenContext));\r\n        }, []);\r\n        const match = shouldKeep(this, context);\r\n        if (match) {\r\n            matches.push(this);\r\n        }\r\n        return matches;\r\n    }\r\n    toString() {\r\n        return this.children.map((child) => child.toString()).join(\"\");\r\n    }\r\n}\n\nclass ValueNode extends Node {\r\n    constructor(type, name, value, startIndex = 0, endIndex = 0) {\r\n        super(type, name, startIndex, endIndex);\r\n        this.value = value;\r\n    }\r\n    clone() {\r\n        return new ValueNode(this.type, this.name, this.value, this.startIndex, this.endIndex);\r\n    }\r\n    filter(shouldKeep, context = []) {\r\n        const match = shouldKeep(this, context);\r\n        if (match) {\r\n            return [this];\r\n        }\r\n        return [];\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\n\nclass CursorHistory {\r\n    constructor() {\r\n        this.isRecording = false;\r\n        this.furthestMatch = {\r\n            pattern: null,\r\n            astNode: null,\r\n        };\r\n        this.furthestError = null;\r\n        this.patterns = [];\r\n        this.astNodes = [];\r\n        this.errors = [];\r\n    }\r\n    addMatch(pattern, astNode) {\r\n        if (this.isRecording) {\r\n            this.patterns.push(pattern);\r\n            this.astNodes.push(astNode);\r\n        }\r\n        if (this.furthestMatch.astNode == null ||\r\n            astNode.endIndex >= this.furthestMatch.astNode.endIndex) {\r\n            this.furthestMatch.pattern = pattern;\r\n            this.furthestMatch.astNode = astNode;\r\n        }\r\n    }\r\n    addError(error) {\r\n        if (this.isRecording) {\r\n            this.errors.push(error);\r\n        }\r\n        if (this.furthestError == null || error.index >= this.furthestError.index) {\r\n            this.furthestError = error;\r\n        }\r\n    }\r\n    startRecording() {\r\n        this.isRecording = true;\r\n    }\r\n    stopRecording() {\r\n        this.isRecording = false;\r\n        this.clear();\r\n    }\r\n    clear() {\r\n        this.patterns.length = 0;\r\n        this.astNodes.length = 0;\r\n        this.errors.length = 0;\r\n    }\r\n    getFurthestError() {\r\n        return this.furthestError;\r\n    }\r\n    getFurthestMatch() {\r\n        return this.furthestMatch;\r\n    }\r\n    getLastMatch() {\r\n        if (this.isRecording) {\r\n            return {\r\n                pattern: this.patterns[this.patterns.length - 1] || null,\r\n                astNode: this.astNodes[this.astNodes.length - 1] || null,\r\n            };\r\n        }\r\n        else {\r\n            return this.furthestMatch;\r\n        }\r\n    }\r\n    getLastError() {\r\n        return this.errors[this.errors.length - 1] || null;\r\n    }\r\n    getAllParseStacks() {\r\n        const stacks = this.astNodes.reduce((acc, node) => {\r\n            let container = acc[acc.length - 1];\r\n            if (node.startIndex === 0) {\r\n                container = [];\r\n                acc.push(container);\r\n            }\r\n            container.push(node);\r\n            return acc;\r\n        }, []);\r\n        // There are times when the matching will fail and hit again on the same node.\r\n        // This filters them out.\r\n        // We simply check to see if there is any overlap with the previous one,\r\n        // and if there is we don't add it. This is why we move backwards.\r\n        const cleanedStack = stacks.map((stack) => {\r\n            const cleanedStack = [];\r\n            for (let x = stack.length - 1; x >= 0; x--) {\r\n                const currentNode = stack[x];\r\n                const previousNode = stack[x + 1];\r\n                if (previousNode == null) {\r\n                    cleanedStack.unshift(currentNode);\r\n                }\r\n                else {\r\n                    const left = Math.max(currentNode.startIndex, previousNode.startIndex);\r\n                    const right = Math.min(currentNode.endIndex, previousNode.endIndex);\r\n                    const isOverlapping = left <= right;\r\n                    if (!isOverlapping) {\r\n                        cleanedStack.unshift(currentNode);\r\n                    }\r\n                }\r\n            }\r\n            return cleanedStack;\r\n        });\r\n        return cleanedStack;\r\n    }\r\n    getLastParseStack() {\r\n        const stacks = this.getAllParseStacks();\r\n        return stacks[stacks.length - 1] || [];\r\n    }\r\n}\n\nclass Cursor {\r\n    constructor(text) {\r\n        this.text = text;\r\n        this.assertValidity();\r\n        this.index = 0;\r\n        this.length = text.length;\r\n        this.history = new CursorHistory();\r\n        this.isInErrorState = false;\r\n    }\r\n    assertValidity() {\r\n        if (this.isNullOrEmpty(this.text)) {\r\n            throw new Error(\"Illegal Argument: Cursor needs to have a string that has a length greater than 0.\");\r\n        }\r\n    }\r\n    startRecording() {\r\n        this.history.startRecording();\r\n    }\r\n    stopRecording() {\r\n        this.history.stopRecording();\r\n    }\r\n    get parseError() {\r\n        return this.history.getFurthestError();\r\n    }\r\n    get lastMatch() {\r\n        return this.history.getFurthestMatch();\r\n    }\r\n    throwError(parseError) {\r\n        this.isInErrorState = true;\r\n        this.history.addError(parseError);\r\n    }\r\n    addMatch(pattern, astNode) {\r\n        this.history.addMatch(pattern, astNode);\r\n    }\r\n    resolveError() {\r\n        this.isInErrorState = false;\r\n    }\r\n    hasUnresolvedError() {\r\n        return this.isInErrorState;\r\n    }\r\n    isNullOrEmpty(value) {\r\n        return value == null || (typeof value === \"string\" && value.length === 0);\r\n    }\r\n    hasNext() {\r\n        return this.index + 1 < this.text.length;\r\n    }\r\n    hasPrevious() {\r\n        return this.index - 1 >= 0;\r\n    }\r\n    next() {\r\n        if (this.hasNext()) {\r\n            this.index++;\r\n        }\r\n        else {\r\n            throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n        }\r\n    }\r\n    previous() {\r\n        if (this.hasPrevious()) {\r\n            this.index--;\r\n        }\r\n        else {\r\n            throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n        }\r\n    }\r\n    mark() {\r\n        return this.index;\r\n    }\r\n    moveToMark(mark) {\r\n        this.index = mark;\r\n    }\r\n    moveToBeginning() {\r\n        this.index = 0;\r\n    }\r\n    moveToEnd() {\r\n        this.index = this.text.length - 1;\r\n    }\r\n    getChar() {\r\n        return this.text.charAt(this.index);\r\n    }\r\n    getIndex() {\r\n        return this.index;\r\n    }\r\n    setIndex(index) {\r\n        if (typeof index === \"number\") {\r\n            if (index < 0 || index > this.lastIndex()) {\r\n                throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n            }\r\n            this.index = index;\r\n        }\r\n    }\r\n    isAtBeginning() {\r\n        return this.index === 0;\r\n    }\r\n    isAtEnd() {\r\n        return this.index === this.text.length - 1;\r\n    }\r\n    lastIndex() {\r\n        return this.length - 1;\r\n    }\r\n    didSuccessfullyParse() {\r\n        return !this.hasUnresolvedError() && this.isAtEnd();\r\n    }\r\n}\n\nclass ParseError {\r\n    constructor(message, index, pattern) {\r\n        this.name = \"ParseError\";\r\n        this.message = message;\r\n        this.index = index;\r\n        this.pattern = pattern;\r\n    }\r\n}\n\nclass Pattern {\r\n    constructor(type = \"\", name, children = []) {\r\n        this._type = type;\r\n        this._name = name;\r\n        this._children = [];\r\n        this._parent = null;\r\n        this.isSequence = false;\r\n        this._assertName();\r\n        this.children = children;\r\n    }\r\n    _assertName() {\r\n        if (typeof this.name !== \"string\") {\r\n            throw new Error(\"Invalid Argument: Patterns needs to have a name that's a string.\");\r\n        }\r\n    }\r\n    exec(text) {\r\n        const cursor = new Cursor(text);\r\n        const node = this.parse(cursor);\r\n        if (cursor.didSuccessfullyParse()) {\r\n            return node;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    test(text) {\r\n        return this.exec(text) != null;\r\n    }\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    set parent(value) {\r\n        if (value instanceof Pattern) {\r\n            this._parent = value;\r\n        }\r\n    }\r\n    get children() {\r\n        return this._children;\r\n    }\r\n    set children(value) {\r\n        this._children = value;\r\n        this._cloneChildren();\r\n        this._assertChildren();\r\n        this._assignAsParent();\r\n    }\r\n    _assertChildren() {\r\n        // Empty,can be overridden by subclasses.\r\n    }\r\n    _cloneChildren() {\r\n        // We need to clone the patterns so nested patterns can be parsed.\r\n        this._children = this._children.map((pattern) => {\r\n            if (!(pattern instanceof Pattern)) {\r\n                throw new Error(`The ${this.name} pattern has an invalid child pattern.`);\r\n            }\r\n            return pattern.clone();\r\n        });\r\n        // We need to freeze the children so they aren't modified.\r\n        Object.freeze(this._children);\r\n    }\r\n    _assignAsParent() {\r\n        this._children.forEach((child) => (child.parent = this));\r\n    }\r\n    getNextTokens() {\r\n        var _a, _b, _c;\r\n        const parent = this._parent;\r\n        if (parent != null) {\r\n            const siblings = parent.children;\r\n            const index = siblings.findIndex((c) => c === this);\r\n            const nextSibling = siblings[index + 1];\r\n            // I don't like this, so I think we need to rethink this.\r\n            if (parent.type.indexOf(\"repeat\") === 0) {\r\n                const tokens = parent.getNextTokens();\r\n                if (index === 0 && siblings.length > 1) {\r\n                    return nextSibling.getTokens().concat(tokens);\r\n                }\r\n                else if (index === 1) {\r\n                    return siblings[0].getTokens().concat(tokens);\r\n                }\r\n                else {\r\n                    return this.getTokens().concat(tokens);\r\n                }\r\n            }\r\n            // Another thing I don't like.\r\n            if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.indexOf(\"and\")) === 0 &&\r\n                nextSibling != null &&\r\n                ((_c = nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.type) === null || _c === void 0 ? void 0 : _c.indexOf(\"optional\")) === 0) {\r\n                let tokens = [];\r\n                for (let x = index + 1; x < siblings.length; x++) {\r\n                    const child = siblings[x];\r\n                    if (child.type.indexOf(\"optional\") === 0) {\r\n                        tokens = tokens.concat(child.getTokens());\r\n                    }\r\n                    else {\r\n                        tokens = tokens.concat(child.getTokens());\r\n                        break;\r\n                    }\r\n                    if (x === siblings.length - 1) {\r\n                        tokens = tokens.concat(this._parent.getNextTokens());\r\n                    }\r\n                }\r\n                return tokens;\r\n            }\r\n            // If you are an or you have already qualified.\r\n            if (parent.type.indexOf(\"or\") === 0) {\r\n                return parent.getNextTokens();\r\n            }\r\n            if (nextSibling != null) {\r\n                return nextSibling.getTokens();\r\n            }\r\n            else {\r\n                return parent.getNextTokens();\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    getTokenValue() {\r\n        return null;\r\n    }\r\n}\n\nclass ValuePattern extends Pattern {\r\n    constructor(type, name, children = []) {\r\n        super(type, name, children);\r\n    }\r\n}\n\nclass RegexValue extends ValuePattern {\r\n    constructor(name, regex) {\r\n        super(\"regex-value\", name);\r\n        this.node = null;\r\n        this.substring = \"\";\r\n        this.regexString = regex;\r\n        this.regex = new RegExp(`^${regex}`, \"g\");\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.regexString !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The regex argument needs to be a string of regex.\");\r\n        }\r\n        if (this.regexString.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The regex string argument needs to be at least one character long.\");\r\n        }\r\n        if (this.regexString.charAt(0) === \"^\") {\r\n            throw new Error(\"Invalid Arguments: The regex string cannot start with a '^' because it is expected to be in the middle of a string.\");\r\n        }\r\n        if (this.regexString.charAt(this.regexString.length - 1) === \"$\") {\r\n            throw new Error(\"Invalid Arguments: The regex string cannot end with a '$' because it is expected to be in the middle of a string.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.regex.lastIndex = 0;\r\n        this.substring = this.cursor.text.substr(this.cursor.getIndex());\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        const result = this.regex.exec(this.substring);\r\n        if (result != null && result.index === 0) {\r\n            const currentIndex = this.cursor.getIndex();\r\n            const newIndex = currentIndex + result[0].length - 1;\r\n            this.node = new ValueNode(\"regex-value\", this.name, result[0], currentIndex, newIndex);\r\n            this.cursor.index = newIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected regex pattern of '${this.regexString}' but found '${this.substring}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RegexValue(name, this.regexString);\r\n    }\r\n    getTokenValue() {\r\n        return this.name;\r\n    }\r\n    getTokens() {\r\n        return [this.name];\r\n    }\r\n}\n\nclass OptionalValue extends ValuePattern {\r\n    constructor(pattern) {\r\n        super(\"optional-value\", \"optional-value\", [pattern]);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (!(this.children[0] instanceof ValuePattern)) {\r\n            throw new Error(\"Invalid Arguments: Expected a ValuePattern.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        const mark = cursor.mark();\r\n        const node = this.children[0].parse(cursor);\r\n        if (cursor.hasUnresolvedError() || node == null) {\r\n            cursor.resolveError();\r\n            cursor.moveToMark(mark);\r\n            return null;\r\n        }\r\n        else {\r\n            cursor.addMatch(this, node);\r\n            return node;\r\n        }\r\n    }\r\n    clone() {\r\n        return new OptionalValue(this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass AndValue extends ValuePattern {\r\n    constructor(name, patterns) {\r\n        super(\"and-value\", name, patterns);\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: AndValue needs to have more than one value pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPatterns();\r\n        return this.node;\r\n    }\r\n    _tryPatterns() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n            }\r\n            if (!this._next()) {\r\n                this._processValue();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    _next() {\r\n        if (this._hasMorePatterns()) {\r\n            if (this.cursor.hasNext()) {\r\n                // If the last result was a failed optional, then don't increment the cursor.\r\n                if (this.nodes[this.nodes.length - 1] != null) {\r\n                    this.cursor.next();\r\n                }\r\n                this.index++;\r\n                return true;\r\n            }\r\n            else if (this.nodes[this.nodes.length - 1] == null) {\r\n                this.index++;\r\n                return true;\r\n            }\r\n            this._assertRestOfPatternsAreOptional();\r\n            return false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _hasMorePatterns() {\r\n        return this.index + 1 < this._children.length;\r\n    }\r\n    _assertRestOfPatternsAreOptional() {\r\n        const areTheRestOptional = this.children.every((pattern, index) => {\r\n            return index <= this.index || pattern instanceof OptionalValue;\r\n        });\r\n        if (!areTheRestOptional) {\r\n            const parseError = new ParseError(`Could not match ${this.name} before string ran out.`, this.index, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n    }\r\n    _processValue() {\r\n        if (this.cursor.hasUnresolvedError()) {\r\n            this.node = null;\r\n        }\r\n        else {\r\n            this.nodes = this.nodes.filter((node) => node != null);\r\n            const lastNode = this.nodes[this.nodes.length - 1];\r\n            const startIndex = this.mark;\r\n            const endIndex = lastNode.endIndex;\r\n            const value = this.nodes.map((node) => node.value).join(\"\");\r\n            this.node = new ValueNode(\"and-value\", this.name, value, startIndex, endIndex);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AndValue(name, this._children);\r\n    }\r\n    getTokens() {\r\n        let tokens = [];\r\n        for (let x = 0; x < this._children.length; x++) {\r\n            const child = this._children[x];\r\n            if (child instanceof OptionalValue) {\r\n                tokens = tokens.concat(child.getTokens());\r\n            }\r\n            else {\r\n                tokens = tokens.concat(child.getTokens());\r\n                break;\r\n            }\r\n        }\r\n        return tokens;\r\n    }\r\n}\n\nclass AnyOfThese extends ValuePattern {\r\n    constructor(name, characters) {\r\n        super(\"any-of-these\", name);\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.characters = characters;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.characters !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The characters argument needs to be a string of characters.\");\r\n        }\r\n        if (this.characters.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The characters argument needs to be at least one character long.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        if (this._isMatch()) {\r\n            const value = this.cursor.getChar();\r\n            const index = this.cursor.getIndex();\r\n            this.node = new ValueNode(\"any-of-these\", this.name, value, index, index);\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _isMatch() {\r\n        return this.characters.indexOf(this.cursor.getChar()) > -1;\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected one of these characters, '${this.characters}' but found '${this.cursor.getChar()}' while parsing for '${this.name}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AnyOfThese(name, this.characters);\r\n    }\r\n    getTokens() {\r\n        return this.characters.split(\"\");\r\n    }\r\n}\n\nclass Literal extends ValuePattern {\r\n    constructor(name, literal) {\r\n        super(\"literal\", name);\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.substring = \"\";\r\n        this.literal = literal;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.literal !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The literal argument needs to be a string of characters.\");\r\n        }\r\n        if (this.literal.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The literalString argument needs to be at least one character long.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n        this.substring = this.cursor.text.substring(this.mark, this.mark + this.literal.length);\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        if (this.substring === this.literal) {\r\n            this._processMatch();\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected '${this.literal}' but found '${this.substring}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    _processMatch() {\r\n        this.node = new ValueNode(\"literal\", this.name, this.substring, this.mark, this.mark + this.literal.length - 1);\r\n        this.cursor.index = this.node.endIndex;\r\n        this.cursor.addMatch(this, this.node);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new Literal(name, this.literal);\r\n    }\r\n    getTokenValue() {\r\n        return this.literal;\r\n    }\r\n    getTokens() {\r\n        return [this.getTokenValue()];\r\n    }\r\n}\n\nclass NotValue extends ValuePattern {\r\n    constructor(name, pattern) {\r\n        super(\"not-value\", name, [pattern]);\r\n        this.match = \"\";\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (!(this.children[0] instanceof Pattern)) {\r\n            throw new Error(\"Invalid Arguments: Expected the pattern to be a ValuePattern.\");\r\n        }\r\n        if (typeof this.name !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: Expected name to be a string.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.match = \"\";\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const mark = this.cursor.mark();\r\n            this.children[0].parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this.cursor.resolveError();\r\n                this.cursor.moveToMark(mark);\r\n                this.match += this.cursor.getChar();\r\n                break;\r\n            }\r\n            else {\r\n                this.cursor.moveToMark(mark);\r\n                break;\r\n            }\r\n        }\r\n        this._processMatch();\r\n    }\r\n    _processMatch() {\r\n        if (this.match.length === 0) {\r\n            const parseError = new ParseError(`Didn't find any characters that didn't match the ${this.children[0].name} pattern.`, this.mark, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n        else {\r\n            this.node = new ValueNode(\"not-value\", this.name, this.match, this.mark, this.mark);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new NotValue(name, this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return [];\r\n    }\r\n}\n\nclass OrValue extends ValuePattern {\r\n    constructor(name, patterns) {\r\n        super(\"or-value\", name, patterns);\r\n        this.index = 0;\r\n        this.errors = [];\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.parseError = null;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: OrValue needs to have more than one value pattern.\");\r\n        }\r\n        const hasOptionalChildren = this._children.some((pattern) => pattern instanceof OptionalValue);\r\n        if (hasOptionalChildren) {\r\n            throw new Error(\"OrValues cannot have optional values.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.errors = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                if (this.index + 1 < this._children.length) {\r\n                    this.cursor.resolveError();\r\n                    this.index++;\r\n                    this.cursor.moveToMark(this.mark);\r\n                }\r\n                else {\r\n                    this.node = null;\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                this.node = new ValueNode(\"or-value\", this.name, node.value, node.startIndex, node.endIndex);\r\n                this.cursor.index = this.node.endIndex;\r\n                this.cursor.addMatch(this, this.node);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new OrValue(name, this._children);\r\n    }\r\n    getTokens() {\r\n        const tokens = this._children.map((c) => c.getTokens());\r\n        const hasPrimitiveTokens = tokens.every((t) => t.every((value) => typeof value === \"string\"));\r\n        if (hasPrimitiveTokens && tokens.length > 0) {\r\n            return tokens.reduce((acc, t) => acc.concat(t), []);\r\n        }\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass RepeatValue extends ValuePattern {\r\n    constructor(name, pattern, divider) {\r\n        super(\"repeat-value\", name, divider != null ? [pattern, divider] : [pattern]);\r\n        this.nodes = [];\r\n        this.mark = 0;\r\n        this.node = null;\r\n        this._pattern = this.children[0];\r\n        this._divider = this.children[1];\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._pattern instanceof OptionalValue) {\r\n            throw new Error(\"Invalid Arguments: The pattern cannot be a optional pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.nodes = [];\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const node = this._pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this._processMatch();\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n                if (node.endIndex === this.cursor.lastIndex()) {\r\n                    this._processMatch();\r\n                    break;\r\n                }\r\n                this.cursor.next();\r\n                if (this._divider != null) {\r\n                    const mark = this.cursor.mark();\r\n                    const node = this._divider.parse(this.cursor);\r\n                    if (this.cursor.hasUnresolvedError()) {\r\n                        this.cursor.moveToMark(mark);\r\n                        this._processMatch();\r\n                        break;\r\n                    }\r\n                    else {\r\n                        this.nodes.push(node);\r\n                        this.cursor.next();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _processMatch() {\r\n        this.cursor.resolveError();\r\n        if (this.nodes.length === 0) {\r\n            const parseError = new ParseError(`Did not find a repeating match of ${this.name}.`, this.mark, this);\r\n            this.cursor.throwError(parseError);\r\n            this.node = null;\r\n        }\r\n        else {\r\n            const value = this.nodes.map((node) => node.value).join(\"\");\r\n            this.node = new ValueNode(\"repeat-value\", this.name, value, this.nodes[0].startIndex, this.nodes[this.nodes.length - 1].endIndex);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RepeatValue(name, this._pattern, this._divider);\r\n    }\r\n    getTokens() {\r\n        return this._pattern.getTokens();\r\n    }\r\n}\n\nclass CompositePattern extends Pattern {\r\n    constructor(type, name, children = []) {\r\n        super(type, name, children);\r\n    }\r\n}\n\nclass OptionalComposite extends CompositePattern {\r\n    constructor(pattern) {\r\n        super(\"optional-composite\", \"optional-composite\", [pattern]);\r\n    }\r\n    parse(cursor) {\r\n        const mark = cursor.mark();\r\n        this.mark = mark;\r\n        const node = this.children[0].parse(cursor);\r\n        if (cursor.hasUnresolvedError()) {\r\n            cursor.resolveError();\r\n            cursor.moveToMark(mark);\r\n            return null;\r\n        }\r\n        else {\r\n            if (node != null) {\r\n                cursor.addMatch(this, node);\r\n            }\r\n            return node;\r\n        }\r\n    }\r\n    clone() {\r\n        return new OptionalComposite(this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass AndComposite extends CompositePattern {\r\n    constructor(name, patterns = []) {\r\n        super(\"and-composite\", name, patterns);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: AndValue needs to have more than one value pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPatterns();\r\n        return this.node;\r\n    }\r\n    _tryPatterns() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this.cursor.moveToMark(this.mark);\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n            }\r\n            if (!this._next()) {\r\n                this._processValue();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    _next() {\r\n        if (this._hasMorePatterns()) {\r\n            if (this.cursor.hasNext()) {\r\n                // If the last result was a failed optional, then don't increment the cursor.\r\n                if (this.nodes[this.nodes.length - 1] != null) {\r\n                    this.cursor.next();\r\n                }\r\n                this.index++;\r\n                return true;\r\n            }\r\n            else if (this.nodes[this.nodes.length - 1] == null) {\r\n                this.index++;\r\n                return true;\r\n            }\r\n            this._assertRestOfPatternsAreOptional();\r\n            return false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _hasMorePatterns() {\r\n        return this.index + 1 < this._children.length;\r\n    }\r\n    _assertRestOfPatternsAreOptional() {\r\n        const areTheRestOptional = this.children.every((pattern, index) => {\r\n            return (index <= this.index ||\r\n                pattern instanceof OptionalValue ||\r\n                pattern instanceof OptionalComposite);\r\n        });\r\n        if (!areTheRestOptional) {\r\n            const parseError = new ParseError(`Could not match ${this.name} before string ran out.`, this.index, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n    }\r\n    _processValue() {\r\n        if (!this.cursor.hasUnresolvedError()) {\r\n            this.nodes = this.nodes.filter((node) => node != null);\r\n            const lastNode = this.nodes[this.nodes.length - 1];\r\n            const startIndex = this.mark;\r\n            const endIndex = lastNode.endIndex;\r\n            this.node = new CompositeNode(\"and-composite\", this.name, startIndex, endIndex);\r\n            this.node.children = this.nodes;\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this.node = null;\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AndComposite(name, this._children);\r\n    }\r\n    getTokens() {\r\n        let tokens = [];\r\n        for (let x = 0; x < this._children.length; x++) {\r\n            const child = this._children[x];\r\n            if (child instanceof OptionalValue ||\r\n                child instanceof OptionalComposite) {\r\n                tokens = tokens.concat(child.getTokens());\r\n            }\r\n            else {\r\n                tokens = tokens.concat(child.getTokens());\r\n                break;\r\n            }\r\n        }\r\n        return tokens;\r\n    }\r\n}\n\nclass OrComposite extends CompositePattern {\r\n    constructor(name, patterns) {\r\n        super(\"or-composite\", name, patterns);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: OrValue needs to have more than one value pattern.\");\r\n        }\r\n        const hasOptionalChildren = this._children.some((pattern) => pattern instanceof OptionalValue || pattern instanceof OptionalComposite);\r\n        if (hasOptionalChildren) {\r\n            throw new Error(\"OrComposite cannot have optional values.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = null;\r\n        this.index = 0;\r\n        this.node = null;\r\n        this.mark = cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        if (this.node != null) {\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            this.node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                if (this.index + 1 < this._children.length) {\r\n                    this.cursor.resolveError();\r\n                    this.index++;\r\n                    this.cursor.moveToMark(this.mark);\r\n                }\r\n                else {\r\n                    this.node = null;\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                this.cursor.index = this.node.endIndex;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new OrComposite(name, this._children);\r\n    }\r\n    getTokens() {\r\n        const tokens = this._children.map((c) => c.getTokens());\r\n        const hasPrimitiveTokens = tokens.every((t) => t.every((value) => typeof value === \"string\"));\r\n        if (hasPrimitiveTokens && tokens.length > 0) {\r\n            return tokens.reduce((acc, t) => acc.concat(t), []);\r\n        }\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass RepeatComposite extends CompositePattern {\r\n    constructor(name, pattern, divider) {\r\n        super(\"repeat-composite\", name, divider != null ? [pattern, divider] : [pattern]);\r\n        this.nodes = [];\r\n        this.mark = 0;\r\n        this.node = null;\r\n        this._pattern = this.children[0];\r\n        this._divider = this.children[1];\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._pattern instanceof OptionalComposite) {\r\n            throw new Error(\"Invalid Arguments: The pattern cannot be a optional pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.nodes = [];\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const node = this._pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError() || node == null) {\r\n                this._processMatch();\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n                if (node.endIndex === this.cursor.lastIndex()) {\r\n                    this._processMatch();\r\n                    break;\r\n                }\r\n                this.cursor.next();\r\n                if (this._divider != null) {\r\n                    const mark = this.cursor.mark();\r\n                    const node = this._divider.parse(this.cursor);\r\n                    if (this.cursor.hasUnresolvedError() || node == null) {\r\n                        this.cursor.moveToMark(mark);\r\n                        this._processMatch();\r\n                        break;\r\n                    }\r\n                    else {\r\n                        this.nodes.push(node);\r\n                        this.cursor.next();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _processMatch() {\r\n        this.cursor.resolveError();\r\n        if (this.nodes.length === 0) {\r\n            this.cursor.throwError(new ParseError(`Did not find a repeating match of ${this.name}.`, this.mark, this));\r\n            this.node = null;\r\n        }\r\n        else {\r\n            this.node = new CompositeNode(\"repeat-composite\", this.name, this.nodes[0].startIndex, this.nodes[this.nodes.length - 1].endIndex);\r\n            this.node.children = this.nodes;\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RepeatComposite(name, this._pattern, this._divider);\r\n    }\r\n    getTokens() {\r\n        return this._pattern.getTokens();\r\n    }\r\n}\n\nclass RecursivePattern extends Pattern {\r\n    constructor(name) {\r\n        super(\"recursive\", name);\r\n        this.pattern = null;\r\n        this.isRecursing = false;\r\n    }\r\n    getPattern() {\r\n        return this._climb(this.parent, (pattern) => {\r\n            if (pattern == null) {\r\n                return false;\r\n            }\r\n            return pattern.name === this.name;\r\n        });\r\n    }\r\n    _climb(pattern, isMatch) {\r\n        if (isMatch(pattern)) {\r\n            return pattern;\r\n        }\r\n        else {\r\n            if (pattern && pattern.parent != null) {\r\n                return this._climb(pattern.parent, isMatch);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        if (this.pattern == null) {\r\n            const pattern = this.getPattern();\r\n            if (pattern == null) {\r\n                cursor.throwError(new ParseError(`Couldn't find parent pattern to recursively parse, with the name ${this.name}.`, cursor.index, this));\r\n                return null;\r\n            }\r\n            this.pattern = pattern.clone();\r\n            this.pattern.parent = this;\r\n        }\r\n        const node = this.pattern.parse(cursor);\r\n        if (!cursor.hasUnresolvedError() && node != null) {\r\n            cursor.addMatch(this, node);\r\n        }\r\n        return node;\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RecursivePattern(name);\r\n    }\r\n    getTokenValue() {\r\n        var _a;\r\n        return ((_a = this.getPattern()) === null || _a === void 0 ? void 0 : _a.getTokenValue()) || null;\r\n    }\r\n    getTokens() {\r\n        var _a;\r\n        if (!this.isRecursing) {\r\n            this.isRecursing = true;\r\n            const tokens = ((_a = this.getPattern()) === null || _a === void 0 ? void 0 : _a.getTokens()) || [];\r\n            this.isRecursing = false;\r\n            return tokens;\r\n        }\r\n        return [];\r\n    }\r\n}\n\nclass TextSuggester {\r\n    constructor() {\r\n        this.cursor = null;\r\n        this.result = null;\r\n        this.text = \"\";\r\n        this.match = null;\r\n        this.error = null;\r\n        this.patternMatch = null;\r\n        this.matchedText = \"\";\r\n        this.rootPattern = null;\r\n        this.tokens = {\r\n            startIndex: 0,\r\n            values: [],\r\n        };\r\n        this.options = [];\r\n        this.parseStack = [];\r\n    }\r\n    suggest(text, pattern) {\r\n        var _a, _b, _c;\r\n        this.reset();\r\n        this.text = text;\r\n        this.rootPattern = pattern;\r\n        // If no text all options are available.\r\n        if (text.length === 0) {\r\n            return {\r\n                pattern: null,\r\n                astNode: null,\r\n                match: null,\r\n                error: null,\r\n                options: {\r\n                    startIndex: 0,\r\n                    values: pattern.getTokens(),\r\n                },\r\n                isComplete: false,\r\n                parseStack: [],\r\n            };\r\n        }\r\n        this.parse();\r\n        this.saveParseStack();\r\n        this.saveMatchedText();\r\n        this.saveMatch();\r\n        this.saveError();\r\n        this.saveOptions();\r\n        this.saveNextToken();\r\n        return {\r\n            pattern: ((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.pattern) || null,\r\n            astNode: ((_b = this.patternMatch) === null || _b === void 0 ? void 0 : _b.astNode) || null,\r\n            match: this.match,\r\n            error: this.error,\r\n            options: this.tokens,\r\n            isComplete: ((_c = this.cursor) === null || _c === void 0 ? void 0 : _c.didSuccessfullyParse()) || false,\r\n            parseStack: this.parseStack,\r\n        };\r\n    }\r\n    reset() {\r\n        this.cursor = null;\r\n        this.result = null;\r\n        this.text = \"\";\r\n        this.match = null;\r\n        this.error = null;\r\n        this.patternMatch = null;\r\n        this.matchedText = \"\";\r\n        this.rootPattern = null;\r\n        this.tokens = {\r\n            startIndex: 0,\r\n            values: [],\r\n        };\r\n        this.options = [];\r\n        this.parseStack = [];\r\n    }\r\n    parse() {\r\n        var _a;\r\n        this.rootPattern = this.rootPattern;\r\n        this.cursor = new Cursor(this.text || \"\");\r\n        this.cursor.startRecording();\r\n        this.result = ((_a = this.rootPattern) === null || _a === void 0 ? void 0 : _a.parse(this.cursor)) || null;\r\n        this.patternMatch = this.cursor.lastMatch;\r\n    }\r\n    saveParseStack() {\r\n        var _a;\r\n        this.parseStack = ((_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.getLastParseStack()) || [];\r\n    }\r\n    saveMatchedText() {\r\n        var _a, _b;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode) != null) {\r\n            this.matchedText =\r\n                ((_b = this.text) === null || _b === void 0 ? void 0 : _b.substring(0, this.patternMatch.astNode.endIndex + 1)) || \"\";\r\n        }\r\n    }\r\n    saveMatch() {\r\n        var _a;\r\n        const node = (_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode;\r\n        if (node == null) {\r\n            this.match = null;\r\n            return;\r\n        }\r\n        let endIndex = this.matchedText.length - 1;\r\n        this.match = {\r\n            text: this.matchedText,\r\n            startIndex: 0,\r\n            endIndex: endIndex,\r\n        };\r\n    }\r\n    saveError() {\r\n        var _a;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode) == null) {\r\n            this.error = {\r\n                startIndex: 0,\r\n                endIndex: this.text.length - 1,\r\n                text: this.text,\r\n            };\r\n            return this;\r\n        }\r\n        if (this.patternMatch != null &&\r\n            this.text.length > this.matchedText.length) {\r\n            const difference = this.text.length - this.matchedText.length;\r\n            const startIndex = this.patternMatch.astNode.endIndex + 1;\r\n            const endIndex = startIndex + difference - 1;\r\n            this.error = {\r\n                startIndex: startIndex,\r\n                endIndex: endIndex,\r\n                text: this.text.substring(startIndex, endIndex + 1),\r\n            };\r\n            return;\r\n        }\r\n        else {\r\n            this.error = null;\r\n            return;\r\n        }\r\n    }\r\n    saveNextToken() {\r\n        var _a, _b, _c, _d;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.pattern) === this.rootPattern &&\r\n            ((_b = this.cursor) === null || _b === void 0 ? void 0 : _b.didSuccessfullyParse())) {\r\n            this.tokens = null;\r\n            return;\r\n        }\r\n        if (((_c = this.patternMatch) === null || _c === void 0 ? void 0 : _c.astNode) == null) {\r\n            let options = (_d = this.rootPattern) === null || _d === void 0 ? void 0 : _d.getTokens();\r\n            const parts = this.text.split(\" \").filter((part) => {\r\n                return part.length > 0;\r\n            });\r\n            options = options === null || options === void 0 ? void 0 : options.filter((option) => {\r\n                return parts.some((part) => {\r\n                    return option.indexOf(part) > -1;\r\n                });\r\n            });\r\n            if ((options === null || options === void 0 ? void 0 : options.length) === 0) {\r\n                this.tokens = null;\r\n                return;\r\n            }\r\n            this.tokens = {\r\n                startIndex: 0,\r\n                values: options || [],\r\n            };\r\n            return;\r\n        }\r\n        const options = this.options;\r\n        let startIndex = this.matchedText.length;\r\n        if (this.matchedText.length < this.text.length) {\r\n            const leftOver = this.text.substring(this.matchedText.length);\r\n            const partialMatchOptions = options\r\n                .filter((option) => {\r\n                return option.indexOf(leftOver) === 0;\r\n            })\r\n                .map((option) => {\r\n                return option.substring(leftOver.length);\r\n            });\r\n            if (partialMatchOptions.length === 0) {\r\n                this.tokens = null;\r\n                return;\r\n            }\r\n            else {\r\n                if (this.match == null) {\r\n                    return;\r\n                }\r\n                this.match = {\r\n                    text: this.match.text + leftOver,\r\n                    startIndex: this.match.startIndex,\r\n                    endIndex: this.match.endIndex + leftOver.length,\r\n                };\r\n                this.error = null;\r\n                this.tokens = {\r\n                    startIndex: this.match.endIndex + 1,\r\n                    values: partialMatchOptions,\r\n                };\r\n                return;\r\n            }\r\n        }\r\n        this.tokens = {\r\n            startIndex,\r\n            values: options,\r\n        };\r\n    }\r\n    saveOptions() {\r\n        var _a;\r\n        const furthestMatches = (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.astNodes.reduce((acc, node, index) => {\r\n            if (node.endIndex === acc.furthestTextIndex) {\r\n                acc.nodeIndexes.push(index);\r\n            }\r\n            else if (node.endIndex > acc.furthestTextIndex) {\r\n                acc.furthestTextIndex = node.endIndex;\r\n                acc.nodeIndexes = [index];\r\n            }\r\n            return acc;\r\n        }, { furthestTextIndex: -1, nodeIndexes: [] });\r\n        const matches = furthestMatches.nodeIndexes.reduce((acc, index) => {\r\n            var _a;\r\n            const pattern = (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.patterns[index];\r\n            const tokens = pattern === null || pattern === void 0 ? void 0 : pattern.getNextTokens();\r\n            tokens === null || tokens === void 0 ? void 0 : tokens.forEach((token) => {\r\n                acc[token] = true;\r\n            });\r\n            return acc;\r\n        }, {});\r\n        this.options = Object.keys(matches);\r\n    }\r\n    static suggest(text, pattern) {\r\n        return new TextSuggester().suggest(text, pattern);\r\n    }\r\n}\n\nexport { AndComposite, AndValue, AnyOfThese, CompositeNode, CompositePattern, Cursor, Literal, Node, NotValue, OptionalComposite, OptionalValue, OrComposite, OrValue, ParseError, Pattern, RecursivePattern, RegexValue, RepeatComposite, RepeatValue, TextSuggester, ValueNode, ValuePattern };\n//# sourceMappingURL=index.esm.js.map\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst divider = new RegexValue(\"divider\", \"\\\\s*[,]\\\\s*\");\n\nexport default divider;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst number = new RegexValue(\n  \"number\",\n  \"[-+]?[0-9]*[.]?[0-9]+([eE][-+]?[0-9]+)?\"\n);\n\nexport default number;\n","import { AndComposite, RegexValue } from \"clarity-pattern-parser\";\n\nimport number from \"./number\";\n\nconst unitType = new RegexValue(\"unit-type\", \"[a-zA-Z%]+\");\nconst unit = new AndComposite(\"unit\", [number, unitType]);\n\nexport default unit;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst hex = new RegexValue(\"hex\", \"#[0-9a-fA-F]{6}|#[0-9a-fA-F]{3}\");\n\nexport default hex;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst name = new RegexValue(\"name\", \"[a-zA-Z]+[a-zA-Z0-9_-]*\");\n\nexport default name;\n","import { Literal, RepeatValue } from \"clarity-pattern-parser\";\nimport { OptionalValue } from \"clarity-pattern-parser\";\n\nconst space = new Literal(\"optional-space\", \" \");\nconst spaces = new RepeatValue(\"optional-spaces\", space);\nconst optionalSpaces = new OptionalValue(spaces);\n\nexport default optionalSpaces;\n","import {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n  RecursivePattern,\n  OptionalComposite\n} from \"clarity-pattern-parser\";\n\nimport name from \"./name\";\nimport optionalSpaces from \"./optionalSpaces\";\nimport divider from \"./divider\";\n\nconst openParen = new Literal(\"open-paren\", \"(\");\nconst closeParen = new Literal(\"close-paren\", \")\");\nconst values = new RecursivePattern(\"values\");\nconst args = new RepeatComposite(\"arguments\", values, divider);\nconst optionalArgs = new OptionalComposite(args);\n\nconst method = new AndComposite(\"method\", [\n  name,\n  openParen,\n  optionalSpaces,\n  optionalArgs,\n  optionalSpaces,\n  closeParen\n]);\n\nexport default method;\n","import divider from \"./divider\";\nimport number from \"./number\";\nimport optionalSpaces from \"./optionalSpaces\";\n\nimport {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n} from \"clarity-pattern-parser\";\n\nconst openBracket = new Literal(\"open-square-bracket\", \"[\");\nconst closeBracket = new Literal(\"close-square-bracket\", \"]\");\nconst items = new RepeatComposite(\"items\", number, divider);\n\nconst array = new AndComposite(\"array\", [\n  openBracket,\n  optionalSpaces,\n  items,\n  optionalSpaces,\n  closeBracket,\n]);\n\nexport default array;\n","import { OrComposite } from \"clarity-pattern-parser\";\nimport unit from \"./unit\";\nimport hex from \"./hex\";\nimport number from \"./number\";\nimport method from \"./method\";\nimport name from \"./name\";\nimport array from \"./array\";\n\nconst value = new OrComposite(\"value\", [\n  array,\n  hex,\n  method,\n  unit,\n  number,\n  name,\n]);\n\nexport default value;\n","import { Literal, RepeatValue } from \"clarity-pattern-parser\";\n\nconst space = new Literal(\"space\", \" \");\nconst spaces = new RepeatValue(\"spaces\", space);\n\nexport default spaces;\n","import { RepeatComposite } from \"clarity-pattern-parser\";\nimport value from \"./value\";\nimport spaces from \"./spaces\";\n\nconst values = new RepeatComposite(\"values\", value, spaces);\n\nexport default values;\n","import { RepeatComposite } from \"clarity-pattern-parser\";\nimport divider from \"./divider\";\nimport values from \"./values\";\n\nconst cssValue = new RepeatComposite(\"css-value\", values, divider);\n\nexport default cssValue;\n","import { Node, ValueNode } from \"clarity-pattern-parser\";\nimport { CompositeNode } from \"clarity-pattern-parser\";\n\nconst hexRegEx = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})|([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i;\n\nexport default class HexColor {\n  public hexString: any;\n  public rgba: any;\n\n  constructor(hexString: string) {\n    this.setHex(hexString);\n  }\n\n  setHex(hexString: string) {\n    this.hexString = hexString;\n    this.normalizeHex();\n    this.saveRgba();\n  }\n\n  saveRgba() {\n    const hex = this.hexString;\n    hexRegEx.lastIndex = 0;\n    const result = hexRegEx.exec(hex);\n    this.rgba = result\n      ? [\n          parseInt(result[1], 16),\n          parseInt(result[2], 16),\n          parseInt(result[3], 16),\n          1,\n        ]\n      : [0, 0, 0, 1];\n  }\n\n  toComplexNode() {\n    const children = this.rgba\n      .map((number: number) => {\n        const valuesNode = new CompositeNode(\"repeat-composite\", \"values\");\n        valuesNode.children.push(\n          new ValueNode(\"regex-value\", \"number\", number.toString())\n        );\n\n        return valuesNode;\n      })\n      .reduce((acc: Node[], valueNode: Node) => {\n        acc.push(valueNode);\n        acc.push(new ValueNode(\"regex-value\", \"divider\", \", \"));\n        return acc;\n      }, []);\n\n    const node = new CompositeNode(\"and-composite\", \"method\");\n    const name = new ValueNode(\"regex-value\", \"name\", \"rgba\");\n    const openParen = new ValueNode(\"literal\", \"open-paren\", \"(\");\n    const args = new CompositeNode(\"repeat-composite\", \"arguments\");\n    const closeParen = new ValueNode(\"literal\", \"close-paren\", \")\");\n\n    args.children = children;\n\n    node.children.push(name, openParen, args, closeParen);\n\n    return node;\n  }\n\n  toValueNode() {\n    return new ValueNode(\"literal\", \"hex\", this.hexString);\n  }\n\n  toRgbString() {\n    return `rgb(${this.rgba[0]},${this.rgba[1]},${this.rgba[2]})`;\n  }\n\n  normalizeHex() {\n    if (this.hexString.length === 4) {\n      this.hexString = this.hexString + this.hexString.substring(1);\n    }\n  }\n\n  numberToHex(number: number) {\n    if (number > 255) {\n      number = 255;\n    }\n\n    if (number < 0) {\n      number = 0;\n    }\n\n    let hex = number.toString(16);\n    if (hex.length < 2) {\n      hex = \"0\" + hex;\n    }\n\n    return hex;\n  }\n\n  toHexString() {\n    const rgbArray = this.rgba;\n    const red = this.numberToHex(rgbArray[0]);\n    const green = this.numberToHex(rgbArray[1]);\n    const blue = this.numberToHex(rgbArray[2]);\n\n    return `#${red}${green}${blue}`;\n  }\n}\n","import Visitor from \"./Visitor\";\nimport HexColor from \"./HexColor\";\nimport { Node } from \"clarity-pattern-parser\";\n\nconst filterOutSpaces = (child: Node) => child.name !== \"optional-spaces\";\n\nexport default class TreeNormalizer {\n  public visitor: any;\n\n  constructor() {\n    this.visitNode = this.visitNode.bind(this);\n    this.visitor = new Visitor(this.visitNode);\n  }\n\n  visitNode(node: Node) {\n    if (node.isComposite) {\n      this.removeOptionalSpaces(node);\n      this.replaceHex(node);\n      this.removeUnnecessaryDividers(node);\n      this.removeUnnecessaryValuesSpaces(node);\n    }\n\n    this.collapseWhiteSpace(node);\n    this.removeSpacesAroundDividers(node);\n  }\n\n  collapseWhiteSpace(node: Node) {\n    if (node.name === \"spaces\") {\n      node.value = \" \";\n    }\n  }\n\n  removeSpacesAroundDividers(node: Node) {\n    if (node.name === \"divider\") {\n      node.value = node.value.trim() + \" \";\n    }\n  }\n\n  removeUnnecessaryDividers(node: Node) {\n    const children = node.children;\n\n    while (\n      children.length > 0 &&\n      children[children.length - 1].name === \"divider\"\n    ) {\n      children.pop();\n    }\n  }\n\n  removeUnnecessaryValuesSpaces(node: Node) {\n    const children = node.children;\n\n    while (\n      node.name === \"values\" &&\n      children.length > 0 &&\n      children[children.length - 1].name === \"spaces\"\n    ) {\n      children.pop();\n    }\n  }\n\n  removeOptionalSpaces(node: Node) {\n    node.children = node.children.filter(filterOutSpaces);\n  }\n\n  replaceHex(node: Node) {\n    node.children = node.children.map((child) => {\n      if (child.name === \"hex\") {\n        const hexColor = new HexColor(child.value);\n        return hexColor.toComplexNode();\n      }\n      return child;\n    });\n  }\n\n  normalize(node: Node) {\n    this.visitor.visitDown(node);\n    return node;\n  }\n}\n","import cssValue from \"./patterns/cssValue\";\nimport TreeNormalizer from \"./TreeNormalizer\";\nimport TreeUtility from \"./TreeUtility\";\nimport { Cursor, Node } from \"clarity-pattern-parser\";\n\nconst treeUtility = new TreeUtility();\nconst treeNormalizer = new TreeNormalizer();\n\nexport default class ParsedValue {\n  public value: string;\n  public graph: Node;\n  public graphHash: string;\n\n  constructor(value: string, graph?: Node, graphHash?: string) {\n    this.value = value;\n\n    if (typeof graph === \"undefined\") {\n      const node = cssValue.parse(new Cursor(value));\n      if (node == null) {\n        throw new Error(\"Couldn't parse css value.\");\n      }\n\n      this.graph = treeNormalizer.normalize(node);\n      treeUtility.convertNumberNodesToNumberValues(this.graph);\n    } else {\n      this.graph = graph;\n    }\n\n    if (typeof graphHash === \"undefined\") {\n      this.graphHash = treeUtility.sequenceHash(this.graph).toString();\n    } else {\n      this.graphHash = graphHash;\n    }\n  }\n\n  clone() {\n    return new ParsedValue(this.value, this.graph.clone(), this.graphHash);\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport { KeyframeConfig } from \"./Keyframe\";\nimport { SimpleKeyframeConfig } from \"./KeyframeUtility\";\nimport ParsedValue from \"./ParsedValue\";\n\nexport default class KeyframeConfigValidator {\n\tpublic config: any;\n\n  constructor() {\n    this.config = null;\n  }\n\n  setConfig(config: KeyframeConfig | SimpleKeyframeConfig) {\n    this.config = config;\n  }\n\n  isSimpleConfig() {\n    return this.hasValidToAsString();\n  }\n\n  validateConfig() {\n    if (this.config == null) {\n      throw new Error(\n        `Invalid Arguments: The \"config\" cannot be null or undefined.`\n      );\n    }\n  }\n\n  validate(config: KeyframeConfig) {\n    this.setConfig(config);\n    this.validateName();\n    this.validateProperty();\n    this.validateToAsParsedValue();\n    this.validateControlsAsParsedValues();\n    this.validateFromAsParsedValue();\n    this.validateStartAt();\n    this.validateEndAt();\n    this.validateEasingFunction();\n    this.validateNodes();\n  }\n\n  validateName() {\n    this.validateConfig();\n\n    if (!this.hasValidName()) {\n      throw new Error(\n        `Invalid Arguments: The \"name\" property needs to be an string.`\n      );\n    }\n  }\n\n  hasValidName() {\n    return typeof this.config.name === \"string\";\n  }\n\n  validateProperty() {\n    this.validateConfig();\n\n    if (!this.hasValidProperty()) {\n      throw new Error(`The \"property\" property needs to be a string.`);\n    }\n  }\n\n  hasValidProperty() {\n    return typeof this.config.property === \"string\";\n  }\n\n  validateToAsString() {\n    this.validateConfig();\n\n    if (!this.hasValidToAsString()) {\n      throw new Error(\n        `The \"to\" property needs to be a string, but found ${this.config.to}.`\n      );\n    }\n  }\n\n  hasValidToAsString() {\n    return typeof this.config.to === \"string\";\n  }\n\n  validateToAsParsedValue() {\n    this.validateConfig();\n\n    if (!this.hasValidToAsParsedValue()) {\n      throw new Error(\n        `The \"to\" property needs to be a ParsedValue, but found ${this.config.to}.`\n      );\n    }\n  }\n\n  hasValidToAsParsedValue() {\n    return this.config.to instanceof ParsedValue;\n  }\n\n  validateFromAsString() {\n    this.validateConfig();\n\n    if (typeof this.config.from !== \"string\") {\n      throw new Error(\n        `The \"from\" property needs to be a string, but found ${this.config.from}.`\n      );\n    }\n  }\n\n  hasValidFromAsString() {\n    return typeof this.config.from === \"string\";\n  }\n\n  validateFromAsParsedValue() {\n    this.validateConfig();\n\n    if (!this.hasValidFromAsParsedValue()) {\n      throw new Error(\n        `The \"from\" property needs to be a ParsedValue, but found ${this.config.from}.`\n      );\n    }\n  }\n\n  hasValidFromAsParsedValue() {\n    return this.config.from instanceof ParsedValue;\n  }\n\n  validateControlsAsStrings() {\n    this.validateConfig();\n\n    if (!this.hasValidControlsAsStrings()) {\n      throw new Error(\n        `The \"controls\" property needs to be made of strings, but found ${this.config.controls}.`\n      );\n    }\n  }\n\n  hasValidControlsAsStrings() {\n    return (\n      Array.isArray(this.config.controls) &&\n      this.config.controls.every((control: string) => typeof control === \"string\")\n    );\n  }\n\n  validateControlsAsParsedValues() {\n    this.validateConfig();\n\n    if (!this.hasValidControlsAsParsedValues()) {\n      throw new Error(\n        `The \"controls\" property needs to be made of ParsedValues, but found ${this.config.controls}.`\n      );\n    }\n  }\n\n  hasValidControlsAsParsedValues() {\n    return this.config.controls.every(\n      (control: ParsedValue) => control instanceof ParsedValue\n    );\n  }\n\n  validateStartAt() {\n    this.validateConfig();\n\n    if (!this.hasValidStartAt) {\n      throw new Error(\n        `The \"startAt\" property must be a number between 0 and 1.`\n      );\n    }\n  }\n\n  hasValidStartAt() {\n    return (\n      typeof this.config.startAt === \"number\" &&\n      this.config.startAt >= 0 &&\n      this.config.startAt <= 1\n    );\n  }\n\n  validateEndAt() {\n    this.validateConfig();\n\n    if (!this.hasValidEndAt()) {\n      throw new Error(`The \"endAt\" property must be a number between 0 and 1.`);\n    }\n  }\n\n  hasValidEndAt() {\n    return (\n      typeof this.config.endAt === \"number\" &&\n      this.config.endAt >= 0 &&\n      this.config.endAt <= 1\n    );\n  }\n\n  validateEasingString() {\n    this.validateConfig();\n\n    if (!this.hasValidEasingString()) {\n      throw new Error(`The \"easing\" property must be a string.`);\n    }\n  }\n\n  hasValidEasingString() {\n    return typeof this.config.easing === \"string\";\n  }\n\n  validateEasingFunction() {\n    this.validateConfig();\n\n    if (!this.hasValidEasingFunction()) {\n      throw new Error(`The \"easing\" property must be a function.`);\n    }\n  }\n\n  hasValidEasingFunction() {\n    return typeof this.config.easing === \"function\";\n  }\n\n  validateNodes() {\n    this.validateConfig();\n    const config = this.config;\n\n    if (!this.areGraphStructuresEqual()) {\n      throw new Error(\n        `Invalid Keyframe: The value types that are being animated do not match. From: ${JSON.stringify(\n          config.from.value\n        )}, To:${JSON.stringify(config.to.value)}, Controls: ${JSON.stringify(\n          config.controls.map((v: Node) => v.value)\n        )}`\n      );\n    }\n  }\n\n  areGraphStructuresEqual() {\n    let allStructuresAreEqual = true;\n    const config = this.config;\n\n    if (config.to.graphHash !== config.from.graphHash) {\n      allStructuresAreEqual = false;\n    }\n\n    for (let x = 0; x < config.controls.length; x++) {\n      const value = config.controls[x];\n\n      if (value.graphHash !== config.from.graphHash) {\n        allStructuresAreEqual = false;\n        break;\n      }\n    }\n\n    return allStructuresAreEqual;\n  }\n}\n","import easings, {\n  EasingFunction,\n  EasingNames as EasingAsStrings,\n} from \"./easings\";\nimport { KeyframeConfig } from \"./Keyframe\";\nimport KeyframeConfigValidator from \"./KeyframeConfigValidator\";\nimport ParsedValue from \"./ParsedValue\";\n\nconst validator = new KeyframeConfigValidator();\n\nexport interface SimpleKeyframeConfig {\n  name: string;\n  property: string;\n  to: string;\n  from: string;\n  endAt: number;\n  startAt: number;\n  controls?: string[];\n  easing?: EasingAsStrings | EasingFunction;\n  value?: string;\n}\n\nexport default class KeyframeUtility {\n  public config!: SimpleKeyframeConfig;\n  public result!: KeyframeConfig;\n\n  private _setConfig(config: SimpleKeyframeConfig) {\n    this.config = config;\n    this.result = {} as any;\n    validator.setConfig(config);\n  }\n\n  normalizeConfig(config: SimpleKeyframeConfig) {\n    this._setConfig(config);\n    this._normalizeName();\n    this._normalizeProperty();\n    this._normalizeValue();\n    this._normalizeFrom();\n    this._normalizeControls();\n    this._normalizeTo();\n    this._normalizeStartAt();\n    this._normalizeEndAt();\n    this._normalizeEasing();\n\n    return this.result;\n  }\n\n  private _normalizeName() {\n    this.result.name = this.config.name;\n  }\n\n  private _normalizeProperty() {\n    this.result.property = this.config.property;\n  }\n\n  private _normalizeValue() {\n    if (this.config.value != null) {\n      this.config.to = this.config.value;\n      this.config.from = this.config.value;\n    }\n  }\n\n  private _normalizeFrom() {\n    if (validator.hasValidFromAsString()) {\n      this.result.from = new ParsedValue(this.config.from);\n    } else {\n      validator.validateFromAsString();\n    }\n  }\n\n  private _normalizeControls() {\n    if (!Array.isArray(this.config.controls)) {\n      this.config.controls = [];\n    }\n\n    if (validator.hasValidControlsAsStrings()) {\n      this.result.controls = this.config.controls.map(\n        (control: string) => new ParsedValue(control)\n      );\n    } else {\n      validator.validateControlsAsStrings();\n    }\n  }\n\n  private _normalizeTo() {\n    if (validator.hasValidToAsString()) {\n      this.result.to = new ParsedValue(this.config.to);\n    } else {\n      validator.validateToAsString();\n    }\n  }\n\n  private _normalizeStartAt() {\n    if (validator.hasValidStartAt()) {\n      this.result.startAt = this.config.startAt;\n    } else {\n      this.result.startAt = 0;\n    }\n  }\n\n  private _normalizeEndAt() {\n    if (validator.hasValidEndAt()) {\n      this.result.endAt = this.config.endAt;\n    } else {\n      this.result.endAt = 1;\n    }\n  }\n\n  private _normalizeEasing() {\n    if (\n      !validator.hasValidEasingString() &&\n      !validator.hasValidEasingFunction()\n    ) {\n      this.result.easing = easings.linear;\n    } else if (validator.hasValidEasingString()) {\n      this.result.easing =\n        (easings as any)[this.config.easing as EasingAsStrings] ||\n        easings.linear;\n    } else if (validator.hasValidEasingFunction()) {\n      this.result.easing = this.config.easing as EasingFunction;\n    }\n  }\n}\n","import easings, { EasingFunction } from \"./easings\";\nimport KeyframeConfigValidator from \"./KeyframeConfigValidator\";\nimport KeyframeUtility, { SimpleKeyframeConfig } from \"./KeyframeUtility\";\nimport ParsedValue from \"./ParsedValue\";\n\nconst validator = new KeyframeConfigValidator();\nconst utility = new KeyframeUtility();\n\nexport interface KeyframeConfig {\n  name: string;\n  property: string;\n  to: ParsedValue;\n  from: ParsedValue;\n  endAt: number;\n  startAt: number;\n  controls?: ParsedValue[];\n  easing?: EasingFunction;\n}\n\nexport default class Keyframe {\n  public name: string;\n  public property: string;\n  public to: ParsedValue;\n  public from: ParsedValue;\n  public result: ParsedValue;\n  public startAt: number;\n  public endAt: number;\n  public controls: ParsedValue[];\n  public easing: EasingFunction;\n\n  constructor(config: KeyframeConfig) {\n    validator.setConfig(config);\n    validator.validate(config);\n\n    this.name = config.name;\n    this.property = config.property;\n    this.to = config.to;\n    this.from = config.from;\n    this.result = config.from.clone();\n    this.startAt = config.startAt;\n    this.endAt = config.endAt;\n    this.controls = config.controls || [];\n    this.easing = config.easing || easings.linear;\n  }\n\n  static fromSimpleConfig(config: SimpleKeyframeConfig) {\n    return new Keyframe(utility.normalizeConfig(config));\n  }\n}\n","import BezierCurve from \"./BezierCurve\";\n\nconst easingOutMap = {\n  linear: [1],\n  quad: [1, 1],\n  cubic: [1, 1, 1],\n  quart: [1, 1, 1, 1],\n  back: [0, 0, -0.5],\n  quint: [1, 1, 1, 1, 1],\n  expo: [1, 1, 1, 1, 1, 1],\n  circ: [0.65, 0.75, 0.85, 0.95, 1, 1, 1, 1],\n  elastic: [2, 2, -1, 1.5, 1.5, 0.75, 1.25, 0.85, 1, 1, 1],\n};\n\nconst easingInMap = {\n  linear: [0],\n  quad: [0, 0],\n  cubic: [0, 0, 0],\n  quart: [0, 0, 0, 0],\n  back: [1.5, 1, 1],\n  quint: [0, 0, 0, 0, 0],\n  expo: [0, 0, 0, 0, 0, 0],\n  circ: [0, 0, 0, 0, 0.05, 0.15, 0.25, 0.35],\n  elastic: [0, 0, 0, 0.15, -0.25, 0.25, -0.5, -0.5, 2, -1, -1],\n};\n\nexport type IEasingNames =\n  | \"quad\"\n  | \"cubic\"\n  | \"quart\"\n  | \"back\"\n  | \"quint\"\n  | \"expo\"\n  | \"circ\"\n  | \"elastic\"\n  | \"linear\";\n\nexport default function createDynamicEasing(\n  easingIn: IEasingNames,\n  easingOut: IEasingNames\n) {\n  const points = [...easingInMap[easingIn], ...easingOutMap[easingOut]];\n  const bezierCurve = new BezierCurve(points);\n\n  return (percentage: number) => {\n    return bezierCurve.valueAt(percentage);\n  };\n}\n","import Animator from \"./Animator\";\nimport Keyframe from \"./Keyframe\";\nimport { SimpleKeyframeConfig } from \"./KeyframeUtility\";\nimport ParsedValue from \"./ParsedValue\";\nimport createDynamicEasing, { IEasingNames } from \"./createDynamicEasing\";\n\nconst sortAsc = (animatorA: Animator, animatorB: Animator) => {\n  return animatorA.keyframe.startAt - animatorB.keyframe.startAt;\n};\n\ntype AnimationState = {\n  [key: string]: { [key: string]: ParsedValue };\n};\n\nexport interface IComplexKeyframeValue {\n  value: string;\n  controlsIn?: string[];\n  controlsOut?: string[];\n  easeIn?: IEasingNames;\n  easeOut?: IEasingNames;\n}\n\nexport type IAnimationKeyframeValue = string | IComplexKeyframeValue;\n\nexport interface IAnimationKeyframes {\n  [key: string]: {\n    [key: string]: IAnimationKeyframeValue;\n  };\n  from: {\n    [key: string]: IAnimationKeyframeValue;\n  };\n  to: {\n    [key: string]: IAnimationKeyframeValue;\n  };\n}\n\nconst sortPercentages = (keyA: string, keyB: string) => {\n  if (keyA === \"from\") {\n    return -1;\n  }\n\n  if (keyB === \"from\") {\n    return 1;\n  }\n\n  if (keyA === \"to\") {\n    return 1;\n  }\n\n  if (keyB === \"to\") {\n    return -1;\n  }\n\n  const keyANumber = parseInt(keyA, 10);\n  const keyBNumber = parseInt(keyB, 10);\n\n  if (keyANumber < keyBNumber) {\n    return -1;\n  } else if (keyANumber > keyBNumber) {\n    return 1;\n  }\n\n  return 0;\n};\n\nfunction getDecimalFromPercentage(percentage: string) {\n  let decimal = parseInt(percentage, 10) / 100;\n\n  decimal = Math.max(0, decimal);\n  decimal = Math.min(1, decimal);\n\n  return decimal;\n}\n\nexport default class Animation {\n  public animators: Animator[] = [];\n  public _time: number = 0;\n  public _currentValues!: AnimationState;\n\n  constructor(keyframes: Keyframe[] | SimpleKeyframeConfig[]) {\n    this.initialize(keyframes);\n  }\n\n  initialize(keyframes: Keyframe[] | SimpleKeyframeConfig[]) {\n    this._currentValues = {};\n\n    this.animators = keyframes\n      .map((keyframe: any) => {\n        if (keyframe instanceof Keyframe) {\n          return keyframe;\n        } else {\n          return Keyframe.fromSimpleConfig(keyframe);\n        }\n      })\n      .map((keyframe) => new Animator(keyframe));\n\n    this._createCurrentValues();\n\n    // Sort by time.\n    this.animators.sort(sortAsc);\n  }\n\n  private _createCurrentValues() {\n    this._currentValues = this.animators.reduce(\n      (results: AnimationState, animator) => {\n        const name = animator.keyframe.name;\n        const property = animator.keyframe.property;\n\n        let keyframe = results[name];\n\n        if (keyframe == null) {\n          keyframe = results[name] = {};\n        }\n\n        if (keyframe[property] == null) {\n          keyframe[property] = animator.keyframe.result.clone();\n        }\n\n        return results;\n      },\n      {}\n    );\n  }\n\n  private _assignValue(keyframe: Keyframe) {\n    const currentValue = this._currentValues[keyframe.name][keyframe.property];\n\n    currentValue.value = keyframe.result.value;\n    currentValue.graph = keyframe.result.graph;\n    currentValue.graphHash = keyframe.result.graphHash;\n  }\n\n  private _saveCurrentValues() {\n    const visitedMap = new Map();\n    const animators = this.animators;\n    const length = animators.length;\n\n    // Assign all values at least once.\n    // This initials values beyond the time we are at.\n    for (let x = 0; x < length; x++) {\n      const keyframe = animators[x].keyframe;\n      const key = `${keyframe.name}|${keyframe.property}`;\n\n      if (!visitedMap.has(key)) {\n        visitedMap.set(key, true);\n        this._assignValue(keyframe);\n      }\n    }\n\n    // Assign if the value of the start at was before the time now.\n    // Since we have it sorted, the most current will win.\n    for (let x = 0; x < length; x++) {\n      const keyframe = animators[x].keyframe;\n\n      if (keyframe.startAt <= this._time) {\n        this._assignValue(keyframe);\n      }\n    }\n  }\n\n  update(time: number) {\n    this._time = time;\n    // Update all keyframes\n    this.animators.forEach((animator) => {\n      animator.update(time);\n    });\n\n    this._saveCurrentValues();\n\n    return this;\n  }\n\n  getCurrentValues() {\n    return this._currentValues;\n  }\n\n  merge(animation: Animation) {\n    const oldKeyframes = this.animators.map((a) => a.keyframe);\n    const newKeyframes = animation.animators.map((a) => a.keyframe);\n\n    this.initialize([...oldKeyframes, ...newKeyframes]);\n\n    return this;\n  }\n\n  static fromKeyframes(name: string, config: IAnimationKeyframes) {\n    const timeKeys = Object.keys(config);\n    const keyframes: Keyframe[] = [];\n    let lastKeyFramePercentage = 0;\n    timeKeys.sort(sortPercentages);\n\n    for (let index = 0; index < timeKeys.length - 1; index++) {\n      const key = timeKeys[index];\n      const nextKey = timeKeys[index + 1];\n      const currentAnimationKeyframe = config[key];\n      const nextAnimationKeyframe = config[nextKey] || null;\n      const startAt = lastKeyFramePercentage;\n      const endAt = getDecimalFromPercentage(timeKeys[index + 1]);\n\n      lastKeyFramePercentage = endAt;\n\n      Object.keys(currentAnimationKeyframe).forEach((key) => {\n        const currentValue = currentAnimationKeyframe[key];\n        const nextValue = nextAnimationKeyframe[key];\n\n        if (nextValue == null) {\n          throw new Error(\n            `All keyframe declarations need to have the same properties. Missing: '${key}'`\n          );\n        }\n\n        const easingIn =\n          typeof currentValue === \"string\"\n            ? \"linear\"\n            : currentValue.easeOut || \"linear\";\n        const easingOut =\n          typeof nextValue === \"string\"\n            ? \"linear\"\n            : nextValue.easeIn || \"linear\";\n\n        const easing = createDynamicEasing(easingIn, easingOut);\n\n        const controlsIn =\n          typeof currentValue === \"string\" ? [] : currentValue.controlsIn || [];\n        const controlsOut =\n          typeof nextValue === \"string\" ? [] : nextValue.controlsOut || [];\n\n        const controls = [...controlsIn, ...controlsOut];\n\n        const from =\n          typeof currentValue === \"string\" ? currentValue : currentValue.value;\n\n        const to = typeof nextValue === \"string\" ? nextValue : nextValue.value;\n\n        const keyframeConfig: SimpleKeyframeConfig = {\n          name,\n          property: key,\n          from,\n          to,\n          controls,\n          easing,\n          startAt,\n          endAt,\n        };\n\n        keyframes.push(Keyframe.fromSimpleConfig(keyframeConfig));\n      });\n    }\n\n    return new Animation(keyframes);\n  }\n}\n","const states = {\n  ACTIVE: 1,\n  STOPPED: 0,\n  DISPOSED: -1,\n};\n\nexport interface IEvent {\n  type: string;\n}\n\nexport default class Observer<TEvent extends IEvent> {\n  protected type: any;\n  protected callback: any;\n  protected unbind: any;\n  protected state: any;\n\n  constructor(\n    type: string,\n    callback: (event: TEvent) => void,\n    unbind: () => void\n  ) {\n    this.type = type;\n    this.callback = callback;\n    this.unbind = unbind;\n    this.state = states.ACTIVE;\n  }\n\n  notify(event: TEvent) {\n    if (event.type === this.type) {\n      this.callback(event);\n    }\n  }\n\n  stop() {\n    if (this.state === states.ACTIVE) {\n      this.state = states.STOPPED;\n    }\n  }\n\n  start() {\n    if (this.state !== states.DISPOSED) {\n      this.state = states.ACTIVE;\n    }\n  }\n\n  dispose() {\n    this.state = states.DISPOSED;\n    this.unbind();\n  }\n}\n","import Observer, { IEvent } from \"./Observer\";\n\nexport interface ITimeEvent extends IEvent {\n    time: number;\n    lastTime: number;\n}\n\nexport default class TimeObserver<\n  TEvent extends ITimeEvent\n> extends Observer<TEvent> {\n  public time: any;\n\n  constructor(\n    time: number,\n    callback: (event: TEvent) => void,\n    unbind: () => void\n  ) {\n    super(\"TIME_OBSERVER\", callback, unbind);\n    this.time = time;\n  }\n\n  notify(event: TEvent) {\n    if (typeof event.lastTime === \"number\" && typeof event.time === \"number\") {\n      const high = Math.max(event.time, event.lastTime);\n      const low = Math.min(event.time, event.lastTime);\n\n      if (this.time >= low && this.time <= high) {\n        this.callback(event);\n      }\n    }\n  }\n}\n","import Observer, { IEvent } from \"./Observer\";\nimport TimeObserver, { ITimeEvent } from \"./TimeObserver\";\n\nexport default class Observable {\n  private observers: any;\n\n  constructor() {\n    this.observers = [];\n  }\n\n  observeTime<TEvent extends ITimeEvent>(\n    time: number,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = new TimeObserver(time, callback, () => {\n      const index = this.observers.indexOf(observer);\n      if (index > -1) {\n        this.observers.splice(index, 1);\n      }\n    });\n\n    this.observers.push(observer);\n    return observer;\n  }\n\n  observe<TEvent extends IEvent>(\n    type: string,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = new Observer<TEvent>(type, callback, () => {\n      const index = this.observers.indexOf(observer);\n      if (index > -1) {\n        this.observers.splice(index, 1);\n      }\n    });\n\n    this.observers.push(observer);\n    return observer;\n  }\n\n  notify<TEvent extends IEvent>(event: TEvent) {\n    this.observers.forEach((observer: Observer<TEvent>) => {\n      observer.notify(event);\n    });\n  }\n\n  dispose() {\n    this.observers = [];\n  }\n}\n","import {IClock, TickCallback} from \"./IClock\";\n\nexport default class DefaultClock implements IClock {\n  public registeredCallbacks: Map<TickCallback, TickCallback>;\n  public animationFrame: any;\n\n  constructor() {\n    this.registeredCallbacks = new Map();\n    this._tick = this._tick.bind(this);\n    this.animationFrame = null;\n  }\n\n  _tick() {\n    this.registeredCallbacks.forEach((callback) => {\n      callback();\n    });\n\n    if (this.registeredCallbacks.size > 0) {\n      this.animationFrame = window.requestAnimationFrame(this._tick);\n    } else {\n      this.animationFrame = null;\n    }\n  }\n\n  register(callback: TickCallback) {\n    this.registeredCallbacks.set(callback, callback);\n\n    if (this.animationFrame == null) {\n      this._tick();\n    }\n  }\n\n  unregister(callback: TickCallback) {\n    this.registeredCallbacks.delete(callback);\n  }\n\n  now() {\n    return performance.now();\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\n\nexport default class GraphOperations {\n  constructor() {\n    this.add = this.add.bind(this);\n    this.subtract = this.subtract.bind(this);\n    this.multiply = this.multiply.bind(this);\n    this.divide = this.divide.bind(this);\n  }\n\n  add(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      resultNode.value = leftNode.value + rightNode.value;\n    }\n  }\n\n  subtract(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      (resultNode as any).value =\n        (leftNode as any).value - (rightNode as any).value;\n    }\n  }\n\n  multiply(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      (resultNode as any).value =\n        (leftNode as any).value * (rightNode as any).value;\n    }\n  }\n\n  divide(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      (resultNode as any).value =\n        (leftNode as any).value / (rightNode as any).value;\n    }\n  }\n\n  isNumberNode(nodes: Node[]) {\n    return nodes[0].name === \"number\";\n  }\n\n  canOperate(nodes: Node[]) {\n    return nodes.length === 3;\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport GraphOperations from \"./GraphOperations\";\nimport GraphsVisitor from \"./GraphsVisitor\";\nimport Visitor from \"./Visitor\";\n\nexport default class GraphOperator {\n  public graphsVisitor: any;\n  public visitor: any;\n  public graphOperations: any;\n\n  constructor() {\n    this.graphsVisitor = new GraphsVisitor();\n    this.visitor = new Visitor();\n    this.graphOperations = new GraphOperations();\n  }\n\n  assign(graph: Node, number: number) {\n    this.visitor.setCallback((node: Node) => {\n      if (node.name === \"number\") {\n        (node as any).value = number;\n      }\n    });\n\n    this.visitor.visitDown(graph);\n  }\n\n  add(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.add);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  subtract(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.subtract);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  multiply(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.multiply);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  divide(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.divide);\n    this.graphsVisitor.visitDown(graphs);\n  }\n}\n","import easings from \"./easings\";\nimport GraphOperator from \"./GraphOperator\";\nimport Keyframe from \"./Keyframe\";\nimport Animation from \"./Animation\";\nimport { PlayerState } from \"./Player\";\n\nconst FORWARD = 1;\nconst BACKWARD = -1;\n\nexport default class SlopeAnimationBuilder {\n  public animation: any;\n  public slopeAnimation: any;\n  public direction: any;\n  public newDuration: any;\n  public duration: any;\n  public offset: any;\n  public delta: any;\n  public deltaStepValues: any;\n  public scaledValues: any;\n  public deltaValues: any;\n  public nowValues: any;\n  public diffValues: any;\n  public derivativeValues: any;\n  public toValues: any;\n  public graphOperator: any;\n  public scaleValues: any;\n\n  constructor() {\n    this.animation = null;\n    this.slopeAnimation = null;\n    this.direction = 0;\n    this.newDuration = 0;\n    this.duration = 0;\n    this.offset = 0;\n    this.delta = 0.0001;\n    this.deltaStepValues = null;\n    this.scaledValues = null;\n    this.deltaValues = null;\n    this.nowValues = null;\n    this.diffValues = null;\n    this.derivativeValues = null;\n    this.scaledValues = null;\n    this.toValues = null;\n    this.graphOperator = new GraphOperator();\n  }\n\n  private cloneValues(values: any) {\n    return Object.keys(values).reduce((clone: any, name) => {\n      clone[name] = Object.keys(values[name]).reduce((clone: any, property) => {\n        clone[property] = values[name][property].clone();\n        return clone;\n      }, {});\n      return clone;\n    }, {});\n  }\n\n  build(\n    animation: Animation,\n    offset: number,\n    duration: number,\n    newDuration: number,\n    direction: PlayerState\n  ) {\n    this.animation = animation;\n    this.offset = offset;\n    this.duration = duration;\n    this.newDuration = newDuration;\n    this.direction = direction;\n\n    this.cacheValues();\n    this.calculate();\n    this.createSlopeTimeline();\n\n    return this.slopeAnimation;\n  }\n\n  private cacheValues() {\n    this.animation.update(this.offset);\n    this.nowValues = this.cloneValues(this.animation.getCurrentValues());\n\n    this.deltaStepValues = this.cloneValues(this.nowValues);\n    this.scaleValues = this.cloneValues(this.nowValues);\n    this.diffValues = this.cloneValues(this.nowValues);\n    this.derivativeValues = this.cloneValues(this.nowValues);\n    this.scaledValues = this.cloneValues(this.nowValues);\n    this.toValues = this.cloneValues(this.nowValues);\n\n    this.cacheDeltaStepValues();\n    this.cacheScaleValues();\n\n    if (this.direction === FORWARD) {\n      this.cacheDeltaValueForward();\n    } else if (this.direction === BACKWARD) {\n      this.cacheDeltaValueBackward();\n    } else {\n      this.cacheDeltaValueStopped();\n    }\n  }\n\n  private cacheDeltaStepValues() {\n    Object.keys(this.deltaStepValues).forEach((name) => {\n      Object.keys(this.deltaStepValues[name]).forEach((property) => {\n        this.graphOperator.assign(\n          this.deltaStepValues[name][property].graph,\n          this.delta\n        );\n      });\n    });\n  }\n\n  private cacheScaleValues() {\n    const scale = this.newDuration / this.duration;\n\n    Object.keys(this.scaleValues).forEach((name) => {\n      Object.keys(this.scaleValues[name]).forEach((property) => {\n        this.graphOperator.assign(\n          this.scaleValues[name][property].graph,\n          scale\n        );\n      });\n    });\n  }\n\n  private cacheDeltaValueForward() {\n    this.animation.update(this.offset + this.delta);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  private cacheDeltaValueBackward() {\n    this.animation.update(this.offset - this.delta);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  private cacheDeltaValueStopped() {\n    this.animation.update(this.offset);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  private calculate() {\n    Object.keys(this.nowValues).forEach((name) => {\n      Object.keys(this.nowValues[name]).forEach((property) => {\n        const now = this.nowValues[name][property].graph;\n        const delta = this.deltaValues[name][property].graph;\n        const diff = this.diffValues[name][property].graph;\n\n        const deltaStep = this.deltaStepValues[name][property].graph;\n        const derivative = this.derivativeValues[name][property].graph;\n        const scale = this.scaleValues[name][property].graph;\n        const scaled = this.scaledValues[name][property].graph;\n        const to = this.toValues[name][property].graph;\n\n        this.graphOperator.subtract([delta, now, diff]);\n        this.graphOperator.divide([diff, deltaStep, derivative]);\n        this.graphOperator.multiply([derivative, scale, scaled]);\n        this.graphOperator.add([now, scaled, to]);\n\n        // Lets update the ParsedValue.value.\n        this.toValues[name][property].value = to.toString();\n      });\n    });\n  }\n\n  private createSlopeTimeline() {\n    const keyframes = Object.keys(this.nowValues)\n      .map((name) => {\n        return Object.keys(this.nowValues[name]).map((property) => {\n          return new Keyframe({\n            name,\n            property,\n            from: this.nowValues[name][property],\n            controls: [],\n            to: this.toValues[name][property],\n            startAt: 0,\n            endAt: 1,\n            easing: easings.linear,\n          });\n        });\n      })\n      .flat();\n\n    this.slopeAnimation = new Animation(keyframes);\n  }\n}\n","import Animation from \"./Animation\";\nimport Keyframe from \"./Keyframe\";\nimport easings, { EasingFunction } from \"./easings\";\n\nexport default class BlendedAnimation extends Animation {\n  public fromAnimation: any;\n  public toAnimation: any;\n\n  constructor(\n    fromAnimation: Animation,\n    toAnimation: Animation,\n    easing: EasingFunction\n  ) {\n    const fromValues = fromAnimation.getCurrentValues();\n    const toValues = toAnimation.getCurrentValues();\n\n    const animations = Object.keys(fromValues)\n      .map((name) => {\n        const fromValue = fromValues[name];\n        const toValue = toValues[name];\n\n        if (toValue == null) {\n          throw new Error(\n            `Blended animations need to have the same properties to animate.  From Animation: ${JSON.stringify(\n              Object.keys(fromValues)\n            )}, To Animation: ${JSON.stringify(Object.keys(toValues))}`\n          );\n        }\n\n        return Object.keys(fromValue).map((property) => {\n          const from = fromValue[property];\n          const to = toValue[property];\n\n          return new Keyframe({\n            name,\n            property,\n            startAt: 0,\n            endAt: 1,\n            from,\n            to,\n            controls: [],\n            easing: easing || easings.linear,\n          });\n        });\n      })\n      .flat();\n\n    super(animations);\n\n    this.fromAnimation = fromAnimation;\n    this.toAnimation = toAnimation;\n  }\n\n  update(time: number) {\n    this.fromAnimation.update(time);\n    this.toAnimation.update(time);\n\n    super.update(time);\n    return this;\n  }\n}\n","import Observable from \"./Observable\";\nimport DefaultClock from \"./DefaultClock\";\nimport SlopeAnimationBuilder from \"./SlopeAnimationBuilder\";\nimport BlendedAnimation from \"./BlendedAnimation\";\nimport { IClock } from \"./IClock\";\nimport easings, { EasingFunction } from \"./easings\";\nimport Animation from \"./Animation\";\n\nconst defaultClock = new DefaultClock();\n\nconst DEFAULT = 0;\nconst ALTERNATE = 1;\n\nconst FORWARD = 1;\nconst REVERSE = -1;\nconst STOPPED = 0;\n\nconst repeatDirections = {\n  DEFAULT,\n  ALTERNATE,\n};\n\nconst states = {\n  FORWARD,\n  REVERSE,\n  STOPPED,\n};\n\nfunction defaultRender() {}\n\nexport type RepeatDirection = 0 | 1;\nexport type PlayerState = 1 | -1 | 0;\n\nexport interface PlayerOptions {\n  clock?: IClock;\n  duration?: number;\n  repeatDirection?: RepeatDirection;\n  timeScale?: number;\n  render?: (animation: Animation) => void;\n}\n\nexport default class Player extends Observable {\n  public _timeScale: number;\n  public _time: number;\n  public _step: any;\n  public _duration: number;\n  public _lastTimestamp: number;\n  public _animationFrame: any;\n  public _iterations: any;\n  public _repeat: any;\n  public _repeatDirection: any;\n  public _animation: Animation;\n  public _clock: any;\n  public _state: any;\n  public _render: any;\n  public _slopeAnimationBuilder: any;\n\n  constructor(animation: Animation, options: PlayerOptions = {}) {\n    super();\n    const { clock, duration, timeScale, repeatDirection, render } = options;\n    this._timeScale = typeof timeScale === \"number\" ? timeScale : 1;\n    this._time = 0;\n    this._step = 0;\n    this._duration = typeof duration === \"number\" ? duration : 0;\n    this._lastTimestamp = 0;\n    this._animationFrame = null;\n    this._iterations = 0;\n    this._repeat = 1;\n    this._repeatDirection =\n      typeof repeatDirection === \"number\" ? repeatDirection : DEFAULT;\n    this._animation = animation;\n    this._clock = clock || defaultClock;\n    this._state = STOPPED;\n    this._render = typeof render === \"function\" ? render : defaultRender;\n    this._slopeAnimationBuilder = new SlopeAnimationBuilder();\n\n    this.tick = this.tick.bind(this);\n  }\n\n  get time() {\n    return this._time;\n  }\n\n  get timeScale() {\n    return this._timeScale;\n  }\n\n  set timeScale(value) {\n    if (value > 0) {\n      this._timeScale = value;\n    }\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(value) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing. All Math blows up if the duration is \"0\".\n    if (value <= 0) {\n      value = 0.00001;\n    }\n\n    this._duration = value;\n  }\n\n  get repeat() {\n    return this._repeat;\n  }\n\n  set repeat(value) {\n    if (typeof value !== \"number\" && value > 0) {\n      return;\n    }\n\n    this._repeat = value;\n  }\n\n  get repeatDirection() {\n    return this._repeatDirection;\n  }\n\n  set repeatDirection(value: RepeatDirection) {\n    if (value !== 0 && value !== 1) {\n      return;\n    }\n\n    this._repeatDirection = value;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  get animation() {\n    return this._animation;\n  }\n\n  set animation(animation: Animation) {\n    this._animation = animation;\n  }\n\n  get render() {\n    return this._render;\n  }\n\n  set render(render: (animation: Animation) => void) {\n    this._render = render;\n  }\n\n  get iterations() {\n    return this._iterations;\n  }\n\n  play() {\n    if (this._state !== FORWARD) {\n      this._lastTimestamp = this._clock.now();\n      this._state = FORWARD;\n      this._clock.register(this.tick);\n\n      this.notify({\n        type: \"PLAYED\",\n        animation: this._animation,\n      });\n    }\n\n    return this;\n  }\n\n  private tick() {\n    const timestamp = this._clock.now();\n    const deltaTime = timestamp - this._lastTimestamp;\n    this._step = (deltaTime / this._duration) * this._timeScale;\n\n    if (this._step > 1) {\n      this._step = 1;\n    }\n\n    if (deltaTime === 0) {\n      return;\n    }\n\n    if (this._state === REVERSE) {\n      this.stepBackward();\n    } else if (this._state === FORWARD) {\n      this.stepForward();\n    }\n\n    this._lastTimestamp = timestamp;\n  }\n\n  private stepForward() {\n    let time = this._time + this._step;\n    let lastTime = this._time;\n\n    const repeatDirection = this._repeatDirection;\n\n    if (time >= 1) {\n      this._iterations++;\n\n      if (this._iterations >= this._repeat) {\n        this.seek(1);\n        this.stop();\n        return;\n      }\n\n      if (repeatDirection === ALTERNATE) {\n        const adjustedTime = 1 - (time - 1);\n\n        this.notify({\n          type: \"TICK\",\n          time: 1,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 1;\n        this.seek(adjustedTime);\n        this._state = REVERSE;\n      } else {\n        const adjustedTime = time - 1;\n\n        this.notify({\n          type: \"TICK\",\n          time: 1,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 0;\n        this.seek(adjustedTime);\n        this._state = FORWARD;\n      }\n    } else {\n      this.seek(time);\n    }\n  }\n\n  private stepBackward() {\n    let time = this._time - this._step;\n    let lastTime = this._time;\n\n    const repeatDirection = this._repeatDirection;\n\n    if (time <= 0) {\n      this._iterations++;\n\n      if (this._iterations >= this._repeat) {\n        this.seek(0);\n        this.stop();\n        return;\n      }\n\n      if (repeatDirection === ALTERNATE) {\n        const adjustedTime = time * -1;\n\n        this.notify({\n          type: \"TICK\",\n          time: 0,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 0;\n        this.seek(adjustedTime);\n        this._state = FORWARD;\n      } else {\n        const adjustedTime = 1 + time;\n\n        this.notify({\n          type: \"TICK\",\n          time: 1,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 1;\n        this.seek(adjustedTime);\n        this._state = REVERSE;\n      }\n    } else {\n      this.seek(time);\n    }\n  }\n\n  seek(time: number) {\n    const lastTime = this._time;\n    this._time = time;\n\n    this._animation.update(this._time);\n    this._render(this._animation);\n\n    this.notify({\n      type: \"TICK\",\n      time,\n      lastTime,\n      animation: this._animation,\n    });\n\n    return this;\n  }\n\n  stop() {\n    if (this._state !== STOPPED) {\n      this._state = STOPPED;\n      this._clock.unregister(this.tick);\n\n      this.notify({\n        type: \"STOPPED\",\n        animation: this._animation,\n      });\n    }\n\n    return this;\n  }\n\n  reverse() {\n    if (this._state !== REVERSE) {\n      this._lastTimestamp = this._clock.now();\n      this._state = REVERSE;\n      this._clock.register(this.tick);\n\n      this.notify({\n        type: \"REVERSED\",\n        animation: this._animation,\n      });\n    }\n\n    return this;\n  }\n\n  transitionToAnimation(\n    animation: Animation,\n    duration: number,\n    transitionDuration?: number,\n    transitionEasing: EasingFunction = easings.linear\n  ) {\n    transitionDuration =\n      typeof transitionDuration === \"number\" ? transitionDuration : duration;\n\n    const slopeAnimation = this._slopeAnimationBuilder.build(\n      this._animation,\n      this._time,\n      this._duration,\n      transitionDuration,\n      this._state\n    );\n\n    const blendedAnimation = new BlendedAnimation(\n      slopeAnimation,\n      animation,\n      transitionEasing\n    );\n\n    this._animation = blendedAnimation;\n    this._time = 0;\n    this._duration = transitionDuration;\n\n    this.notify({\n      type: \"TRANSITION\",\n      animation: this._animation,\n    });\n\n    const observer = this.observeTime(1, () => {\n      this._animation = animation;\n      this._duration = duration;\n\n      observer.dispose();\n      transitionObserver.dispose();\n\n      this.notify({\n        type: \"TRANSITION-END\",\n        animation: this._animation,\n      });\n    });\n\n    const transitionObserver = this.observe(\"TRANSITION\", () => {\n      observer.dispose();\n      transitionObserver.dispose();\n    });\n\n    return this;\n  }\n\n  dispose() {\n    this.stop();\n    super.dispose();\n  }\n\n  static get repeatDirections() {\n    return repeatDirections;\n  }\n\n  static get states() {\n    return states;\n  }\n}\n"],"names":["emptyFn","visitor","treeUtility","space","spaces","values","validator","states","FORWARD"],"mappings":"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"}