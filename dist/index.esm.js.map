{"version":3,"file":"index.esm.js","sources":["../src/math.ts","../src/BezierCurve.ts","../src/Animator.ts","../src/Animation.ts","../src/Observer.ts","../src/TimeObserver.ts","../src/Observable.ts","../src/DefaultClock.ts","../src/Player.ts","../src/easingFunctions/easeInQuad.ts","../src/easingFunctions/easeOutQuad.ts","../src/easingFunctions/easeInOutQuad.ts","../src/easingFunctions/easeInElastic.ts","../src/easingFunctions/easeInOutElastic.ts","../src/easingFunctions/easeOutElastic.ts","../src/easingFunctions/easeInOutBack.ts","../src/easingFunctions/easeOutBounce.ts","../src/easingFunctions/easeInBounce.ts","../src/easingFunctions/easeInOutBounce.ts","../src/easingFunctions/easeInCubic.ts","../src/easingFunctions/easeOutCubic.ts","../src/easingFunctions/easeInOutCubic.ts","../src/easingFunctions/easeInQuart.ts","../src/easingFunctions/easeOutQuart.ts","../src/easingFunctions/easeInOutQuart.ts","../src/easingFunctions/easeInQuint.ts","../src/easingFunctions/easeOutQuint.ts","../src/easingFunctions/easeInOutQuint.ts","../src/easingFunctions/easeInSine.ts","../src/easingFunctions/easeOutSine.ts","../src/easingFunctions/easeInOutSine.ts","../src/easingFunctions/easeInExpo.ts","../src/easingFunctions/easeOutExpo.ts","../src/easingFunctions/easeInOutExpo.ts","../src/easingFunctions/easeInCirc.ts","../src/easingFunctions/easeOutCirc.ts","../src/easingFunctions/easeInOutCirc.ts","../src/easingFunctions/easeInBack.ts","../src/easingFunctions/easeOutBack.ts","../src/easingFunctions/easeLinear.ts","../src/easings.ts","../src/deepClone.ts","../src/Keyframe.ts","../node_modules/clarity-pattern-parser/dist/index.esm.js","../src/patterns/divider.ts","../src/patterns/number.ts","../src/patterns/unit.ts","../src/patterns/hex.ts","../src/patterns/name.ts","../src/patterns/optionalSpaces.ts","../src/patterns/method.ts","../src/patterns/array.ts","../src/patterns/spaces.ts","../src/patterns/expression.ts","../src/patterns/value.ts","../src/patterns/values.ts","../src/patterns/cssValue.ts","../src/CssKeyframe.ts","../src/createDynamicEasing.ts","../src/CssKeyframesGenerator.ts","../src/ObjectVisitor.ts","../src/ObjectsVisitor.ts","../src/ObjectOperator.ts","../src/SlopeAnimationBuilder.ts","../src/ExtendedAnimation.ts","../src/BlendedAnimation.ts","../src/KeyframesGenerator.ts","../src/Motion.ts","../src/patterns/path.ts","../src/PathAnimation.ts","../src/UniformPathAnimation.ts","../src/createAnimation.ts","../src/createCssAnimation.ts","../src/SvgPath.ts","../src/PointPath.ts"],"sourcesContent":["export function simpsonsRule(\n  lowerBound: number,\n  upperBound: number,\n  f: (x: number) => number,\n  n: number = 4\n) {\n  let stripAmount = f(lowerBound);\n  const stepAmount = (upperBound - lowerBound) / n;\n  let currentX = lowerBound;\n\n  for (let x = 0; x < n - 1; x++) {\n    currentX += stepAmount;\n    let coefficient = 4;\n\n    if (x % 2 !== 0) {\n      coefficient = 2;\n    }\n\n    stripAmount += coefficient * f(currentX);\n  }\n\n  stripAmount += f(upperBound);\n\n  return (stepAmount / 3) * stripAmount;\n}\n\nexport function bernsteinPolynomial(v: number, n: number, x: number) {\n  if (v > n || v < 0) {\n    return 0;\n  }\n  const binomialCoefficient = nChooseK(n, v);\n\n  // This is almost a 10 times faster than math.pow.\n  let tValue = x;\n  for (let i = 1; i < v; i++) {\n    tValue *= x;\n  }\n  tValue = v <= 0 ? 1 : tValue;\n\n  const remainder = 1 - x;\n  let remainingT = remainder;\n  for (let i = 1; i < n - v; i++) {\n    remainingT *= remainder;\n  }\n  remainingT = n - v <= 0 ? 1 : remainingT;\n\n  return binomialCoefficient * tValue * remainingT;\n}\n\nexport function factorial(num: number) {\n  let rval = 1;\n  for (let i = 2; i <= num; i++) rval = rval * i;\n  return rval;\n}\n\n// We need to cache nChooseK for performance reasons.\nconst nChooseKCache = new Map<string, number>();\nexport function nChooseK(n: number, k: number) {\n  const key = `${n}|${k}`;\n  const cache = nChooseKCache.get(key);\n\n  if (cache != null) {\n    return cache;\n  }\n\n  const result = factorial(n) / (factorial(k) * factorial(n - k));\n  nChooseKCache.set(key, result);\n  return result;\n}\n\nexport function newtonsMethod(\n  fn: (x: number) => number,\n  deltaFn: (x: number) => number,\n  startAt: number,\n  maxIterations = Infinity,\n  tolerance = 0.001\n) {\n  let x = startAt;\n  let lastX = Infinity;\n  let difference = Math.abs(x - lastX);\n  let count = 0;\n\n  while (difference > tolerance) {\n    if (count >= maxIterations) {\n      return Infinity;\n    }\n    x = x - fn(x) / deltaFn(x);\n    difference = Math.abs(x - lastX);\n    lastX = x;\n    count++;\n  }\n\n  return x;\n}\n","import { bernsteinPolynomial } from \"./math\";\n\nconst defaultPoints: number[] = [];\n\nfunction valueAt(x: number, points: number[]) {\n  const pointCoefficients = points;\n  const n = pointCoefficients.length - 1;\n  let result = 0;\n\n  for (let v = 0; v <= n; v++) {\n    const pointCoefficient = pointCoefficients[v];\n    result += bernsteinPolynomial(v, n, x) * pointCoefficient;\n  }\n  return result;\n}\n\nfunction deltaAt(x: number, points: number[]) {\n  const pointCoefficients = points;\n  const n = pointCoefficients.length - 1;\n  let result = 0;\n\n  for (let v = 0; v <= n; v++) {\n    const pointCoefficient = pointCoefficients[v];\n    result +=\n      n *\n      (bernsteinPolynomial(v - 1, n - 1, x) -\n        bernsteinPolynomial(v, n - 1, x)) *\n      pointCoefficient;\n  }\n\n  return result;\n}\nexport default class BezierCurve {\n  private points: number[] = defaultPoints;\n  private normalizedPoints: number[] = defaultPoints;\n\n  constructor(points: number[]) {\n    this.setPoints(points);\n  }\n\n  setPoints(coefficients: number[]) {\n    this.points = coefficients;\n    const root = this.points[0];\n    this.normalizedPoints = this.points.map((point) => {\n      return point - root;\n    });\n\n    Object.freeze(this.points);\n    Object.freeze(this.normalizedPoints);\n  }\n\n  valueAt(x: number) {\n    return valueAt(x, this.points);\n  }\n\n  normalizedValueAt(x: number) {\n    return valueAt(x, this.normalizedPoints);\n  }\n\n  deltaAt(x: number) {\n    return deltaAt(x, this.points);\n  }\n\n  normalizedDeltaAt(x: number) {\n    return deltaAt(x, this.normalizedPoints);\n  }\n\n  sumAt(x: number) {\n    const pointCoefficients = this.normalizedPoints;\n    const n = pointCoefficients.length - 1;\n    let result = 0;\n\n    for (let v = 0; v <= n; v++) {\n      const pointCoefficient = pointCoefficients[v];\n      let innerSum = 0;\n\n      for (let j = v + 1; j <= n + 1; j++) {\n        innerSum += bernsteinPolynomial(j, n + 1, x);\n      }\n\n      result += (1 / (n + 1)) * innerSum * pointCoefficient;\n    }\n\n    return result;\n  }\n\n  area(lowerBound: number, upperBound: number) {\n    return this.sumAt(upperBound) - this.sumAt(lowerBound);\n  }\n\n  clone() {\n    return new BezierCurve(this.points.slice());\n  }\n}\n","import BezierCurve from \"./BezierCurve\";\nimport Keyframe from \"./Keyframe\";\n\nconst emptyArray: any[] = [];\n\nexport default class Animator<T> {\n  public keyframe: Keyframe<T>;\n  public bezierCurve: BezierCurve;\n  public time: number;\n\n  constructor(keyframe: Keyframe<T>) {\n    this.keyframe = keyframe;\n    this.time = 0;\n    this.bezierCurve = new BezierCurve([]);\n  }\n\n  getNumberValue(from: any, controls: any[] = emptyArray, to: any) {\n    const elapsedTime = this.time - this.keyframe.startAt;\n    const animationDuration = this.keyframe.endAt - this.keyframe.startAt;\n    const timeWithEasing = this.keyframe.easing(\n      elapsedTime / animationDuration\n    );\n    const points = [from, ...controls, to];\n    this.bezierCurve.setPoints(points);\n    return this.bezierCurve.valueAt(timeWithEasing);\n  }\n\n  getDeltaValue(from: any, controls: any[] = emptyArray, to: any) {\n    const elapsedTime = this.time - this.keyframe.startAt;\n    const animationDuration = this.keyframe.endAt - this.keyframe.startAt;\n    const timeWithEasing = this.keyframe.easing(\n      elapsedTime / animationDuration\n    );\n    const points = [from, ...controls, to];\n    this.bezierCurve.setPoints(points);\n    return this.bezierCurve.deltaAt(timeWithEasing);\n  }\n\n  getStringValue(from: any, to: any) {\n    if (this.time >= this.keyframe.startAt) {\n      return to;\n    } else {\n      return from;\n    }\n  }\n\n  traverse(\n    fromObject: any,\n    controlsObject: any,\n    toObject: any,\n    resultObject: any\n  ) {\n    for (let key in fromObject) {\n      const from = fromObject[key];\n      const to = toObject[key];\n      const controls = controlsObject.map((c: any) => c[key]);\n\n      if (typeof from === \"number\") {\n        resultObject[key] = this.getNumberValue(from, controls, to);\n      } else if (typeof from === \"string\") {\n        resultObject[key] = this.getStringValue(from, to);\n      } else if (typeof from === \"object\" && from != null) {\n        this.traverse(\n          fromObject[key],\n          controls || emptyArray,\n          toObject[key],\n          resultObject[key]\n        );\n      }\n    }\n  }\n\n  update(time: number) {\n    this.time = time;\n\n    if (typeof this.keyframe.from === \"string\") {\n      this.keyframe.result = this.getStringValue(\n        this.keyframe.from,\n        this.keyframe.to\n      );\n    } else if (typeof this.keyframe.from === \"number\") {\n      this.keyframe.result = this.getNumberValue(\n        this.keyframe.from,\n        this.keyframe.controls,\n        this.keyframe.to\n      ) as any as T;\n    } else if (\n      typeof this.keyframe.from === \"object\" &&\n      this.keyframe.from != null\n    ) {\n      this.traverse(\n        this.keyframe.from,\n        this.keyframe.controls,\n        this.keyframe.to,\n        this.keyframe.result\n      );\n    }\n\n    return this.keyframe.result;\n  }\n}\n","import Animator from \"./Animator\";\nimport Keyframe from \"./Keyframe\";\n\nexport type AnimationState<T> = { [key: string]: T };\n\nexport interface IAnimation<T> {\n  name: string;\n  currentValues: T;\n  update(time: number): IAnimation<T>;\n  clone(): IAnimation<T>;\n}\n\nconst sortTime = (animatorA: Animator<any>, animatorB: Animator<any>) => {\n  return animatorA.keyframe.startAt - animatorB.keyframe.startAt;\n};\n\nexport default class Animation<T> implements IAnimation<T> {\n  protected animators: Animator<unknown>[] = [];\n  protected time = 0;\n\n  public name: string;\n  public currentValues: T;\n\n  constructor(name: string, keyframes: Keyframe<unknown>[]) {\n    this.name = name;\n    this.currentValues = {} as T;\n    this.keyframes = keyframes;\n  }\n\n  set keyframes(keyframes: Keyframe<unknown>[]) {\n    this.animators = keyframes.map((keyframe) => new Animator(keyframe));\n    this._createCurrentValues();\n    this.animators.sort(sortTime);\n  }\n\n  get keyframes() {\n    return this.animators.map((a) => a.keyframe);\n  }\n\n  protected _createCurrentValues() {\n    this.currentValues = this.animators.reduce((results: any, animator) => {\n      const keyframe = animator.keyframe;\n      const property = keyframe.property;\n      results[property] = keyframe.result;\n\n      return results;\n    }, {} as T);\n  }\n\n  private _saveCurrentValues() {\n    const visitedMap = new Map();\n    const animators = this.animators;\n    const length = animators.length;\n\n    // Assign all values at least once.\n    // These are the initials values beyond the time we are at.\n    for (let x = 0; x < length; x++) {\n      const keyframe = animators[x].keyframe;\n      const key = keyframe.property;\n\n      if (!visitedMap.has(key)) {\n        visitedMap.set(key, true);\n        (this.currentValues as any)[keyframe.property] = keyframe.from;\n      }\n    }\n\n    // Assign if the value of the start at was before the time now.\n    // Since we have it sorted, the most current will win.\n    for (let x = 0; x < length; x++) {\n      const keyframe = animators[x].keyframe;\n\n      if (keyframe.startAt <= this.time) {\n        (this.currentValues as any)[keyframe.property] = keyframe.result;\n      }\n    }\n  }\n\n  update(time: number) {\n    this.time = time;\n\n    this.animators.forEach((animator) => {\n      animator.update( this.time);\n    });\n\n    this._saveCurrentValues();\n\n    return this;\n  }\n\n  clone() {\n    const keyframes = this.animators.map((a) => a.keyframe.clone());\n    return new Animation<T>(this.name, keyframes);\n  }\n}\n","const states = {\n  ACTIVE: 1,\n  STOPPED: 0,\n  DISPOSED: -1,\n};\n\nexport interface IEvent {\n  type: string;\n}\n\nexport default class Observer<TEvent extends IEvent> {\n  protected type: any;\n  protected callback: any;\n  protected unbind: any;\n  protected state: any;\n\n  constructor(\n    type: string,\n    callback: (event: TEvent) => void,\n    unbind: () => void\n  ) {\n    this.type = type;\n    this.callback = callback;\n    this.unbind = unbind;\n    this.state = states.ACTIVE;\n  }\n\n  notify(event: TEvent) {\n    if (event.type === this.type) {\n      this.callback(event);\n    }\n  }\n\n  stop() {\n    if (this.state === states.ACTIVE) {\n      this.state = states.STOPPED;\n    }\n  }\n\n  start() {\n    if (this.state !== states.DISPOSED) {\n      this.state = states.ACTIVE;\n    }\n  }\n\n  dispose() {\n    this.state = states.DISPOSED;\n    this.unbind();\n  }\n}\n","import Observer, { IEvent } from \"./Observer\";\n\nexport interface ITimeEvent extends IEvent {\n    time: number;\n    lastTime: number;\n}\n\nexport default class TimeObserver<\n  TEvent extends ITimeEvent\n> extends Observer<TEvent> {\n  public time: any;\n\n  constructor(\n    time: number,\n    callback: (event: TEvent) => void,\n    unbind: () => void\n  ) {\n    super(\"TIME_OBSERVER\", callback, unbind);\n    this.time = time;\n  }\n\n  notify(event: TEvent) {\n    if (typeof event.lastTime === \"number\" && typeof event.time === \"number\") {\n      const high = Math.max(event.time, event.lastTime);\n      const low = Math.min(event.time, event.lastTime);\n\n      if (this.time >= low && this.time <= high) {\n        this.callback(event);\n      }\n    }\n  }\n}\n","import Observer, { IEvent } from \"./Observer\";\nimport TimeObserver, { ITimeEvent } from \"./TimeObserver\";\n\nexport default class Observable {\n  private observers: any;\n\n  constructor() {\n    this.observers = [];\n  }\n\n  observeTimeOnce<TEvent extends ITimeEvent>(\n    time: number,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = this.observeTime<TEvent>(time, (event) => {\n      callback(event);\n      observer.dispose();\n    });\n\n    return observer;\n  }\n\n  observeTime<TEvent extends ITimeEvent>(\n    time: number,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = new TimeObserver(time, callback, () => {\n      const index = this.observers.indexOf(observer);\n      if (index > -1) {\n        this.observers.splice(index, 1);\n      }\n    });\n\n    this.observers.push(observer);\n    return observer;\n  }\n\n  observeOnce<TEvent extends IEvent>(\n    type: string,\n    callback: (event: IEvent) => void\n  ) {\n    const observer = this.observe(type, (event) => {\n      callback(event);\n      observer.dispose();\n    });\n\n    return observer;\n  }\n\n  observe<TEvent extends IEvent>(\n    type: string,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = new Observer<TEvent>(type, callback, () => {\n      const index = this.observers.indexOf(observer);\n      if (index > -1) {\n        this.observers.splice(index, 1);\n      }\n    });\n\n    this.observers.push(observer);\n    return observer;\n  }\n\n  notify<TEvent extends IEvent>(event: TEvent) {\n    this.observers.forEach((observer: Observer<TEvent>) => {\n      observer.notify(event);\n    });\n  }\n\n  clearObservers() {\n    this.observers = [];\n  }\n\n  dispose() {\n    this.clearObservers();\n  }\n}\n","import { IClock, TickCallback } from \"./IClock\";\n\nexport default class DefaultClock implements IClock {\n  public registeredCallbacks: Map<TickCallback, TickCallback>;\n  public animationFrame: any;\n\n  constructor() {\n    this.registeredCallbacks = new Map();\n    this._tick = this._tick.bind(this);\n    this.animationFrame = null;\n  }\n\n  _tick() {\n    this.registeredCallbacks.forEach((callback) => {\n      callback();\n    });\n\n    if (this.registeredCallbacks.size > 0) {\n      this.animationFrame = window.requestAnimationFrame(this._tick);\n    } else {\n      this.animationFrame = null;\n    }\n  }\n\n  register(callback: TickCallback) {\n    this.registeredCallbacks.set(callback, callback);\n\n    if (this.animationFrame == null) {\n      this._tick();\n    }\n  }\n\n  unregister(callback: TickCallback) {\n    this.registeredCallbacks.delete(callback);\n  }\n\n  now() {\n    return performance.now();\n  }\n}\n","import Observable from \"./Observable\";\nimport DefaultClock from \"./DefaultClock\";\nimport { IClock } from \"./IClock\";\nimport { IAnimation } from \"./Animation\";\n\nconst defaultClock = new DefaultClock();\nfunction defaultRender() {}\n\nexport enum PlayerState {\n  REVERSE = -1,\n  STOPPED = 0,\n  FORWARD = 1,\n}\n\nexport enum RepeatDirection {\n  DEFAULT = 0,\n  ALTERNATE = 1,\n}\n\nexport default class Player<T = any> extends Observable {\n  private _timeScale: number;\n  private _time: number;\n  private _step: number;\n  private _duration: number;\n  private _lastTimestamp: number;\n  private _iterations: number;\n  private _repeat: number;\n  private _repeatDirection: RepeatDirection;\n  private _clock: IClock;\n  private _state: PlayerState;\n  private _render: (time: number) => void;\n\n  constructor(clock?: IClock) {\n    super();\n    this._timeScale = 1;\n    this._time = 0;\n    this._step = 0;\n    this._duration = 0;\n    this._lastTimestamp = 0;\n    this._iterations = 0;\n    this._repeat = 1;\n    this._repeatDirection = RepeatDirection.DEFAULT;\n    this._clock = clock || defaultClock;\n    this._state = PlayerState.STOPPED;\n    this._render = defaultRender;\n    this.tick = this.tick.bind(this);\n  }\n\n  get time() {\n    return this._time;\n  }\n\n  set time(value: number) {\n    this._time = value;\n  }\n\n  get timeScale() {\n    return this._timeScale;\n  }\n\n  set timeScale(value) {\n    if (value > 0) {\n      this._timeScale = value;\n    }\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(value) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing. All Math blows up if the duration is \"0\".\n    if (value <= 0) {\n      value = 0.00001;\n    }\n\n    this._duration = value;\n  }\n\n  get repeat() {\n    return this._repeat;\n  }\n\n  set repeat(value) {\n    if (typeof value !== \"number\" && value > 0) {\n      return;\n    }\n\n    this._repeat = value;\n  }\n\n  get repeatDirection() {\n    return this._repeatDirection;\n  }\n\n  set repeatDirection(value: RepeatDirection) {\n    if (value !== 0 && value !== 1) {\n      return;\n    }\n\n    this._repeatDirection = value;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  get render() {\n    return this._render;\n  }\n\n  set render(render: (time: number) => void) {\n    this._render = render;\n  }\n\n  get iterations() {\n    return this._iterations;\n  }\n\n  set iterations(value: number) {\n    if (value >= 0) {\n      this._iterations = value;\n    }\n  }\n\n  get clock() {\n    return this._clock;\n  }\n\n  set clock(value: IClock) {\n    this._clock = value;\n  }\n\n  private tick() {\n    const timestamp = this._clock.now();\n    const deltaTime = timestamp - this._lastTimestamp;\n    this._step = (deltaTime / this._duration) * this._timeScale;\n\n    if (this._step > 1) {\n      this._step = 1;\n    }\n\n    // This helps with unneeded renders.\n    if (deltaTime <= 0) {\n      return;\n    }\n\n    if (this._state === PlayerState.REVERSE) {\n      this.stepBackward();\n    } else if (this._state === PlayerState.FORWARD) {\n      this.stepForward();\n    }\n\n    this._lastTimestamp = timestamp;\n  }\n\n  private stepForward() {\n    let time = this._time + this._step;\n    let lastTime = this._time;\n\n    const repeatDirection = this._repeatDirection;\n\n    if (time >= 1) {\n      this._iterations++;\n\n      this.notify({\n        type: \"TICK\",\n        time: 1,\n        lastTime,\n      });\n\n      if (this._iterations >= this._repeat) {\n        this.seek(1);\n        this.stop();\n        return;\n      }\n\n      if (repeatDirection === RepeatDirection.ALTERNATE) {\n        const adjustedTime = 1 - (time - 1);\n\n        this._time = 1;\n        this.seek(adjustedTime);\n        this._state = PlayerState.REVERSE;\n      } else {\n        const adjustedTime = time - 1;\n\n        this.notify({\n          type: \"TICK\",\n          time: 0,\n          lastTime,\n        });\n\n        this._time = 0;\n        this.seek(adjustedTime);\n        this._state = PlayerState.FORWARD;\n      }\n    } else {\n      this.seek(time);\n    }\n  }\n\n  private stepBackward() {\n    let time = this._time - this._step;\n    let lastTime = this._time;\n\n    const repeatDirection = this._repeatDirection;\n\n    if (time <= 0) {\n      this._iterations++;\n\n      this.notify({\n        type: \"TICK\",\n        time: 0,\n        lastTime,\n      });\n\n      if (this._iterations >= this._repeat) {\n        this.seek(0);\n        this.stop();\n        return;\n      }\n\n      if (repeatDirection === RepeatDirection.ALTERNATE) {\n        const adjustedTime = time * -1;\n\n        this._time = 0;\n        this.seek(adjustedTime);\n        this._state = PlayerState.FORWARD;\n      } else {\n        const adjustedTime = 1 + time;\n\n        this.notify({\n          type: \"TICK\",\n          time: 1,\n          lastTime,\n        });\n\n        this._time = 1;\n        this.seek(adjustedTime);\n        this._state = PlayerState.REVERSE;\n      }\n    } else {\n      this.seek(time);\n    }\n  }\n\n  seek(time: number) {\n    const lastTime = this._time;\n    this._time = time;\n\n    this._render(this._time);\n\n    this.notify({\n      type: \"TICK\",\n      time,\n      lastTime,\n    });\n\n    return this;\n  }\n\n  stop() {\n    if (this._state !== PlayerState.STOPPED) {\n      this._state = PlayerState.STOPPED;\n      this._render(this._time);\n\n      this._clock.unregister(this.tick);\n\n      this.notify({\n        type: \"STOPPED\",\n      });\n    }\n\n    return this;\n  }\n\n  play() {\n    if (this._state !== PlayerState.FORWARD) {\n      this._lastTimestamp = this._clock.now();\n\n      this._state = PlayerState.FORWARD;\n      this._clock.register(this.tick);\n\n      this.notify({\n        type: \"PLAYED\",\n      });\n    }\n\n    return this;\n  }\n\n  reverse() {\n    if (this._state !== PlayerState.REVERSE) {\n      this._lastTimestamp = this._clock.now();\n\n      this._state = PlayerState.REVERSE;\n      this._clock.register(this.tick);\n\n      this.notify({\n        type: \"REVERSED\",\n      });\n    }\n\n    return this;\n  }\n\n  dispose() {\n    this.stop();\n    super.dispose();\n  }\n}\n","export default (percentage: number) => {\n  return percentage * percentage;\n};\n","export default (percentage: number) => {\n  return -percentage * (percentage - 2);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1) return (1 / 2) * percentage * percentage;\n  return (-1 / 2) * (--percentage * (percentage - 2) - 1);\n};\n","export default (percentage: number) => {\n  const p = 0.3 / 1;\n  const s = p / 4;\n  const a = 1;\n\n  if (percentage <= 0) return 0;\n  if (percentage >= 1) return 1;\n\n  return -(\n    a *\n    Math.pow(2, 10 * (percentage -= 1)) *\n    Math.sin(((percentage - s) * (2 * Math.PI)) / p)\n  );\n};\n","export default (t: number) => {\n  var b = 0;\n  var c = 1;\n  var d = 1;\n  var s = 1.70158;\n  var p = 0;\n  var a = c;\n\n  if (t == 0) return b;\n  if ((t /= d / 2) == 2) return b + c;\n  if (!p) p = d * (0.3 / 1);\n  if (a < Math.abs(c)) {\n    a = c;\n    var s = p / 4;\n  } else var s = (p / (2 * Math.PI)) * Math.asin(c / a);\n  if (t < 1)\n    return (\n      -0.5 *\n        (a *\n          Math.pow(2, 10 * (t -= 1)) *\n          Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\n      b\n    );\n  return (\n    a *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\n      0.5 +\n    c +\n    b\n  );\n};\n","export default (percentage: number) => {\n  const p = 0.3 / 1;\n  const s = p / 4;\n  const a = 1;\n\n  if (percentage <= 0) return 0;\n  if (percentage >= 1) return 1;\n\n  return (\n    a *\n      Math.pow(2, -10 * percentage) *\n      Math.sin(((percentage - s) * (2 * Math.PI)) / p) +\n    1\n  );\n};\n","export default (percentage: number) => {\n  const s = 1.70158 * 1.525;\n\n  if ((percentage /= 1 / 2) < 1) {\n    return (1 / 2) * (percentage * percentage * ((s + 1) * percentage - s));\n  }\n\n  return (\n    (1 / 2) * ((percentage -= 2) * percentage * ((s + 1) * percentage + s) + 2)\n  );\n};\n","export default (percentage: number) => {\n  let t = percentage;\n\n  if ((t /= 1) < 1 / 2.75) {\n    return 7.5625 * t * t;\n  } else if (t < 2 / 2.75) {\n    return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n  } else if (t < 2.5 / 2.75) {\n    return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n  } else {\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  }\n};\n","import easeOutBounce from \"./easeOutBounce\";\n\nexport default (percentage: number) => {\n  return 1 - easeOutBounce(1 - percentage);\n};\n","import easeInBounce from \"./easeInBounce\";\nimport easeOutBounce from \"./easeOutBounce\";\n\nexport default (percentage: number) => {\n  if (percentage < 0.5) {\n    return easeInBounce(percentage * 2) * 0.5;\n  } else {\n    return easeOutBounce(percentage * 2 - 1) * 0.5 + 0.5;\n  }\n};\n","export default (percentage: number) => {\n  return percentage * percentage * percentage;\n};\n","export default (percentage: number) => {\n  return 1 * ((percentage = percentage / 1 - 1) * percentage * percentage + 1);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * percentage * percentage * percentage;\n  return (1 / 2) * ((percentage -= 2) * percentage * percentage + 2);\n};\n","export default (percentage: number) => {\n  return 1 * (percentage /= 1) * percentage * percentage * percentage;\n};\n","export default (percentage: number) => {\n  return (\n    -1 *\n    ((percentage = percentage / 1 - 1) * percentage * percentage * percentage -\n      1)\n  );\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * percentage * percentage * percentage * percentage;\n  return (\n    (-1 / 2) * ((percentage -= 2) * percentage * percentage * percentage - 2)\n  );\n};\n","export default (percentage: number) => {\n  return (\n    1 * (percentage /= 1) * percentage * percentage * percentage * percentage\n  );\n};\n","export default (percentage: number) => {\n  return (\n    1 *\n    ((percentage = percentage / 1 - 1) *\n      percentage *\n      percentage *\n      percentage *\n      percentage +\n      1)\n  );\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (\n      (1 / 2) * percentage * percentage * percentage * percentage * percentage\n    );\n  return (\n    (1 / 2) *\n    ((percentage -= 2) * percentage * percentage * percentage * percentage + 2)\n  );\n};\n","export default (percentage: number) => {\n  return -Math.cos(percentage * (Math.PI / 2)) + 1;\n};\n","export default (percentage: number) => {\n  return 1 * Math.sin((percentage / 1) * (Math.PI / 2));\n};\n","export default (percentage: number) => {\n  return (-1 / 2) * (Math.cos((Math.PI * percentage) / 1) - 1);\n};\n","export default (percentage: number) => {\n  return percentage == 0 ? 0 : Math.pow(2, 10 * (percentage - 1));\n};\n","export default (percentage: number) => {\n  return percentage == 1 ? 1 : 1 * (-Math.pow(2, (-10 * percentage) / 1) + 1);\n};\n","export default (percentage: number) => {\n  if (percentage == 0) return 0;\n  if (percentage == 1) return 1;\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * Math.pow(2, 10 * (percentage - 1));\n  return (1 / 2) * (-Math.pow(2, -10 * --percentage) + 2);\n};\n","export default (percentage: number) => {\n  return -(Math.sqrt(1 - percentage * percentage) - 1);\n};\n","export default (percentage: number) => {\n  return 1 * Math.sqrt(1 - (percentage = percentage / 1 - 1) * percentage);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (-1 / 2) * (Math.sqrt(1 - percentage * percentage) - 1);\n  return (1 / 2) * (Math.sqrt(1 - (percentage -= 2) * percentage) + 1);\n};\n","export default (percentage: number) => {\n  const s = 1.70158;\n  return percentage * percentage * ((s + 1) * percentage - s);\n};\n","export default (percentage: number) => {\n  const s = 1.70158;\n  return (\n    1 *\n    ((percentage = percentage / 1 - 1) *\n      percentage *\n      ((s + 1) * percentage + s) +\n      1)\n  );\n};\n","export default (percentage: number) => {\n  return percentage;\n};\n","import easeInQuad from \"./easingFunctions/easeInQuad\";\nimport easeOutQuad from \"./easingFunctions/easeOutQuad\";\nimport easeInOutQuad from \"./easingFunctions/easeInOutQuad\";\nimport easeInElastic from \"./easingFunctions/easeInElastic\";\nimport easeInOutElastic from \"./easingFunctions/easeInOutElastic\";\nimport easeOutElastic from \"./easingFunctions/easeOutElastic\";\nimport easeInOutBack from \"./easingFunctions/easeInOutBack\";\nimport easeInOutBounce from \"./easingFunctions/easeInOutBounce\";\nimport easeInBounce from \"./easingFunctions/easeInBounce\";\nimport easeOutBounce from \"./easingFunctions/easeOutBounce\";\nimport easeInCubic from \"./easingFunctions/easeInCubic\";\nimport easeOutCubic from \"./easingFunctions/easeOutCubic\";\nimport easeInOutCubic from \"./easingFunctions/easeInOutCubic\";\nimport easeInQuart from \"./easingFunctions/easeInQuart\";\nimport easeOutQuart from \"./easingFunctions/easeOutQuart\";\nimport easeInOutQuart from \"./easingFunctions/easeInOutQuart\";\nimport easeInQuint from \"./easingFunctions/easeInQuint\";\nimport easeOutQuint from \"./easingFunctions/easeOutQuint\";\nimport easeInOutQuint from \"./easingFunctions/easeInOutQuint\";\nimport easeInSine from \"./easingFunctions/easeInSine\";\nimport easeOutSine from \"./easingFunctions/easeOutSine\";\nimport easeInOutSine from \"./easingFunctions/easeInOutSine\";\nimport easeInExpo from \"./easingFunctions/easeInExpo\";\nimport easeOutExpo from \"./easingFunctions/easeOutExpo\";\nimport easeInOutExpo from \"./easingFunctions/easeInOutExpo\";\nimport easeInCirc from \"./easingFunctions/easeInCirc\";\nimport easeOutCirc from \"./easingFunctions/easeOutCirc\";\nimport easeInOutCirc from \"./easingFunctions/easeInOutCirc\";\nimport easeInBack from \"./easingFunctions/easeInBack\";\nimport easeOutBack from \"./easingFunctions/easeOutBack\";\nimport easeLinear from \"./easingFunctions/easeLinear\";\n\nexport type EasingFunction = (percentage: number) => number;\n\nexport type EasingNames =\n  | \"easeInQuad\"\n  | \"easeOutQuad\"\n  | \"easeInOutQuad\"\n  | \"easeInCubic\"\n  | \"easeOutCubic\"\n  | \"easeInOutCubic\"\n  | \"easeInQuart\"\n  | \"easeOutQuart\"\n  | \"easeInOutQuart\"\n  | \"easeInQuint\"\n  | \"easeOutQuint\"\n  | \"easeInOutQuint\"\n  | \"easeInSine\"\n  | \"easeOutSine\"\n  | \"easeInOutSine\"\n  | \"easeInExpo\"\n  | \"easeOutExpo\"\n  | \"easeInOutExpo\"\n  | \"easeInCirc\"\n  | \"easeOutCirc\"\n  | \"easeInOutCirc\"\n  | \"easeInElastic\"\n  | \"easeOutElastic\"\n  | \"easeInOutElastic\"\n  | \"easeInBack\"\n  | \"easeOutBack\"\n  | \"easeInOutBack\"\n  | \"easeInBounce\"\n  | \"easeOutBounce\"\n  | \"easeInOutBounce\"\n  | \"linear\";\n\nconst easings = {\n  easeInQuad: easeInQuad,\n  easeOutQuad: easeOutQuad,\n  easeInOutQuad: easeInOutQuad,\n  easeInCubic: easeInCubic,\n  easeOutCubic: easeOutCubic,\n  easeInOutCubic: easeInOutCubic,\n  easeInQuart: easeInQuart,\n  easeOutQuart: easeOutQuart,\n  easeInOutQuart: easeInOutQuart,\n  easeInQuint: easeInQuint,\n  easeOutQuint: easeOutQuint,\n  easeInOutQuint: easeInOutQuint,\n  easeInSine: easeInSine,\n  easeOutSine: easeOutSine,\n  easeInOutSine: easeInOutSine,\n  easeInExpo: easeInExpo,\n  easeOutExpo: easeOutExpo,\n  easeInOutExpo: easeInOutExpo,\n  easeInCirc: easeInCirc,\n  easeOutCirc: easeOutCirc,\n  easeInOutCirc: easeInOutCirc,\n  easeInElastic: easeInElastic,\n  easeOutElastic: easeOutElastic,\n  easeInOutElastic: easeInOutElastic,\n  easeInBack: easeInBack,\n  easeOutBack: easeOutBack,\n  easeInOutBack: easeInOutBack,\n  easeInBounce: easeInBounce,\n  easeOutBounce: easeOutBounce,\n  easeInOutBounce: easeInOutBounce,\n  linear: easeLinear,\n};\n\nexport default easings;\n","export function deepClone<T>(value: T): T {\n  return JSON.parse(JSON.stringify(value));\n}\n","import easings, { EasingFunction } from \"./easings\";\nimport { DynamicEasingNames } from \"./createDynamicEasing\";\nimport { deepClone } from \"./deepClone\";\n\nexport interface IComplexKeyframeValue<T> {\n  value: T;\n  controlsIn?: T[];\n  controlsOut?: T[];\n  easeIn?: DynamicEasingNames;\n  easeOut?: DynamicEasingNames;\n}\n\nexport interface KeyframeConfig<T> {\n  property: string;\n  to: T;\n  from: T;\n  endAt?: number;\n  startAt?: number;\n  controls?: T[];\n  easing?: EasingFunction;\n}\n\nexport default class Keyframe<T> {\n  public property: string;\n  public to: T;\n  public from: T;\n  public result: T;\n  public startAt: number;\n  public endAt: number;\n  public controls: T[];\n  public easing: EasingFunction;\n\n  constructor(config: KeyframeConfig<T>) {\n    this.property = config.property;\n    this.to = config.to;\n    this.from = config.from;\n    this.result = deepClone(config.from);\n    this.startAt = typeof config.startAt === \"number\" ? config.startAt : 0;\n    this.endAt = typeof config.endAt === \"number\" ? config.endAt : 1;\n    this.controls = Array.isArray(config.controls) ? config.controls : [];\n    this.easing =\n      typeof config.easing === \"function\" ? config.easing : easings.linear;\n  }\n\n  clone() {\n    return new Keyframe({\n      property: this.property,\n      to: deepClone(this.to),\n      from: deepClone(this.from),\n      startAt: this.startAt,\n      endAt: this.endAt,\n      controls: this.controls.map((c) => deepClone(c)),\n      easing: this.easing,\n    });\n  }\n}","class Node {\r\n    constructor(type, name, startIndex, endIndex, isComposite = false) {\r\n        this.children = [];\r\n        this.value = \"\";\r\n        this.type = type;\r\n        this.name = name;\r\n        this.startIndex = startIndex;\r\n        this.endIndex = endIndex;\r\n        this.isComposite = isComposite;\r\n        if (typeof this.startIndex !== \"number\" ||\r\n            typeof this.endIndex !== \"number\") {\r\n            throw new Error(\"Invalid Arguments: startIndex and endIndex need to be number.\");\r\n        }\r\n    }\r\n}\n\nclass CompositeNode extends Node {\r\n    constructor(type, name, startIndex = 0, endIndex = 0) {\r\n        super(type, name, startIndex, endIndex, true);\r\n    }\r\n    clone() {\r\n        const node = new CompositeNode(this.type, this.name, this.startIndex, this.endIndex);\r\n        node.children = this.children.map((child) => {\r\n            return child.clone();\r\n        });\r\n        return node;\r\n    }\r\n    toString() {\r\n        return this.children.map((child) => child.toString()).join(\"\");\r\n    }\r\n}\n\nclass ValueNode extends Node {\r\n    constructor(type, name, value, startIndex = 0, endIndex = 0) {\r\n        super(type, name, startIndex, endIndex);\r\n        this.value = value;\r\n    }\r\n    clone() {\r\n        return new ValueNode(this.type, this.name, this.value, this.startIndex, this.endIndex);\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\n\nclass CursorHistory {\r\n    constructor() {\r\n        this.isRecording = false;\r\n        this.furthestMatch = {\r\n            pattern: null,\r\n            astNode: null,\r\n        };\r\n        this.furthestError = null;\r\n        this.patterns = [];\r\n        this.astNodes = [];\r\n        this.errors = [];\r\n    }\r\n    addMatch(pattern, astNode) {\r\n        if (this.isRecording) {\r\n            this.patterns.push(pattern);\r\n            this.astNodes.push(astNode);\r\n        }\r\n        if (this.furthestMatch.astNode == null ||\r\n            astNode.endIndex >= this.furthestMatch.astNode.endIndex) {\r\n            this.furthestMatch.pattern = pattern;\r\n            this.furthestMatch.astNode = astNode;\r\n        }\r\n    }\r\n    addError(error) {\r\n        if (this.isRecording) {\r\n            this.errors.push(error);\r\n        }\r\n        if (this.furthestError == null || error.index >= this.furthestError.index) {\r\n            this.furthestError = error;\r\n        }\r\n    }\r\n    startRecording() {\r\n        this.isRecording = true;\r\n    }\r\n    stopRecording() {\r\n        this.isRecording = false;\r\n        this.clear();\r\n    }\r\n    clear() {\r\n        this.patterns.length = 0;\r\n        this.astNodes.length = 0;\r\n        this.errors.length = 0;\r\n    }\r\n    getFurthestError() {\r\n        return this.furthestError;\r\n    }\r\n    getFurthestMatch() {\r\n        return this.furthestMatch;\r\n    }\r\n    getLastMatch() {\r\n        if (this.isRecording) {\r\n            return {\r\n                pattern: this.patterns[this.patterns.length - 1] || null,\r\n                astNode: this.astNodes[this.astNodes.length - 1] || null,\r\n            };\r\n        }\r\n        else {\r\n            return this.furthestMatch;\r\n        }\r\n    }\r\n    getLastError() {\r\n        return this.errors[this.errors.length - 1] || null;\r\n    }\r\n    getAllParseStacks() {\r\n        const stacks = this.astNodes.reduce((acc, node) => {\r\n            let container = acc[acc.length - 1];\r\n            if (node.startIndex === 0) {\r\n                container = [];\r\n                acc.push(container);\r\n            }\r\n            container.push(node);\r\n            return acc;\r\n        }, []);\r\n        // There are times when the matching will fail and hit again on the same node.\r\n        // This filters them out.\r\n        // We simply check to see if there is any overlap with the previous one,\r\n        // and if there is we don't add it. This is why we move backwards.\r\n        const cleanedStack = stacks.map((stack) => {\r\n            const cleanedStack = [];\r\n            for (let x = stack.length - 1; x >= 0; x--) {\r\n                const currentNode = stack[x];\r\n                const previousNode = stack[x + 1];\r\n                if (previousNode == null) {\r\n                    cleanedStack.unshift(currentNode);\r\n                }\r\n                else {\r\n                    const left = Math.max(currentNode.startIndex, previousNode.startIndex);\r\n                    const right = Math.min(currentNode.endIndex, previousNode.endIndex);\r\n                    const isOverlapping = left <= right;\r\n                    if (!isOverlapping) {\r\n                        cleanedStack.unshift(currentNode);\r\n                    }\r\n                }\r\n            }\r\n            return cleanedStack;\r\n        });\r\n        return cleanedStack;\r\n    }\r\n    getLastParseStack() {\r\n        const stacks = this.getAllParseStacks();\r\n        return stacks[stacks.length - 1] || [];\r\n    }\r\n}\n\nclass Cursor {\r\n    constructor(text) {\r\n        this.text = text;\r\n        this.assertValidity();\r\n        this.index = 0;\r\n        this.length = text.length;\r\n        this.history = new CursorHistory();\r\n        this.isInErrorState = false;\r\n    }\r\n    assertValidity() {\r\n        if (this.isNullOrEmpty(this.text)) {\r\n            throw new Error(\"Illegal Argument: Cursor needs to have a string that has a length greater than 0.\");\r\n        }\r\n    }\r\n    startRecording() {\r\n        this.history.startRecording();\r\n    }\r\n    stopRecording() {\r\n        this.history.stopRecording();\r\n    }\r\n    get parseError() {\r\n        return this.history.getFurthestError();\r\n    }\r\n    get lastMatch() {\r\n        return this.history.getFurthestMatch();\r\n    }\r\n    throwError(parseError) {\r\n        this.isInErrorState = true;\r\n        this.history.addError(parseError);\r\n    }\r\n    addMatch(pattern, astNode) {\r\n        this.history.addMatch(pattern, astNode);\r\n    }\r\n    resolveError() {\r\n        this.isInErrorState = false;\r\n    }\r\n    hasUnresolvedError() {\r\n        return this.isInErrorState;\r\n    }\r\n    isNullOrEmpty(value) {\r\n        return value == null || (typeof value === \"string\" && value.length === 0);\r\n    }\r\n    hasNext() {\r\n        return this.index + 1 < this.text.length;\r\n    }\r\n    hasPrevious() {\r\n        return this.index - 1 >= 0;\r\n    }\r\n    next() {\r\n        if (this.hasNext()) {\r\n            this.index++;\r\n        }\r\n        else {\r\n            throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n        }\r\n    }\r\n    previous() {\r\n        if (this.hasPrevious()) {\r\n            this.index--;\r\n        }\r\n        else {\r\n            throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n        }\r\n    }\r\n    mark() {\r\n        return this.index;\r\n    }\r\n    moveToMark(mark) {\r\n        this.index = mark;\r\n    }\r\n    moveToBeginning() {\r\n        this.index = 0;\r\n    }\r\n    moveToEnd() {\r\n        this.index = this.text.length - 1;\r\n    }\r\n    getChar() {\r\n        return this.text.charAt(this.index);\r\n    }\r\n    getIndex() {\r\n        return this.index;\r\n    }\r\n    setIndex(index) {\r\n        if (typeof index === \"number\") {\r\n            if (index < 0 || index > this.lastIndex()) {\r\n                throw new Error(\"Cursor: Out of Bounds Exception.\");\r\n            }\r\n            this.index = index;\r\n        }\r\n    }\r\n    isAtBeginning() {\r\n        return this.index === 0;\r\n    }\r\n    isAtEnd() {\r\n        return this.index === this.text.length - 1;\r\n    }\r\n    lastIndex() {\r\n        return this.length - 1;\r\n    }\r\n    didSuccessfullyParse() {\r\n        return !this.hasUnresolvedError() && this.isAtEnd();\r\n    }\r\n}\n\nclass ParseError {\r\n    constructor(message, index, pattern) {\r\n        this.name = \"ParseError\";\r\n        this.message = message;\r\n        this.index = index;\r\n        this.pattern = pattern;\r\n    }\r\n}\n\nclass Pattern {\r\n    constructor(type = \"\", name, children = []) {\r\n        this._type = type;\r\n        this._name = name;\r\n        this._children = [];\r\n        this._parent = null;\r\n        this.isSequence = false;\r\n        this._assertName();\r\n        this.children = children;\r\n    }\r\n    _assertName() {\r\n        if (typeof this.name !== \"string\") {\r\n            throw new Error(\"Invalid Argument: Patterns needs to have a name that's a string.\");\r\n        }\r\n    }\r\n    exec(text) {\r\n        const cursor = new Cursor(text);\r\n        const node = this.parse(cursor);\r\n        if (cursor.didSuccessfullyParse()) {\r\n            return node;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    test(text) {\r\n        return this.exec(text) != null;\r\n    }\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    set parent(value) {\r\n        if (value instanceof Pattern) {\r\n            this._parent = value;\r\n        }\r\n    }\r\n    get children() {\r\n        return this._children;\r\n    }\r\n    set children(value) {\r\n        this._children = value;\r\n        this._cloneChildren();\r\n        this._assertChildren();\r\n        this._assignAsParent();\r\n    }\r\n    _assertChildren() {\r\n        // Empty,can be overridden by subclasses.\r\n    }\r\n    _cloneChildren() {\r\n        // We need to clone the patterns so nested patterns can be parsed.\r\n        this._children = this._children.map((pattern) => {\r\n            if (!(pattern instanceof Pattern)) {\r\n                throw new Error(`The ${this.name} pattern has an invalid child pattern.`);\r\n            }\r\n            return pattern.clone();\r\n        });\r\n        // We need to freeze the children so they aren't modified.\r\n        Object.freeze(this._children);\r\n    }\r\n    _assignAsParent() {\r\n        this._children.forEach((child) => (child.parent = this));\r\n    }\r\n    getNextTokens() {\r\n        var _a, _b, _c;\r\n        const parent = this._parent;\r\n        if (parent != null) {\r\n            const siblings = parent.children;\r\n            const index = siblings.findIndex((c) => c === this);\r\n            const nextSibling = siblings[index + 1];\r\n            // I don't like this, so I think we need to rethink this.\r\n            if (parent.type.indexOf(\"repeat\") === 0) {\r\n                const tokens = parent.getNextTokens();\r\n                if (index === 0 && siblings.length > 1) {\r\n                    return nextSibling.getTokens().concat(tokens);\r\n                }\r\n                else if (index === 1) {\r\n                    return siblings[0].getTokens().concat(tokens);\r\n                }\r\n                else {\r\n                    return this.getTokens().concat(tokens);\r\n                }\r\n            }\r\n            // Another thing I don't like.\r\n            if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.indexOf(\"and\")) === 0 &&\r\n                nextSibling != null &&\r\n                ((_c = nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.type) === null || _c === void 0 ? void 0 : _c.indexOf(\"optional\")) === 0) {\r\n                let tokens = [];\r\n                for (let x = index + 1; x < siblings.length; x++) {\r\n                    const child = siblings[x];\r\n                    if (child.type.indexOf(\"optional\") === 0) {\r\n                        tokens = tokens.concat(child.getTokens());\r\n                    }\r\n                    else {\r\n                        tokens = tokens.concat(child.getTokens());\r\n                        break;\r\n                    }\r\n                    if (x === siblings.length - 1) {\r\n                        tokens = tokens.concat(this._parent.getNextTokens());\r\n                    }\r\n                }\r\n                return tokens;\r\n            }\r\n            // If you are an or you have already qualified.\r\n            if (parent.type.indexOf(\"or\") === 0) {\r\n                return parent.getNextTokens();\r\n            }\r\n            if (nextSibling != null) {\r\n                return nextSibling.getTokens();\r\n            }\r\n            else {\r\n                return parent.getNextTokens();\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    getTokenValue() {\r\n        return null;\r\n    }\r\n}\n\nclass ValuePattern extends Pattern {\r\n    constructor(type, name, children = []) {\r\n        super(type, name, children);\r\n    }\r\n}\n\nclass RegexValue extends ValuePattern {\r\n    constructor(name, regex) {\r\n        super(\"regex-value\", name);\r\n        this.node = null;\r\n        this.substring = \"\";\r\n        this.regexString = regex;\r\n        this.regex = new RegExp(`^${regex}`, \"g\");\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.regexString !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The regex argument needs to be a string of regex.\");\r\n        }\r\n        if (this.regexString.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The regex string argument needs to be at least one character long.\");\r\n        }\r\n        if (this.regexString.charAt(0) === \"^\") {\r\n            throw new Error(\"Invalid Arguments: The regex string cannot start with a '^' because it is expected to be in the middle of a string.\");\r\n        }\r\n        if (this.regexString.charAt(this.regexString.length - 1) === \"$\") {\r\n            throw new Error(\"Invalid Arguments: The regex string cannot end with a '$' because it is expected to be in the middle of a string.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.regex.lastIndex = 0;\r\n        this.substring = this.cursor.text.substr(this.cursor.getIndex());\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        const result = this.regex.exec(this.substring);\r\n        if (result != null && result.index === 0) {\r\n            const currentIndex = this.cursor.getIndex();\r\n            const newIndex = currentIndex + result[0].length - 1;\r\n            this.node = new ValueNode(\"regex-value\", this.name, result[0], currentIndex, newIndex);\r\n            this.cursor.index = newIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected regex pattern of '${this.regexString}' but found '${this.substring}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RegexValue(name, this.regexString);\r\n    }\r\n    getTokenValue() {\r\n        return this.name;\r\n    }\r\n    getTokens() {\r\n        return [this.name];\r\n    }\r\n}\n\nclass OptionalValue extends ValuePattern {\r\n    constructor(pattern) {\r\n        super(\"optional-value\", \"optional-value\", [pattern]);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (!(this.children[0] instanceof ValuePattern)) {\r\n            throw new Error(\"Invalid Arguments: Expected a ValuePattern.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        const mark = cursor.mark();\r\n        const node = this.children[0].parse(cursor);\r\n        if (cursor.hasUnresolvedError() || node == null) {\r\n            cursor.resolveError();\r\n            cursor.moveToMark(mark);\r\n            return null;\r\n        }\r\n        else {\r\n            cursor.addMatch(this, node);\r\n            return node;\r\n        }\r\n    }\r\n    clone() {\r\n        return new OptionalValue(this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass AndValue extends ValuePattern {\r\n    constructor(name, patterns) {\r\n        super(\"and-value\", name, patterns);\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: AndValue needs to have more than one value pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPatterns();\r\n        return this.node;\r\n    }\r\n    _tryPatterns() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n            }\r\n            if (!this._next()) {\r\n                this._processValue();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    _next() {\r\n        if (this._hasMorePatterns()) {\r\n            if (this.cursor.hasNext()) {\r\n                // If the last result was a failed optional, then don't increment the cursor.\r\n                if (this.nodes[this.nodes.length - 1] != null) {\r\n                    this.cursor.next();\r\n                }\r\n                this.index++;\r\n                return true;\r\n            }\r\n            else if (this.nodes[this.nodes.length - 1] == null) {\r\n                this.index++;\r\n                return true;\r\n            }\r\n            this._assertRestOfPatternsAreOptional();\r\n            return false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _hasMorePatterns() {\r\n        return this.index + 1 < this._children.length;\r\n    }\r\n    _assertRestOfPatternsAreOptional() {\r\n        const areTheRestOptional = this.children.every((pattern, index) => {\r\n            return index <= this.index || pattern instanceof OptionalValue;\r\n        });\r\n        if (!areTheRestOptional) {\r\n            const parseError = new ParseError(`Could not match ${this.name} before string ran out.`, this.index, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n    }\r\n    _processValue() {\r\n        if (this.cursor.hasUnresolvedError()) {\r\n            this.node = null;\r\n        }\r\n        else {\r\n            this.nodes = this.nodes.filter((node) => node != null);\r\n            const lastNode = this.nodes[this.nodes.length - 1];\r\n            const startIndex = this.mark;\r\n            const endIndex = lastNode.endIndex;\r\n            const value = this.nodes.map((node) => node.value).join(\"\");\r\n            this.node = new ValueNode(\"and-value\", this.name, value, startIndex, endIndex);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AndValue(name, this._children);\r\n    }\r\n    getTokens() {\r\n        let tokens = [];\r\n        for (let x = 0; x < this._children.length; x++) {\r\n            const child = this._children[x];\r\n            if (child instanceof OptionalValue) {\r\n                tokens = tokens.concat(child.getTokens());\r\n            }\r\n            else {\r\n                tokens = tokens.concat(child.getTokens());\r\n                break;\r\n            }\r\n        }\r\n        return tokens;\r\n    }\r\n}\n\nclass AnyOfThese extends ValuePattern {\r\n    constructor(name, characters) {\r\n        super(\"any-of-these\", name);\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.characters = characters;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.characters !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The characters argument needs to be a string of characters.\");\r\n        }\r\n        if (this.characters.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The characters argument needs to be at least one character long.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        if (this._isMatch()) {\r\n            const value = this.cursor.getChar();\r\n            const index = this.cursor.getIndex();\r\n            this.node = new ValueNode(\"any-of-these\", this.name, value, index, index);\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _isMatch() {\r\n        return this.characters.indexOf(this.cursor.getChar()) > -1;\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected one of these characters, '${this.characters}' but found '${this.cursor.getChar()}' while parsing for '${this.name}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AnyOfThese(name, this.characters);\r\n    }\r\n    getTokens() {\r\n        return this.characters.split(\"\");\r\n    }\r\n}\n\nclass Literal extends ValuePattern {\r\n    constructor(name, literal) {\r\n        super(\"literal\", name);\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.substring = \"\";\r\n        this.literal = literal;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (typeof this.literal !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: The literal argument needs to be a string of characters.\");\r\n        }\r\n        if (this.literal.length < 1) {\r\n            throw new Error(\"Invalid Arguments: The literalString argument needs to be at least one character long.\");\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n        this.substring = this.cursor.text.substring(this.mark, this.mark + this.literal.length);\r\n        this.node = null;\r\n    }\r\n    _tryPattern() {\r\n        if (this.substring === this.literal) {\r\n            this._processMatch();\r\n        }\r\n        else {\r\n            this._processError();\r\n        }\r\n    }\r\n    _processError() {\r\n        const message = `ParseError: Expected '${this.literal}' but found '${this.substring}'.`;\r\n        const parseError = new ParseError(message, this.cursor.getIndex(), this);\r\n        this.cursor.throwError(parseError);\r\n    }\r\n    _processMatch() {\r\n        this.node = new ValueNode(\"literal\", this.name, this.substring, this.mark, this.mark + this.literal.length - 1);\r\n        this.cursor.index = this.node.endIndex;\r\n        this.cursor.addMatch(this, this.node);\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new Literal(name, this.literal);\r\n    }\r\n    getTokenValue() {\r\n        return this.literal;\r\n    }\r\n    getTokens() {\r\n        return [this.getTokenValue()];\r\n    }\r\n}\n\nclass NotValue extends ValuePattern {\r\n    constructor(name, pattern) {\r\n        super(\"not-value\", name, [pattern]);\r\n        this.match = \"\";\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (!(this.children[0] instanceof Pattern)) {\r\n            throw new Error(\"Invalid Arguments: Expected the pattern to be a ValuePattern.\");\r\n        }\r\n        if (typeof this.name !== \"string\") {\r\n            throw new Error(\"Invalid Arguments: Expected name to be a string.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.match = \"\";\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const mark = this.cursor.mark();\r\n            this.children[0].parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this.cursor.resolveError();\r\n                this.cursor.moveToMark(mark);\r\n                this.match += this.cursor.getChar();\r\n                break;\r\n            }\r\n            else {\r\n                this.cursor.moveToMark(mark);\r\n                break;\r\n            }\r\n        }\r\n        this._processMatch();\r\n    }\r\n    _processMatch() {\r\n        if (this.match.length === 0) {\r\n            const parseError = new ParseError(`Didn't find any characters that didn't match the ${this.children[0].name} pattern.`, this.mark, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n        else {\r\n            this.node = new ValueNode(\"not-value\", this.name, this.match, this.mark, this.mark);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new NotValue(name, this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return [];\r\n    }\r\n}\n\nclass OrValue extends ValuePattern {\r\n    constructor(name, patterns) {\r\n        super(\"or-value\", name, patterns);\r\n        this.index = 0;\r\n        this.errors = [];\r\n        this.node = null;\r\n        this.mark = 0;\r\n        this.parseError = null;\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: OrValue needs to have more than one value pattern.\");\r\n        }\r\n        const hasOptionalChildren = this._children.some((pattern) => pattern instanceof OptionalValue);\r\n        if (hasOptionalChildren) {\r\n            throw new Error(\"OrValues cannot have optional values.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.errors = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                if (this.index + 1 < this._children.length) {\r\n                    this.cursor.resolveError();\r\n                    this.index++;\r\n                    this.cursor.moveToMark(this.mark);\r\n                }\r\n                else {\r\n                    this.node = null;\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                this.node = new ValueNode(\"or-value\", this.name, node.value, node.startIndex, node.endIndex);\r\n                this.cursor.index = this.node.endIndex;\r\n                this.cursor.addMatch(this, this.node);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new OrValue(name, this._children);\r\n    }\r\n    getTokens() {\r\n        const tokens = this._children.map((c) => c.getTokens());\r\n        const hasPrimitiveTokens = tokens.every((t) => t.every((value) => typeof value === \"string\"));\r\n        if (hasPrimitiveTokens && tokens.length > 0) {\r\n            return tokens.reduce((acc, t) => acc.concat(t), []);\r\n        }\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass RepeatValue extends ValuePattern {\r\n    constructor(name, pattern, divider) {\r\n        super(\"repeat-value\", name, divider != null ? [pattern, divider] : [pattern]);\r\n        this.nodes = [];\r\n        this.mark = 0;\r\n        this.node = null;\r\n        this._pattern = this.children[0];\r\n        this._divider = this.children[1];\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._pattern instanceof OptionalValue) {\r\n            throw new Error(\"Invalid Arguments: The pattern cannot be a optional pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.nodes = [];\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const node = this._pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this._processMatch();\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n                if (node.endIndex === this.cursor.lastIndex()) {\r\n                    this._processMatch();\r\n                    break;\r\n                }\r\n                this.cursor.next();\r\n                if (this._divider != null) {\r\n                    const mark = this.cursor.mark();\r\n                    const node = this._divider.parse(this.cursor);\r\n                    if (this.cursor.hasUnresolvedError()) {\r\n                        this.cursor.moveToMark(mark);\r\n                        this._processMatch();\r\n                        break;\r\n                    }\r\n                    else {\r\n                        this.nodes.push(node);\r\n                        this.cursor.next();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _processMatch() {\r\n        this.cursor.resolveError();\r\n        if (this.nodes.length === 0) {\r\n            const parseError = new ParseError(`Did not find a repeating match of ${this.name}.`, this.mark, this);\r\n            this.cursor.throwError(parseError);\r\n            this.node = null;\r\n        }\r\n        else {\r\n            const value = this.nodes.map((node) => node.value).join(\"\");\r\n            this.node = new ValueNode(\"repeat-value\", this.name, value, this.nodes[0].startIndex, this.nodes[this.nodes.length - 1].endIndex);\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RepeatValue(name, this._pattern, this._divider);\r\n    }\r\n    getTokens() {\r\n        return this._pattern.getTokens();\r\n    }\r\n}\n\nclass CompositePattern extends Pattern {\r\n    constructor(type, name, children = []) {\r\n        super(type, name, children);\r\n    }\r\n}\n\nclass OptionalComposite extends CompositePattern {\r\n    constructor(pattern) {\r\n        super(\"optional-composite\", \"optional-composite\", [pattern]);\r\n    }\r\n    parse(cursor) {\r\n        const mark = cursor.mark();\r\n        this.mark = mark;\r\n        const node = this.children[0].parse(cursor);\r\n        if (cursor.hasUnresolvedError()) {\r\n            cursor.resolveError();\r\n            cursor.moveToMark(mark);\r\n            return null;\r\n        }\r\n        else {\r\n            if (node != null) {\r\n                cursor.addMatch(this, node);\r\n            }\r\n            return node;\r\n        }\r\n    }\r\n    clone() {\r\n        return new OptionalComposite(this.children[0]);\r\n    }\r\n    getTokens() {\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass AndComposite extends CompositePattern {\r\n    constructor(name, patterns = []) {\r\n        super(\"and-composite\", name, patterns);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: AndValue needs to have more than one value pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.index = 0;\r\n        this.nodes = [];\r\n        this.node = null;\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPatterns();\r\n        return this.node;\r\n    }\r\n    _tryPatterns() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            const node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                this.cursor.moveToMark(this.mark);\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n            }\r\n            if (!this._next()) {\r\n                this._processValue();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    _next() {\r\n        if (this._hasMorePatterns()) {\r\n            if (this.cursor.hasNext()) {\r\n                // If the last result was a failed optional, then don't increment the cursor.\r\n                if (this.nodes[this.nodes.length - 1] != null) {\r\n                    this.cursor.next();\r\n                }\r\n                this.index++;\r\n                return true;\r\n            }\r\n            else if (this.nodes[this.nodes.length - 1] == null) {\r\n                this.index++;\r\n                return true;\r\n            }\r\n            this._assertRestOfPatternsAreOptional();\r\n            return false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _hasMorePatterns() {\r\n        return this.index + 1 < this._children.length;\r\n    }\r\n    _assertRestOfPatternsAreOptional() {\r\n        const areTheRestOptional = this.children.every((pattern, index) => {\r\n            return (index <= this.index ||\r\n                pattern instanceof OptionalValue ||\r\n                pattern instanceof OptionalComposite);\r\n        });\r\n        if (!areTheRestOptional) {\r\n            const parseError = new ParseError(`Could not match ${this.name} before string ran out.`, this.index, this);\r\n            this.cursor.throwError(parseError);\r\n        }\r\n    }\r\n    _processValue() {\r\n        if (!this.cursor.hasUnresolvedError()) {\r\n            this.nodes = this.nodes.filter((node) => node != null);\r\n            const lastNode = this.nodes[this.nodes.length - 1];\r\n            const startIndex = this.mark;\r\n            const endIndex = lastNode.endIndex;\r\n            this.node = new CompositeNode(\"and-composite\", this.name, startIndex, endIndex);\r\n            this.node.children = this.nodes;\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        else {\r\n            this.node = null;\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new AndComposite(name, this._children);\r\n    }\r\n    getTokens() {\r\n        let tokens = [];\r\n        for (let x = 0; x < this._children.length; x++) {\r\n            const child = this._children[x];\r\n            if (child instanceof OptionalValue ||\r\n                child instanceof OptionalComposite) {\r\n                tokens = tokens.concat(child.getTokens());\r\n            }\r\n            else {\r\n                tokens = tokens.concat(child.getTokens());\r\n                break;\r\n            }\r\n        }\r\n        return tokens;\r\n    }\r\n}\n\nclass OrComposite extends CompositePattern {\r\n    constructor(name, patterns) {\r\n        super(\"or-composite\", name, patterns);\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._children.length < 2) {\r\n            throw new Error(\"Invalid Argument: OrValue needs to have more than one value pattern.\");\r\n        }\r\n        const hasOptionalChildren = this._children.some((pattern) => pattern instanceof OptionalValue || pattern instanceof OptionalComposite);\r\n        if (hasOptionalChildren) {\r\n            throw new Error(\"OrComposite cannot have optional values.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.cursor = cursor;\r\n        this.mark = null;\r\n        this.index = 0;\r\n        this.node = null;\r\n        this.mark = cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        if (this.node != null) {\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const pattern = this._children[this.index];\r\n            this.node = pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError()) {\r\n                if (this.index + 1 < this._children.length) {\r\n                    this.cursor.resolveError();\r\n                    this.index++;\r\n                    this.cursor.moveToMark(this.mark);\r\n                }\r\n                else {\r\n                    this.node = null;\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                this.cursor.index = this.node.endIndex;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new OrComposite(name, this._children);\r\n    }\r\n    getTokens() {\r\n        const tokens = this._children.map((c) => c.getTokens());\r\n        const hasPrimitiveTokens = tokens.every((t) => t.every((value) => typeof value === \"string\"));\r\n        if (hasPrimitiveTokens && tokens.length > 0) {\r\n            return tokens.reduce((acc, t) => acc.concat(t), []);\r\n        }\r\n        return this._children[0].getTokens();\r\n    }\r\n}\n\nclass RepeatComposite extends CompositePattern {\r\n    constructor(name, pattern, divider) {\r\n        super(\"repeat-composite\", name, divider != null ? [pattern, divider] : [pattern]);\r\n        this.nodes = [];\r\n        this.mark = 0;\r\n        this.node = null;\r\n        this._pattern = this.children[0];\r\n        this._divider = this.children[1];\r\n        this._assertArguments();\r\n    }\r\n    _assertArguments() {\r\n        if (this._pattern instanceof OptionalComposite) {\r\n            throw new Error(\"Invalid Arguments: The pattern cannot be a optional pattern.\");\r\n        }\r\n    }\r\n    _reset(cursor) {\r\n        this.nodes = [];\r\n        this.cursor = cursor;\r\n        this.mark = this.cursor.mark();\r\n    }\r\n    parse(cursor) {\r\n        this._reset(cursor);\r\n        this._tryPattern();\r\n        return this.node;\r\n    }\r\n    _tryPattern() {\r\n        while (true) {\r\n            const node = this._pattern.parse(this.cursor);\r\n            if (this.cursor.hasUnresolvedError() || node == null) {\r\n                this._processMatch();\r\n                break;\r\n            }\r\n            else {\r\n                this.nodes.push(node);\r\n                if (node.endIndex === this.cursor.lastIndex()) {\r\n                    this._processMatch();\r\n                    break;\r\n                }\r\n                this.cursor.next();\r\n                if (this._divider != null) {\r\n                    const mark = this.cursor.mark();\r\n                    const node = this._divider.parse(this.cursor);\r\n                    if (this.cursor.hasUnresolvedError() || node == null) {\r\n                        this.cursor.moveToMark(mark);\r\n                        this._processMatch();\r\n                        break;\r\n                    }\r\n                    else {\r\n                        this.nodes.push(node);\r\n                        this.cursor.next();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _processMatch() {\r\n        this.cursor.resolveError();\r\n        if (this.nodes.length === 0) {\r\n            this.cursor.throwError(new ParseError(`Did not find a repeating match of ${this.name}.`, this.mark, this));\r\n            this.node = null;\r\n        }\r\n        else {\r\n            this.node = new CompositeNode(\"repeat-composite\", this.name, this.nodes[0].startIndex, this.nodes[this.nodes.length - 1].endIndex);\r\n            this.node.children = this.nodes;\r\n            this.cursor.index = this.node.endIndex;\r\n            this.cursor.addMatch(this, this.node);\r\n        }\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RepeatComposite(name, this._pattern, this._divider);\r\n    }\r\n    getTokens() {\r\n        return this._pattern.getTokens();\r\n    }\r\n}\n\nclass RecursivePattern extends Pattern {\r\n    constructor(name) {\r\n        super(\"recursive\", name);\r\n        this.pattern = null;\r\n        this.isRecursing = false;\r\n    }\r\n    getPattern() {\r\n        return this._climb(this.parent, (pattern) => {\r\n            if (pattern == null) {\r\n                return false;\r\n            }\r\n            return pattern.name === this.name;\r\n        });\r\n    }\r\n    _climb(pattern, isMatch) {\r\n        if (isMatch(pattern)) {\r\n            return pattern;\r\n        }\r\n        else {\r\n            if (pattern && pattern.parent != null) {\r\n                return this._climb(pattern.parent, isMatch);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    parse(cursor) {\r\n        if (this.pattern == null) {\r\n            const pattern = this.getPattern();\r\n            if (pattern == null) {\r\n                cursor.throwError(new ParseError(`Couldn't find parent pattern to recursively parse, with the name ${this.name}.`, cursor.index, this));\r\n                return null;\r\n            }\r\n            this.pattern = pattern.clone();\r\n            this.pattern.parent = this;\r\n        }\r\n        const node = this.pattern.parse(cursor);\r\n        if (!cursor.hasUnresolvedError() && node != null) {\r\n            cursor.addMatch(this, node);\r\n        }\r\n        return node;\r\n    }\r\n    clone(name) {\r\n        if (typeof name !== \"string\") {\r\n            name = this.name;\r\n        }\r\n        return new RecursivePattern(name);\r\n    }\r\n    getTokenValue() {\r\n        var _a;\r\n        return ((_a = this.getPattern()) === null || _a === void 0 ? void 0 : _a.getTokenValue()) || null;\r\n    }\r\n    getTokens() {\r\n        var _a;\r\n        if (!this.isRecursing) {\r\n            this.isRecursing = true;\r\n            const tokens = ((_a = this.getPattern()) === null || _a === void 0 ? void 0 : _a.getTokens()) || [];\r\n            this.isRecursing = false;\r\n            return tokens;\r\n        }\r\n        return [];\r\n    }\r\n}\n\nclass TextSuggester {\r\n    constructor() {\r\n        this.cursor = null;\r\n        this.result = null;\r\n        this.text = \"\";\r\n        this.match = null;\r\n        this.error = null;\r\n        this.patternMatch = null;\r\n        this.matchedText = \"\";\r\n        this.rootPattern = null;\r\n        this.tokens = {\r\n            startIndex: 0,\r\n            values: [],\r\n        };\r\n        this.options = [];\r\n        this.parseStack = [];\r\n    }\r\n    suggest(text, pattern) {\r\n        var _a, _b, _c;\r\n        this.reset();\r\n        this.text = text;\r\n        this.rootPattern = pattern;\r\n        // If no text all options are available.\r\n        if (text.length === 0) {\r\n            return {\r\n                pattern: null,\r\n                astNode: null,\r\n                match: null,\r\n                error: null,\r\n                options: {\r\n                    startIndex: 0,\r\n                    values: pattern.getTokens(),\r\n                },\r\n                isComplete: false,\r\n                parseStack: [],\r\n            };\r\n        }\r\n        this.parse();\r\n        this.saveParseStack();\r\n        this.saveMatchedText();\r\n        this.saveMatch();\r\n        this.saveError();\r\n        this.saveOptions();\r\n        this.saveNextToken();\r\n        return {\r\n            pattern: ((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.pattern) || null,\r\n            astNode: ((_b = this.patternMatch) === null || _b === void 0 ? void 0 : _b.astNode) || null,\r\n            match: this.match,\r\n            error: this.error,\r\n            options: this.tokens,\r\n            isComplete: ((_c = this.cursor) === null || _c === void 0 ? void 0 : _c.didSuccessfullyParse()) || false,\r\n            parseStack: this.parseStack,\r\n        };\r\n    }\r\n    reset() {\r\n        this.cursor = null;\r\n        this.result = null;\r\n        this.text = \"\";\r\n        this.match = null;\r\n        this.error = null;\r\n        this.patternMatch = null;\r\n        this.matchedText = \"\";\r\n        this.rootPattern = null;\r\n        this.tokens = {\r\n            startIndex: 0,\r\n            values: [],\r\n        };\r\n        this.options = [];\r\n        this.parseStack = [];\r\n    }\r\n    parse() {\r\n        var _a;\r\n        this.rootPattern = this.rootPattern;\r\n        this.cursor = new Cursor(this.text || \"\");\r\n        this.cursor.startRecording();\r\n        this.result = ((_a = this.rootPattern) === null || _a === void 0 ? void 0 : _a.parse(this.cursor)) || null;\r\n        this.patternMatch = this.cursor.lastMatch;\r\n    }\r\n    saveParseStack() {\r\n        var _a;\r\n        this.parseStack = ((_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.getLastParseStack()) || [];\r\n    }\r\n    saveMatchedText() {\r\n        var _a, _b;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode) != null) {\r\n            this.matchedText =\r\n                ((_b = this.text) === null || _b === void 0 ? void 0 : _b.substring(0, this.patternMatch.astNode.endIndex + 1)) || \"\";\r\n        }\r\n    }\r\n    saveMatch() {\r\n        var _a;\r\n        const node = (_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode;\r\n        if (node == null) {\r\n            this.match = null;\r\n            return;\r\n        }\r\n        let endIndex = this.matchedText.length - 1;\r\n        this.match = {\r\n            text: this.matchedText,\r\n            startIndex: 0,\r\n            endIndex: endIndex,\r\n        };\r\n    }\r\n    saveError() {\r\n        var _a;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.astNode) == null) {\r\n            this.error = {\r\n                startIndex: 0,\r\n                endIndex: this.text.length - 1,\r\n                text: this.text,\r\n            };\r\n            return this;\r\n        }\r\n        if (this.patternMatch != null &&\r\n            this.text.length > this.matchedText.length) {\r\n            const difference = this.text.length - this.matchedText.length;\r\n            const startIndex = this.patternMatch.astNode.endIndex + 1;\r\n            const endIndex = startIndex + difference - 1;\r\n            this.error = {\r\n                startIndex: startIndex,\r\n                endIndex: endIndex,\r\n                text: this.text.substring(startIndex, endIndex + 1),\r\n            };\r\n            return;\r\n        }\r\n        else {\r\n            this.error = null;\r\n            return;\r\n        }\r\n    }\r\n    saveNextToken() {\r\n        var _a, _b, _c, _d;\r\n        if (((_a = this.patternMatch) === null || _a === void 0 ? void 0 : _a.pattern) === this.rootPattern &&\r\n            ((_b = this.cursor) === null || _b === void 0 ? void 0 : _b.didSuccessfullyParse())) {\r\n            this.tokens = null;\r\n            return;\r\n        }\r\n        if (((_c = this.patternMatch) === null || _c === void 0 ? void 0 : _c.astNode) == null) {\r\n            let options = (_d = this.rootPattern) === null || _d === void 0 ? void 0 : _d.getTokens();\r\n            const parts = this.text.split(\" \").filter((part) => {\r\n                return part.length > 0;\r\n            });\r\n            options = options === null || options === void 0 ? void 0 : options.filter((option) => {\r\n                return parts.some((part) => {\r\n                    return option.indexOf(part) > -1;\r\n                });\r\n            });\r\n            if ((options === null || options === void 0 ? void 0 : options.length) === 0) {\r\n                this.tokens = null;\r\n                return;\r\n            }\r\n            this.tokens = {\r\n                startIndex: 0,\r\n                values: options || [],\r\n            };\r\n            return;\r\n        }\r\n        const options = this.options;\r\n        let startIndex = this.matchedText.length;\r\n        if (this.matchedText.length < this.text.length) {\r\n            const leftOver = this.text.substring(this.matchedText.length);\r\n            const partialMatchOptions = options\r\n                .filter((option) => {\r\n                return option.indexOf(leftOver) === 0;\r\n            })\r\n                .map((option) => {\r\n                return option.substring(leftOver.length);\r\n            });\r\n            if (partialMatchOptions.length === 0) {\r\n                this.tokens = null;\r\n                return;\r\n            }\r\n            else {\r\n                if (this.match == null) {\r\n                    return;\r\n                }\r\n                this.match = {\r\n                    text: this.match.text + leftOver,\r\n                    startIndex: this.match.startIndex,\r\n                    endIndex: this.match.endIndex + leftOver.length,\r\n                };\r\n                this.error = null;\r\n                this.tokens = {\r\n                    startIndex: this.match.endIndex + 1,\r\n                    values: partialMatchOptions,\r\n                };\r\n                return;\r\n            }\r\n        }\r\n        this.tokens = {\r\n            startIndex,\r\n            values: options,\r\n        };\r\n    }\r\n    saveOptions() {\r\n        var _a;\r\n        const furthestMatches = (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.astNodes.reduce((acc, node, index) => {\r\n            if (node.endIndex === acc.furthestTextIndex) {\r\n                acc.nodeIndexes.push(index);\r\n            }\r\n            else if (node.endIndex > acc.furthestTextIndex) {\r\n                acc.furthestTextIndex = node.endIndex;\r\n                acc.nodeIndexes = [index];\r\n            }\r\n            return acc;\r\n        }, { furthestTextIndex: -1, nodeIndexes: [] });\r\n        const matches = furthestMatches.nodeIndexes.reduce((acc, index) => {\r\n            var _a;\r\n            const pattern = (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.history.patterns[index];\r\n            const tokens = pattern === null || pattern === void 0 ? void 0 : pattern.getNextTokens();\r\n            tokens === null || tokens === void 0 ? void 0 : tokens.forEach((token) => {\r\n                acc[token] = true;\r\n            });\r\n            return acc;\r\n        }, {});\r\n        this.options = Object.keys(matches);\r\n    }\r\n    static suggest(text, pattern) {\r\n        return new TextSuggester().suggest(text, pattern);\r\n    }\r\n}\n\nclass Visitor {\r\n    constructor(root = null, selectedNodes = []) {\r\n        this.root = root;\r\n        this.selectedNodes = selectedNodes;\r\n    }\r\n    flatten() {\r\n        this.selectedNodes.forEach((node) => {\r\n            if (node.isComposite) {\r\n                const children = [];\r\n                Visitor.walkUp(node, (descendant) => {\r\n                    if (!descendant.isComposite) {\r\n                        children.push(descendant);\r\n                    }\r\n                });\r\n                node.children = children;\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    remove() {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        this.recursiveRemove(this.root);\r\n        return this;\r\n    }\r\n    recursiveRemove(node) {\r\n        const nodesToRemove = this.selectedNodes;\r\n        if (node.isComposite && Array.isArray(node.children)) {\r\n            for (let x = 0; x < node.children.length; x++) {\r\n                if (nodesToRemove.indexOf(node.children[x]) > -1) {\r\n                    node.children.splice(x, 1);\r\n                    x--;\r\n                }\r\n                else {\r\n                    this.recursiveRemove(node.children[x]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    wrap(callback) {\r\n        const visitor = new Visitor(this.root);\r\n        visitor.selectRoot().transform((node) => {\r\n            if (this.selectedNodes.includes(node)) {\r\n                return callback(node);\r\n            }\r\n            return node;\r\n        });\r\n        return this;\r\n    }\r\n    unwrap() {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        Visitor.walkDown(this.root, (node, stack) => {\r\n            if (this.selectedNodes.includes(node)) {\r\n                const parent = stack[stack.length - 1];\r\n                const grandParent = stack[stack.length - 2];\r\n                if (parent != null && grandParent != null) {\r\n                    const index = grandParent.children.indexOf(parent);\r\n                    if (index > -1) {\r\n                        grandParent.children.splice(index, 1, ...parent.children);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    prepend(callback) {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        Visitor.walkUp(this.root, (node, stack) => {\r\n            if (this.selectedNodes.includes(node)) {\r\n                const parent = stack[stack.length - 1];\r\n                if (parent != null) {\r\n                    const index = parent.children.indexOf(node);\r\n                    if (index > -1) {\r\n                        parent.children.splice(index, 0, callback(node));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    append(callback) {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        Visitor.walkDown(this.root, (node, stack) => {\r\n            if (this.selectedNodes.includes(node)) {\r\n                const parent = stack[stack.length - 1];\r\n                if (parent != null) {\r\n                    const index = parent.children.indexOf(node);\r\n                    if (index > -1) {\r\n                        parent.children.splice(index + 1, 0, callback(node));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    transform(callback) {\r\n        this.selectedNodes.forEach((node) => {\r\n            return this.recursiveTransform(node, callback);\r\n        });\r\n        return this;\r\n    }\r\n    recursiveTransform(node, callback) {\r\n        if (node.isComposite && Array.isArray(node.children)) {\r\n            const length = node.children.length;\r\n            for (let x = 0; x < length; x++) {\r\n                node.children[x] = this.recursiveTransform(node.children[x], callback);\r\n            }\r\n        }\r\n        return callback(node);\r\n    }\r\n    selectAll() {\r\n        return this.select((n) => true);\r\n    }\r\n    selectNode(node) {\r\n        return new Visitor(this.root, [...this.selectedNodes, node]);\r\n    }\r\n    deselectNode(node) {\r\n        const visitor = new Visitor(this.root, this.selectedNodes.slice());\r\n        return visitor.filter((n) => n !== node);\r\n    }\r\n    select(callback) {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        const node = this.root;\r\n        const selectedNodes = [];\r\n        if (node.isComposite) {\r\n            Visitor.walkDown(node, (descendant) => {\r\n                if (callback(descendant)) {\r\n                    selectedNodes.push(descendant);\r\n                }\r\n            });\r\n        }\r\n        return new Visitor(this.root, selectedNodes);\r\n    }\r\n    forEach(callback) {\r\n        this.selectedNodes.forEach(callback);\r\n        return this;\r\n    }\r\n    filter(callback) {\r\n        return new Visitor(this.root, this.selectedNodes.filter(callback));\r\n    }\r\n    map(callback) {\r\n        return new Visitor(this.root, this.selectedNodes.map(callback));\r\n    }\r\n    selectRoot() {\r\n        if (this.root == null) {\r\n            return this;\r\n        }\r\n        return new Visitor(this.root, [this.root]);\r\n    }\r\n    first() {\r\n        return this.get(0);\r\n    }\r\n    last() {\r\n        return this.get(this.selectedNodes.length - 1);\r\n    }\r\n    get(index) {\r\n        const node = this.selectedNodes[index];\r\n        if (node == null) {\r\n            throw new Error(`Couldn't find node at index: ${index}, out of ${this.selectedNodes.length}.`);\r\n        }\r\n        return new Visitor(node, []);\r\n    }\r\n    clear() {\r\n        this.selectedNodes = [];\r\n        return this;\r\n    }\r\n    setRoot(root) {\r\n        this.root = root;\r\n        return this;\r\n    }\r\n    static select(root, callback) {\r\n        if (callback != null) {\r\n            return new Visitor(root).select(callback);\r\n        }\r\n        else {\r\n            return new Visitor(root);\r\n        }\r\n    }\r\n    static walkUp(node, callback, ancestors = []) {\r\n        ancestors.push(node);\r\n        if (node.isComposite && Array.isArray(node.children)) {\r\n            const children = node.children.slice();\r\n            children.forEach((c) => this.walkUp(c, callback, ancestors));\r\n        }\r\n        ancestors.pop();\r\n        callback(node, ancestors);\r\n        return this;\r\n    }\r\n    static walkDown(node, callback, ancestors = []) {\r\n        callback(node, ancestors);\r\n        ancestors.push(node);\r\n        if (node.isComposite && Array.isArray(node.children)) {\r\n            const children = node.children.slice();\r\n            children.forEach((c) => this.walkDown(c, callback, ancestors));\r\n        }\r\n        ancestors.pop();\r\n        return this;\r\n    }\r\n}\n\nexport { AndComposite, AndValue, AnyOfThese, CompositeNode, CompositePattern, Cursor, Literal, Node, NotValue, OptionalComposite, OptionalValue, OrComposite, OrValue, ParseError, Pattern, RecursivePattern, RegexValue, RepeatComposite, RepeatValue, TextSuggester, ValueNode, ValuePattern, Visitor };\n//# sourceMappingURL=index.esm.js.map\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst divider = new RegexValue(\"divider\", \"\\\\s*[,]\\\\s*\");\n\nexport default divider;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst number = new RegexValue(\n  \"number\",\n  \"[-+]?[0-9]*[.]?[0-9]+([eE][-+]?[0-9]+)?\"\n);\n\nexport default number;\n","import { AndComposite, RegexValue } from \"clarity-pattern-parser\";\n\nimport number from \"./number\";\n\nconst unitType = new RegexValue(\"unit-type\", \"[a-zA-Z%]+\");\nconst unit = new AndComposite(\"unit\", [number, unitType]);\n\nexport default unit;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst hex = new RegexValue(\"hex\", \"#[0-9a-fA-F]{6}|#[0-9a-fA-F]{3}\");\n\nexport default hex;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst name = new RegexValue(\"name\", \"[a-zA-Z]+[a-zA-Z0-9_-]*\");\n\nexport default name;\n","import { Literal, RepeatValue } from \"clarity-pattern-parser\";\nimport { OptionalValue } from \"clarity-pattern-parser\";\n\nconst space = new Literal(\"optional-space\", \" \");\nconst spaces = new RepeatValue(\"optional-spaces\", space);\nconst optionalSpaces = new OptionalValue(spaces);\n\nexport default optionalSpaces;\n","import {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n  RecursivePattern,\n  OptionalComposite,\n} from \"clarity-pattern-parser\";\n\nimport name from \"./name\";\nimport optionalSpaces from \"./optionalSpaces\";\nimport divider from \"./divider\";\n\nconst openParen = new Literal(\"open-paren\", \"(\");\nconst closeParen = new Literal(\"close-paren\", \")\");\nconst values = new RecursivePattern(\"values\");\nconst args = new RepeatComposite(\"arguments\", values, divider);\nconst optionalArgs = new OptionalComposite(args);\n\nconst method = new AndComposite(\"method\", [\n  name,\n  openParen,\n  optionalSpaces,\n  optionalArgs,\n  optionalSpaces,\n  closeParen,\n]);\n\nexport default method;\n","import divider from \"./divider\";\nimport number from \"./number\";\nimport optionalSpaces from \"./optionalSpaces\";\n\nimport {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n} from \"clarity-pattern-parser\";\n\nconst openBracket = new Literal(\"open-square-bracket\", \"[\");\nconst closeBracket = new Literal(\"close-square-bracket\", \"]\");\nconst items = new RepeatComposite(\"items\", number, divider);\n\nconst array = new AndComposite(\"array\", [\n  openBracket,\n  optionalSpaces,\n  items,\n  optionalSpaces,\n  closeBracket,\n]);\n\nexport default array;\n","import { Literal, RepeatValue } from \"clarity-pattern-parser\";\n\nconst space = new Literal(\"space\", \" \");\nconst spaces = new RepeatValue(\"spaces\", space);\n\nexport default spaces;\n","import { AndComposite, OrComposite, RegexValue } from \"clarity-pattern-parser\";\nimport spaces from \"./spaces\";\nimport unit from \"./unit\";\nimport method from \"./method\";\n\nconst operator = new RegexValue(\"operator\", \"[\\\\+\\\\-\\\\*\\\\/]\");\nconst value = new OrComposite(\"value\", [unit, method]);\nconst expression = new AndComposite(\"expression\", [\n  value,\n  spaces,\n  operator,\n  spaces,\n  value,\n]);\n\nexport default expression;\n","import { OrComposite } from \"clarity-pattern-parser\";\nimport unit from \"./unit\";\nimport hex from \"./hex\";\nimport number from \"./number\";\nimport method from \"./method\";\nimport name from \"./name\";\nimport array from \"./array\";\nimport expression from \"./expression\";\n\nconst value = new OrComposite(\"value\", [\n  array,\n  hex,\n  expression,\n  method,\n  unit,\n  number,\n  name,\n]);\n\nexport default value;\n","import { RepeatComposite } from \"clarity-pattern-parser\";\nimport value from \"./value\";\nimport spaces from \"./spaces\";\n\nconst values = new RepeatComposite(\"values\", value, spaces);\n\nexport default values;\n","import { RepeatComposite } from \"clarity-pattern-parser\";\nimport divider from \"./divider\";\nimport values from \"./values\";\n\nconst cssValue = new RepeatComposite(\"css-value\", values, divider);\n\nexport default cssValue;\n","import { Visitor } from \"clarity-pattern-parser\";\nimport easings from \"./easings\";\nimport Keyframe, { KeyframeConfig } from \"./Keyframe\";\nimport cssValue from \"./patterns/cssValue\";\n\nconst visitor = new Visitor();\n\nconst convertValue = (value: string) => {\n  const node = cssValue.exec(String(value));\n  if (node == null) {\n    return [];\n  }\n\n  visitor\n    .setRoot(node)\n    .selectRoot()\n    .flatten()\n    .clear()\n    .select((n) => n.name === \"optional-spaces\")\n    .remove()\n    .clear()\n    .select((n) => n.name === \"spaces\")\n    .transform((n) => {\n      n.value = \" \";\n      return n;\n    });\n\n  return node.children.map((n) => {\n    if (n.name === \"number\") {\n      return parseFloat(n.value);\n    } else {\n      return n.value;\n    }\n  });\n};\n\nexport default class CssKeyframe extends Keyframe<(string | number)[]> {\n  constructor({\n    from,\n    to,\n    easing = easings.linear,\n    controls = [],\n    ...config\n  }: KeyframeConfig<string>) {\n    const toValue = convertValue(to);\n    const fromValue = convertValue(from);\n    const controlsValues = controls.map((c) => convertValue(c));\n\n    super({\n      ...config,\n      from: fromValue,\n      to: toValue,\n      controls: controlsValues,\n      easing,\n    });\n  }\n\n\n}","import BezierCurve from \"./BezierCurve\";\n\nexport const easingOutMap = {\n  linear: [1],\n  quad: [1, 1],\n  cubic: [1, 1, 1],\n  quart: [1, 1, 1, 1],\n  back: [2, 1, 1],\n  quint: [1, 1, 1, 1, 1],\n  expo: [1, 1, 1, 1, 1, 1],\n  circ: [0.65, 0.75, 0.85, 0.95, 1, 1, 1, 1],\n  elastic: [2, 2, -1, 1.5, 1.5, 0.75, 1.25, 0.85, 1, 1, 1],\n};\n\nexport const easingInMap = {\n  linear: [0],\n  quad: [0, 0],\n  cubic: [0, 0, 0],\n  quart: [0, 0, 0, 0],\n  back: [0, 0, -1],\n  quint: [0, 0, 0, 0, 0],\n  expo: [0, 0, 0, 0, 0, 0],\n  circ: [0, 0, 0, 0, 0.05, 0.15, 0.25, 0.35],\n  elastic: [0, 0, 0, 0.15, -0.25, 0.25, -0.5, -0.5, 2, -1, -1],\n};\n\nexport type DynamicEasingNames = keyof typeof easingInMap;\n\nexport default function createDynamicEasing(\n  easingIn: DynamicEasingNames,\n  easingOut: DynamicEasingNames\n) {\n  const points = [...easingInMap[easingIn], ...easingOutMap[easingOut]];\n  const bezierCurve = new BezierCurve(points);\n\n  return (percentage: number) => {\n    return bezierCurve.valueAt(percentage);\n  };\n}\n","import createDynamicEasing, { DynamicEasingNames } from \"./createDynamicEasing\";\nimport CssKeyframe from \"./CssKeyframe\";\n\nexport type ICssAnimatedProperties<T> = {\n  [P in keyof T]: T[P] | ICssPercentageKeyframes<T[P]>;\n};\n\nexport interface ICssPercentageKeyframes<TValue> {\n  [key: string]: TValue | ICssKeyframeControls<TValue>;\n  from: TValue | ICssKeyframeControls<TValue>;\n  to: TValue | ICssKeyframeControls<TValue>;\n}\n\nexport interface ICssKeyframeControls<TValue> {\n  value: TValue;\n  controlsIn?: TValue[];\n  controlsOut?: TValue[];\n  easeIn?: DynamicEasingNames;\n  easeOut?: DynamicEasingNames;\n}\n\nexport default class CSSKeyframesGenerator {\n  private transformValue: (value: any) => any = (value) => value;\n\n  setTransformValue(transformValue: (value: any) => any) {\n    this.transformValue = transformValue;\n  }\n\n  isComplexKeyframe(value: any) {\n    return value.hasOwnProperty(\"value\");\n  }\n\n  sortPercentages = (keyA: string, keyB: string) => {\n    if (keyA === \"from\") {\n      return -1;\n    }\n\n    if (keyB === \"from\") {\n      return 1;\n    }\n\n    if (keyA === \"to\") {\n      return 1;\n    }\n\n    if (keyB === \"to\") {\n      return -1;\n    }\n\n    const keyAParts = keyA.split(\"%\");\n    const keyBParts = keyB.split(\"%\");\n    const keyANumber = parseFloat(keyAParts[0]);\n    const keyBNumber = parseFloat(keyBParts[0]);\n\n    if (keyANumber < keyBNumber) {\n      return -1;\n    } else if (keyANumber > keyBNumber) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  getDecimalFromPercentage(percentage: string) {\n    if (percentage === \"to\") {\n      return 1;\n    }\n\n    if (percentage === \"from\") {\n      return 0;\n    }\n\n    const percentageParts = percentage.split(\"%\");\n    let decimal = parseFloat(percentageParts[0]) / 100;\n\n    if (isNaN(decimal)) {\n      throw new Error(\n        `Unknown keyframe step: ${decimal}. Expected format 10% or 10.01% etc`\n      );\n    }\n\n    decimal = Math.max(0, decimal);\n    decimal = Math.min(1, decimal);\n\n    return decimal;\n  }\n\n  getEaseIn<T>(currentValue: ICssKeyframeControls<T>) {\n    if (this.isComplexKeyframe(currentValue) && currentValue.easeOut != null) {\n      return currentValue.easeOut || \"linear\";\n    } else {\n      return \"linear\";\n    }\n  }\n\n  getEaseOut<T>(nextValue: ICssKeyframeControls<T>) {\n    if (this.isComplexKeyframe(nextValue) && nextValue.easeIn != null) {\n      return nextValue.easeIn || \"linear\";\n    } else {\n      return \"linear\";\n    }\n  }\n\n  getControlsIn<T>(currentValue: ICssKeyframeControls<T>) {\n    if (\n      this.isComplexKeyframe(currentValue) &&\n      Array.isArray(currentValue.controlsOut)\n    ) {\n      return currentValue.controlsOut.map((v) => this.transformValue(v));\n    } else {\n      return [];\n    }\n  }\n\n  getControlsOut<T>(nextValue: ICssKeyframeControls<T>) {\n    if (\n      this.isComplexKeyframe(nextValue) &&\n      Array.isArray(nextValue.controlsIn)\n    ) {\n      return nextValue.controlsIn.map((v) => this.transformValue(v));\n    } else {\n      return [];\n    }\n  }\n\n  getFrom<T>(currentValue: ICssKeyframeControls<T>) {\n    if (this.isComplexKeyframe(currentValue)) {\n      return this.transformValue(currentValue.value);\n    } else if (typeof currentValue === \"string\") {\n      return this.transformValue(currentValue);\n    } else {\n      if (typeof currentValue?.value === \"string\") {\n        throw new Error(\n          \"Invalid complex value, only found a value with no other complex settings.\"\n        );\n      }\n      throw new Error(`Unknown from value: ${JSON.stringify(currentValue)}`);\n    }\n  }\n\n  getTo<T>(nextValue: ICssKeyframeControls<T>) {\n    if (this.isComplexKeyframe(nextValue)) {\n      return this.transformValue(nextValue.value);\n    } else if (typeof nextValue === \"string\") {\n      return this.transformValue(nextValue);\n    } else {\n      if (typeof nextValue?.value === \"string\") {\n        throw new Error(\n          \"Invalid complex value, only found a value with no other complex settings.\"\n        );\n      }\n      throw new Error(`Unknown to value: ${JSON.stringify(nextValue)}`);\n    }\n  }\n\n  normalizePrimitiveValue<T>(value: T): ICssKeyframeControls<T> {\n    return {\n      value,\n    };\n  }\n\n  normalizeValue<T>(\n    value: T | ICssKeyframeControls<T>\n  ): ICssKeyframeControls<T> {\n    if (typeof value === \"string\" || typeof value === \"number\") {\n      return this.normalizePrimitiveValue(value);\n    } else {\n      return value as ICssKeyframeControls<T>;\n    }\n  }\n\n  normalizeKeyframeValue<T>(\n    value: T | ICssKeyframeControls<T> | ICssPercentageKeyframes<T>\n  ): ICssPercentageKeyframes<T> {\n    if (typeof value === \"string\" || typeof value === \"number\") {\n      return {\n        from: this.normalizePrimitiveValue(value),\n        to: this.normalizePrimitiveValue(value),\n      };\n    } else if (typeof value === \"object\" && value != null) {\n      const keyframes: any = value;\n      const keys = Object.keys(keyframes);\n      keys.forEach((key) => {\n        const keyframeValue = this.normalizeValue(keyframes[key]);\n        keyframeValue;\n      });\n\n      return value as ICssPercentageKeyframes<T>;\n    } else {\n      throw new Error(\"Unknown value type.\");\n    }\n  }\n\n  generate<T>(animatedProperties: ICssAnimatedProperties<T>) {\n    const animatedPropertyNames = Object.keys(\n      animatedProperties\n    ) as (keyof T)[];\n    const keyframes: CssKeyframe[] = [];\n\n    for (let x = 0; x < animatedPropertyNames.length; x++) {\n      const property = animatedPropertyNames[x];\n      let lastKeyFramePercentage = 0;\n      const keyframeValue = this.normalizeKeyframeValue(\n        animatedProperties[property]\n      );\n      const timeKeys = Object.keys(keyframeValue);\n      timeKeys.sort(this.sortPercentages);\n\n      for (let index = 0; index < timeKeys.length - 1; index++) {\n        const key = timeKeys[index];\n        const nextKey = timeKeys[index + 1];\n\n        const currentValue = this.normalizeValue(keyframeValue[key]);\n        const nextValue = this.normalizeValue(keyframeValue[nextKey]);\n        const startAt = lastKeyFramePercentage;\n        const endAt = this.getDecimalFromPercentage(timeKeys[index + 1]);\n\n        lastKeyFramePercentage = endAt;\n\n        const easingIn = this.getEaseIn(currentValue);\n        const easingOut = this.getEaseOut(nextValue);\n        const easing = createDynamicEasing(easingIn, easingOut);\n        const controlsIn = this.getControlsIn(currentValue);\n        const controlsOut = this.getControlsOut(nextValue);\n        const controls = [...controlsIn, ...controlsOut];\n        const from = this.getFrom(currentValue);\n        const to = this.getTo(nextValue);\n\n        const keyframe = new CssKeyframe({\n          property: property.toString(),\n          from,\n          to,\n          controls,\n          easing,\n          startAt,\n          endAt,\n        });\n\n        keyframes.push(keyframe);\n      }\n    }\n    return keyframes;\n  }\n}\n","const emptyFn = () => 0;\n\ntype Visitor = (object: any) => number;\n\nexport default class ObjectVisitor {\n  private visitor: Visitor = emptyFn;\n\n  constructor(callback: Visitor = emptyFn) {\n    this.setVisitor(callback);\n  }\n\n  visit(object: any) {\n    this.walk(object);\n  }\n\n  private walk(object: any) {\n    if (typeof object === \"object\" && object != null) {\n      for (let key in object) {\n        if (typeof object[key] === \"number\") {\n          object[key] = this.visitor(object[key]);\n        } else if (typeof object[key] === \"object\") {\n          this.walk(object[key]);\n        }\n      }\n    }\n  }\n\n  setVisitor(visitor: Visitor) {\n    if (typeof visitor === \"function\") {\n      this.visitor = visitor;\n    } else {\n      this.visitor = emptyFn;\n    }\n\n    this.visitor = visitor;\n  }\n}\n","const emptyFn = () => 0;\n\ntype Visitor = (left: number, right: number) => number;\n\nexport default class ObjectsVisitor {\n  private visitor: Visitor = emptyFn;\n\n  constructor(callback: Visitor = emptyFn) {\n    this.setVisitor(callback);\n  }\n\n  visit(left: any, right: any, output: any) {\n    this.walk(left, right, output);\n  }\n\n  private walk(left: any, right: any, output: any) {\n    if (typeof left === \"object\" && left != null) {\n      for (let key in left) {\n        if (\n          typeof left[key] === \"number\" &&\n          typeof right[key] === \"number\" &&\n          typeof output[key] === \"number\"\n        ) {\n          output[key] = this.visitor(left[key], right[key]);\n        } else if (typeof left[key] === \"object\") {\n          this.walk(left[key], right[key], output[key]);\n        }\n      }\n    }\n  }\n\n  setVisitor(visitor: Visitor) {\n    if (typeof visitor === \"function\") {\n      this.visitor = visitor;\n    } else {\n      this.visitor = emptyFn;\n    }\n\n    this.visitor = visitor;\n  }\n}\n","import ObjectVisitor from \"./ObjectVisitor\";\nimport ObjectsVisitor from \"./ObjectsVisitor\";\n\nconst add = (left: number, right: number) => {\n  return left + right;\n};\n\nconst subtract = (left: number, right: number) => {\n  return left - right;\n};\n\nconst multiply = (left: number, right: number) => {\n  return left * right;\n};\n\nconst divide = (left: number, right: number) => {\n  return left / right;\n};\n\nexport default class ObjectOperator {\n  public visitor: ObjectVisitor;\n  public objectsVisitor: ObjectsVisitor;\n\n  constructor() {\n    this.objectsVisitor = new ObjectsVisitor();\n    this.visitor = new ObjectVisitor();\n  }\n\n  assign<T>(object: T, number: number) {\n    this.visitor.setVisitor(() => {\n      return number;\n    });\n\n    this.visitor.visit(object);\n  }\n\n  add<T>(left: T, right: T, output: T) {\n    this.objectsVisitor.setVisitor(add);\n    this.objectsVisitor.visit(left, right, output);\n  }\n\n  subtract<T>(left: T, right: T, output: T) {\n    this.objectsVisitor.setVisitor(subtract);\n    this.objectsVisitor.visit(left, right, output);\n  }\n\n  multiply<T>(left: T, right: T, output: T) {\n    this.objectsVisitor.setVisitor(multiply);\n    this.objectsVisitor.visit(left, right, output);\n  }\n\n  divide<T>(left: T, right: T, output: T) {\n    this.objectsVisitor.setVisitor(divide);\n    this.objectsVisitor.visit(left, right, output);\n  }\n}\n","import easings from \"./easings\";\nimport Keyframe from \"./Keyframe\";\nimport Animation, { IAnimation } from \"./Animation\";\nimport ObjectOperator from \"./ObjectOperator\";\nimport { deepClone } from \"./deepClone\";\n\nconst nullableAnimation = new Animation(\"null\", [\n  new Keyframe({ from: 0, to: 0, property: \"null\" }),\n]);\n\nconst objectOperator = new ObjectOperator();\n\nconst FORWARD = 1;\n\nexport default class SlopeAnimationBuilder {\n  private direction = 0;\n  private newDuration = 0;\n  private duration = 0;\n  private offset = 0;\n  public delta = 0.01;\n  private animation: IAnimation<any> = nullableAnimation;\n  private slopeAnimation!: IAnimation<any>;\n  private deltaStepValues: any;\n  private deltaValues: any;\n  private nowValues: any;\n  private toValues: any;\n  private scaleValues: any;\n  private dynamicValues: any;\n\n  private cloneValues(values: any) {\n    return deepClone(values);\n  }\n\n  build<T>(\n    animation: IAnimation<T>,\n    duration: number,\n    offset: number,\n    extendDurationBy: number,\n    direction = 0\n  ) {\n    this.animation = animation;\n    this.offset = offset;\n    this.duration = this.getSafeDuration(duration);\n    this.newDuration = extendDurationBy;\n    this.direction = direction;\n\n    // If the offset is at or near the end get the last slope.\n    if (this.offset + this.delta > 1) {\n      this.offset -= this.delta;\n    }\n\n    this.calculate();\n    this.createSlopeTimeline();\n\n    return this.slopeAnimation as IAnimation<T>;\n  }\n\n  private getSafeDuration(value: number) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing. All Math blows up if the duration is \"0\".\n    if (value <= 0) {\n      value = 0.00001;\n    }\n    return value;\n  }\n\n  private cacheValues() {\n    this.deltaStepValues = this.cloneValues(this.nowValues);\n    this.scaleValues = this.cloneValues(this.nowValues);\n    this.dynamicValues = this.cloneValues(this.nowValues);\n\n    this.cacheDeltaStepValues();\n    this.cacheScaleValues();\n  }\n\n  private cacheDeltaStepValues() {\n    Object.keys(this.deltaStepValues).forEach((property) => {\n      objectOperator.assign(this.deltaStepValues[property], this.delta);\n    });\n  }\n\n  private cacheScaleValues() {\n    const scale = this.newDuration / this.duration;\n\n    Object.keys(this.scaleValues).forEach((property) => {\n      objectOperator.assign(this.scaleValues[property], scale);\n    });\n  }\n\n  private cacheDeltaValueForward() {\n    this.animation.update(this.offset + this.delta);\n    this.deltaValues = this.cloneValues(this.animation.currentValues);\n  }\n\n  private cacheDeltaValueStopped() {\n    this.animation.update(this.offset);\n    this.deltaValues = this.cloneValues(this.animation.currentValues);\n  }\n\n  private calculate() {\n    this.animation.update(this.offset);\n    this.nowValues = this.cloneValues(this.animation.currentValues);\n    this.toValues = this.cloneValues(this.nowValues);\n\n    if (this.direction === FORWARD) {\n      this.cacheDeltaValueForward();\n    } else {\n      this.cacheDeltaValueStopped();\n    }\n\n    Object.keys(this.nowValues).forEach((property) => {\n      const value = this.nowValues[property];\n\n      if (typeof value === \"object\" && value != null) {\n        this.cacheValues();\n        this.calculateObject(property);\n      } else {\n        this.calculatePrimitive(property);\n      }\n    });\n  }\n\n  private calculatePrimitive(property: string) {\n    const now = this.nowValues[property];\n    const dxNow = this.deltaValues[property];\n\n    const scale = this.newDuration / this.duration;\n    const diff = dxNow - now;\n    const derivative = diff / this.delta;\n    const scaled = derivative * scale;\n    const to = now + scaled;\n\n    this.toValues[property] = to;\n  }\n\n  private calculateObject(property: string) {\n    const now = this.nowValues[property];\n    const delta = this.deltaValues[property];\n    const deltaStep = this.deltaStepValues[property];\n    const scale = this.scaleValues[property];\n    const dynamicValue = this.dynamicValues[property];\n    const to = this.toValues[property];\n\n    objectOperator.subtract(delta, now, dynamicValue);\n    objectOperator.divide(dynamicValue, deltaStep, dynamicValue);\n    objectOperator.multiply(dynamicValue, scale, dynamicValue);\n    objectOperator.add(now, dynamicValue, to);\n\n    this.toValues[property] = to;\n  }\n\n  private createSlopeTimeline() {\n    const keyframes = Object.keys(this.nowValues)\n      .map((property) => {\n        return new Keyframe({\n          property,\n          from: this.nowValues[property],\n          controls: [],\n          to: this.toValues[property],\n          startAt: 0,\n          endAt: 1,\n          easing: easings.linear,\n        });\n      })\n      .flat();\n\n    this.slopeAnimation = new Animation(\"slope\", keyframes);\n  }\n}\n","import { IAnimation, AnimationState } from \"./Animation\";\nimport SlopeAnimationBuilder from \"./SlopeAnimationBuilder\";\n\nconst slopeAnimationBuilder = new SlopeAnimationBuilder();\n\nexport default class ExtendedAnimation<T> implements IAnimation<T> {\n  private animation: IAnimation<T>;\n  private slopeAnimation: IAnimation<T>;\n  private offset: number;\n  private duration;\n  private extendDurationBy;\n\n  public currentValues: T;\n  public name: string;\n  public time: number = 0;\n\n  constructor(\n    animation: IAnimation<T>,\n    duration: number,\n    offset: number,\n    extendDurationBy = 0\n  ) {\n    this.duration = this.getSafeDuration(duration);\n    this.offset = offset;\n    this.extendDurationBy = extendDurationBy;\n\n    this.animation = animation;\n    this.currentValues = this.animation.currentValues;\n    this.name = this.animation.name;\n\n    this.slopeAnimation = slopeAnimationBuilder.build(\n      this.animation,\n      duration,\n      1,\n      extendDurationBy,\n      1\n    );\n  }\n\n  private getSafeDuration(value: number) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing. All Math blows up if the duration is \"0\".\n    if (value <= 0) {\n      value = 0.00001;\n    }\n    return value;\n  }\n\n  update(time: number) {\n    this.time = time;\n    const offsetTime = this.offset + time;\n\n    if (offsetTime + slopeAnimationBuilder.delta > 1) {\n      if (this.slopeAnimation == null) {\n        return this;\n      }\n\n      const overflowTime = offsetTime + slopeAnimationBuilder.delta - 1;\n      this.slopeAnimation.update(overflowTime);\n      this.currentValues = this.slopeAnimation.currentValues;\n    } else {\n      if (this.animation == null) {\n        return this;\n      }\n\n      this.animation.update(offsetTime);\n      this.currentValues = this.animation.currentValues;\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new ExtendedAnimation(\n      this.animation.clone(),\n      this.duration,\n      this.offset,\n      this.extendDurationBy\n    );\n  }\n}\n","import Animation, { IAnimation } from \"./Animation\";\nimport Keyframe from \"./Keyframe\";\nimport easings, { EasingFunction } from \"./easings\";\n\nexport default class BlendedAnimation<T> extends Animation<T> {\n  public fromAnimation: IAnimation<T>;\n  public toAnimation: IAnimation<T>;\n  public properties: string[];\n  private easing: EasingFunction;\n\n  constructor(\n    fromAnimation: IAnimation<T>,\n    toAnimation: IAnimation<T>,\n    easing: EasingFunction = easings.easeOutExpo\n  ) {\n    const fromValues = fromAnimation.currentValues;\n    const toValues = toAnimation.currentValues;\n    const properties = Object.keys(fromValues as any);\n\n    const keyframes = properties\n      .map((name) => {\n        const from = (fromValues as any)[name];\n        const to = (toValues as any)[name];\n\n        if (to == null) {\n          throw new Error(\n            `Blended animations need to have the same properties to animate.  From Animation: ${JSON.stringify(\n              Object.keys(from)\n            )}, To Animation: ${JSON.stringify(Object.keys(to))}`\n          );\n        }\n\n        return new Keyframe({\n          property: name,\n          startAt: 0,\n          endAt: 1,\n          from,\n          to,\n          controls: [],\n          easing: easing || easings.linear,\n        });\n      })\n      .flat();\n\n    super(`${fromAnimation.name}-${toAnimation.name}-blended`, keyframes);\n\n    this.easing = easing;\n    this.properties = properties;\n    this.fromAnimation = fromAnimation;\n    this.toAnimation = toAnimation;\n  }\n\n  updateKeyframes() {\n    const length = this.properties.length;\n\n    for (let x = 0; x < length; x++) {\n      const animator = this.animators[x];\n      const property = animator.keyframe.property;\n      const keyframe = animator.keyframe;\n\n      keyframe.to = (this.toAnimation.currentValues as any)[property];\n      keyframe.from = (this.fromAnimation.currentValues as any)[property];\n    }\n  }\n\n  update(time: number) {\n    this.fromAnimation.update(time);\n    this.toAnimation.update(time);\n    this.updateKeyframes();\n\n    super.update(time);\n    return this;\n  }\n\n  clone() {\n    return new BlendedAnimation<T>(\n      this.fromAnimation.clone(),\n      this.toAnimation.clone(),\n      this.easing\n    );\n  }\n}\n","import createDynamicEasing, { DynamicEasingNames } from \"./createDynamicEasing\";\nimport Keyframe from \"./Keyframe\";\n\nexport type IAnimatedProperties<T> = {\n  [P in keyof T]: T[P] | IPercentageKeyframes<T[P]>;\n};\n\nexport interface IPercentageKeyframes<TValue> {\n  [key: string]: TValue | IKeyframeControls<TValue>;\n  from: TValue | IKeyframeControls<TValue>;\n  to: TValue | IKeyframeControls<TValue>;\n}\n\nexport interface IKeyframeControls<TValue> {\n  value: TValue;\n  controlsIn?: TValue[];\n  controlsOut?: TValue[];\n  easeIn?: DynamicEasingNames;\n  easeOut?: DynamicEasingNames;\n}\n\nexport default class KeyframesGenerator {\n  private transformValue: (value: any) => any = (value) => value;\n\n  setTransformValue(transformValue: (value: any) => any) {\n    this.transformValue = transformValue;\n  }\n\n  isComplexKeyframe(value: any) {\n    return value.hasOwnProperty(\"value\");\n  }\n\n  isPercentageKeyframe(value: any) {\n    return value.hasOwnProperty(\"from\") && value.hasOwnProperty(\"to\");\n  }\n\n  isObject(value: any) {\n    return typeof value === \"object\" && value != null;\n  }\n\n  sortPercentages = (keyA: string, keyB: string) => {\n    if (keyA === \"from\") {\n      return -1;\n    }\n\n    if (keyB === \"from\") {\n      return 1;\n    }\n\n    if (keyA === \"to\") {\n      return 1;\n    }\n\n    if (keyB === \"to\") {\n      return -1;\n    }\n\n    const keyAParts = keyA.split(\"%\");\n    const keyBParts = keyB.split(\"%\");\n    const keyANumber = parseFloat(keyAParts[0]);\n    const keyBNumber = parseFloat(keyBParts[0]);\n\n    if (keyANumber < keyBNumber) {\n      return -1;\n    } else if (keyANumber > keyBNumber) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  getDecimalFromPercentage(percentage: string) {\n    if (percentage === \"to\") {\n      return 1;\n    }\n\n    if (percentage === \"from\") {\n      return 0;\n    }\n\n    const percentageParts = percentage.split(\"%\");\n    let decimal = parseFloat(percentageParts[0]) / 100;\n\n    if (isNaN(decimal)) {\n      throw new Error(\n        `Unknown keyframe step: ${decimal}. Expected format 10% or 10.01% etc`\n      );\n    }\n\n    decimal = Math.max(0, decimal);\n    decimal = Math.min(1, decimal);\n\n    return decimal;\n  }\n\n  getEaseIn<T>(currentValue: IKeyframeControls<T>) {\n    if (this.isComplexKeyframe(currentValue) && currentValue.easeOut != null) {\n      return currentValue.easeOut || \"linear\";\n    } else {\n      return \"linear\";\n    }\n  }\n\n  getEaseOut<T>(nextValue: IKeyframeControls<T>) {\n    if (this.isComplexKeyframe(nextValue) && nextValue.easeIn != null) {\n      return nextValue.easeIn || \"linear\";\n    } else {\n      return \"linear\";\n    }\n  }\n\n  getControlsIn<T>(currentValue: IKeyframeControls<T>) {\n    if (\n      this.isComplexKeyframe(currentValue) &&\n      Array.isArray(currentValue.controlsOut)\n    ) {\n      return currentValue.controlsOut.map((v) => this.transformValue(v));\n    } else {\n      return [];\n    }\n  }\n\n  getControlsOut<T>(nextValue: IKeyframeControls<T>) {\n    if (\n      this.isComplexKeyframe(nextValue) &&\n      Array.isArray(nextValue.controlsIn)\n    ) {\n      return nextValue.controlsIn.map((v) => this.transformValue(v));\n    } else {\n      return [];\n    }\n  }\n\n  getFrom<T>(currentValue: IKeyframeControls<T>) {\n    if (this.isComplexKeyframe(currentValue)) {\n      return this.transformValue(currentValue.value);\n    } else if (typeof currentValue === \"string\") {\n      return this.transformValue(currentValue);\n    } else {\n      if (typeof currentValue?.value === \"string\") {\n        throw new Error(\n          \"Invalid complex value, only found a value with no other complex settings.\"\n        );\n      }\n      throw new Error(`Unknown \"from\" value: ${JSON.stringify(currentValue)}`);\n    }\n  }\n\n  getTo<T>(nextValue: IKeyframeControls<T>) {\n    const isComplexKeyframe = this.isComplexKeyframe(nextValue);\n\n    if (isComplexKeyframe) {\n      return this.transformValue(nextValue.value);\n    } else if (!isComplexKeyframe && this.isObject(nextValue)) {\n      return this.transformValue(nextValue);\n    } else if (typeof nextValue === \"string\") {\n      return this.transformValue(nextValue);\n    } else {\n      if (typeof nextValue?.value === \"string\") {\n        throw new Error(\n          \"Invalid complex value, only found a value with no other complex settings.\"\n        );\n      }\n      throw new Error(`Unknown \"to\" value: ${JSON.stringify(nextValue)}`);\n    }\n  }\n\n  wrapValue<T>(value: T): IKeyframeControls<T> {\n    return {\n      value,\n    };\n  }\n\n  normalizeValue<T>(value: T | IKeyframeControls<T>): IKeyframeControls<T> {\n    if (typeof value === \"string\" || typeof value === \"number\") {\n      return this.wrapValue(value);\n    } else if (this.isObject(value) && !this.isComplexKeyframe(value)) {\n      return this.wrapValue(value as T);\n    } else {\n      return value as IKeyframeControls<T>;\n    }\n  }\n\n  normalizeKeyframeValue<T>(\n    value: T | IKeyframeControls<T> | IPercentageKeyframes<T>\n  ): IPercentageKeyframes<T> {\n    if (typeof value === \"string\" || typeof value === \"number\") {\n      return {\n        from: this.wrapValue(value),\n        to: this.wrapValue(value),\n      };\n    } else if (this.isObject(value) && this.isPercentageKeyframe(value)) {\n      const keyframes: any = value;\n      const keys = Object.keys(keyframes);\n      keys.forEach((key) => {\n        const keyframeValue = this.normalizeValue(keyframes[key]);\n        keyframeValue;\n      });\n\n      return value as IPercentageKeyframes<T>;\n    } else if (this.isObject(value)) {\n      return {\n        from: this.wrapValue(value as T),\n        to: this.wrapValue(value as T),\n      };\n    } else {\n      throw new Error(\"Unknown value type.\");\n    }\n  }\n\n  generate<T>(animatedProperties: IAnimatedProperties<T>) {\n    const animatedPropertyNames = Object.keys(\n      animatedProperties\n    ) as (keyof T)[];\n    const keyframes: Keyframe<T>[] = [];\n\n    for (let x = 0; x < animatedPropertyNames.length; x++) {\n      const property = animatedPropertyNames[x];\n      let lastKeyFramePercentage = 0;\n      const keyframeValue = this.normalizeKeyframeValue(\n        animatedProperties[property]\n      );\n      const timeKeys = Object.keys(keyframeValue);\n      timeKeys.sort(this.sortPercentages);\n\n      for (let index = 0; index < timeKeys.length - 1; index++) {\n        const key = timeKeys[index];\n        const nextKey = timeKeys[index + 1];\n\n        const currentValue = this.normalizeValue(keyframeValue[key]);\n        const nextValue = this.normalizeValue(keyframeValue[nextKey]);\n        const startAt = lastKeyFramePercentage;\n        const endAt = this.getDecimalFromPercentage(timeKeys[index + 1]);\n\n        lastKeyFramePercentage = endAt;\n\n        const easingIn = this.getEaseIn(currentValue);\n        const easingOut = this.getEaseOut(nextValue);\n        const easing = createDynamicEasing(easingIn, easingOut);\n        const controlsIn = this.getControlsIn(currentValue);\n        const controlsOut = this.getControlsOut(nextValue);\n        const controls = [...controlsIn, ...controlsOut];\n        const from = this.getFrom(currentValue);\n        const to = this.getTo(nextValue);\n\n        const keyframe = new Keyframe({\n          property: property.toString(),\n          from,\n          to,\n          controls,\n          easing,\n          startAt,\n          endAt,\n        });\n\n        keyframes.push(keyframe);\n      }\n    }\n    return keyframes;\n  }\n}\n","import ExtendedAnimation from \"./ExtendedAnimation\";\nimport Animation, { IAnimation } from \"./Animation\";\nimport Player, { RepeatDirection } from \"./Player\";\nimport BlendedAnimation from \"./BlendedAnimation\";\nimport { EasingFunction } from \"./easings\";\nimport KeyframeGenerator from \"./KeyframesGenerator\";\nimport TimeObserver from \"./TimeObserver\";\n\nfunction defaultOnComplete() {}\n\nexport default class Motion<T> {\n  protected setOnFirst: boolean;\n  protected currentDuration = 0;\n  protected keyframeGenerator = new KeyframeGenerator();\n  protected observer: TimeObserver<any> | null = null;\n  protected player: Player;\n\n  animation: IAnimation<T> | null = null;\n\n  constructor(\n    render: (animation: IAnimation<T>) => void,\n    setOnFirst = false,\n    player?: Player\n  ) {\n    this.player = player || new Player<T>();\n    this.player.render = (time: number) => {\n      if (this.animation != null) {\n        this.animation.update(time);\n        render(this.animation);\n      }\n    };\n    this.setOnFirst = setOnFirst;\n  }\n\n  inject(animation: IAnimation<T>) {\n    this.animation = animation;\n\n    this.player.duration = 16.667;\n    this.player.time = 0.999;\n    this.player.play();\n\n    return this;\n  }\n\n  segueTo(\n    animation: IAnimation<T>,\n    duration: number = 0,\n    easing?: EasingFunction,\n    onComplete = defaultOnComplete\n  ) {\n    const currentDuration = this.currentDuration;\n    const currentAnimation = this.animation;\n    const currentTime = this.player.time;\n\n    this.player.duration = this.currentDuration = duration;\n    this.player.iterations = 0;\n    this.player.repeat = 1;\n\n    if (duration === 0) {\n      animation.update(1);\n      const values = animation.currentValues;\n      this.animation = this.makeAnimationFromLastValues(values);\n      this.player.duration = 0;\n      this.player.time = 1;\n      this.player.render(1);\n      onComplete();\n      return;\n    }\n\n    if (currentAnimation == null) {\n      if (this.setOnFirst) {\n        animation.update(1);\n        const values = animation.currentValues;\n        this.animation = this.makeAnimationFromLastValues(values);\n        this.player.duration = 0;\n        this.player.time = 1;\n        this.player.render(1);\n        onComplete();\n        return;\n      } else {\n        this.animation = animation;\n      }\n    } else {\n      const extendDurationBy = duration - currentDuration * currentTime;\n\n      let fromAnimation: IAnimation<T>;\n\n      if (extendDurationBy > 0) {\n        fromAnimation = new ExtendedAnimation(\n          currentAnimation,\n          currentDuration,\n          currentTime,\n          extendDurationBy\n        );\n      } else {\n        const values = currentAnimation.currentValues;\n        const animation = this.makeAnimationFromLastValues(values);\n        fromAnimation = animation;\n      }\n\n      const newAnimation = new BlendedAnimation<T>(\n        fromAnimation,\n        animation,\n        easing\n      );\n\n      this.animation = newAnimation;\n\n      this.observer?.dispose();\n      this.observer = this.player.observeTimeOnce(1, () => {\n        newAnimation.update(1);\n        const values = newAnimation.currentValues;\n        this.animation = this.makeAnimationFromLastValues(values);\n        onComplete && onComplete();\n      });\n    }\n\n    this.player.time = 0;\n    this.player.play();\n  }\n\n  segueToLoop(animation: IAnimation<T>, duration = 0, easing?: EasingFunction) {\n    const currentDuration = this.currentDuration;\n    const currentAnimation = this.animation;\n    const currentTime = this.player.time;\n\n    this.player.duration = this.currentDuration = duration;\n    this.player.iterations = 0;\n    this.player.repeat = 1;\n\n    this.player.repeat = Infinity;\n    this.player.repeatDirection = RepeatDirection.DEFAULT;\n\n    if (currentAnimation == null) {\n      this.animation = animation;\n    } else {\n      const extendDurationBy = duration - currentDuration * currentTime;\n\n      let fromAnimation: IAnimation<T>;\n\n      if (extendDurationBy > 0) {\n        fromAnimation = new ExtendedAnimation(\n          currentAnimation,\n          currentDuration,\n          currentTime,\n          extendDurationBy\n        );\n      } else {\n        fromAnimation = currentAnimation;\n      }\n\n      this.animation = new BlendedAnimation<T>(\n        fromAnimation,\n        animation,\n        easing\n      );\n\n      this.observer?.dispose();\n      this.observer = this.player.observeTimeOnce(1, () => {\n        this.animation = animation;\n      });\n    }\n    this.player.time = 0;\n    this.player.play();\n  }\n\n  stop() {\n    this.player.stop();\n    return this;\n  }\n\n  play() {\n    this.player.play();\n    return this;\n  }\n\n  protected makeAnimationFromLastValues(values: any) {\n    const keyframes = Object.keys(values).reduce((acc, key) => {\n      acc[key] = {\n        from: JSON.parse(JSON.stringify(values[key])),\n        to: JSON.parse(JSON.stringify(values[key])),\n      };\n      return acc;\n    }, {} as any);\n\n    return new Animation<T>(\n      \"last-animation\",\n      this.keyframeGenerator.generate(keyframes)\n    );\n  }\n}\n","import {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n  OrComposite,\n} from \"clarity-pattern-parser\";\nimport number from \"./number\";\nimport optionalSpaces from \"./optionalSpaces\";\nimport spaces from \"./spaces\";\nimport divider from \"./divider\";\n\nconst m = new Literal(\"M\", \"M\");\nconst v = new Literal(\"v\", \"v\");\nconst V = new Literal(\"V\", \"V\");\nconst h = new Literal(\"h\", \"h\");\nconst H = new Literal(\"H\", \"H\");\nconst c = new Literal(\"c\", \"c\");\nconst C = new Literal(\"C\", \"C\");\n\nconst x = number.clone(\"x\");\nconst y = number.clone(\"y\");\n\nconst dx = number.clone(\"dx\");\nconst dy = number.clone(\"dy\");\n\nexport const moveTo = new AndComposite(\"moveTo\", [\n  m,\n  optionalSpaces,\n  x,\n  spaces,\n  y,\n]);\n\nexport const absoluteVerticalLine = new AndComposite(\"absoluteVerticalLine\", [\n  V,\n  optionalSpaces,\n  y,\n]);\n\nexport const relativeVerticalLine = new AndComposite(\"relativeVerticalLine\", [\n  v,\n  optionalSpaces,\n  dy,\n]);\n\nexport const absoluteHorizontalLine = new AndComposite(\n  \"absoluteHorizontalLine\",\n  [H, optionalSpaces, x]\n);\n\nexport const relativeHorizontalLine = new AndComposite(\n  \"relativeHorizontalLine\",\n  [h, optionalSpaces, dx]\n);\n\nexport const absoluteCurvedLine = new AndComposite(\"absoluteCurvedLine\", [\n  C,\n  optionalSpaces,\n  x,\n  spaces,\n  y,\n  divider,\n  x,\n  spaces,\n  y,\n  divider,\n  x,\n  spaces,\n  y,\n]);\n\nexport const relativeCurvedLine = new AndComposite(\"relativeCurvedLine\", [\n  c,\n  optionalSpaces,\n  dx,\n  spaces,\n  dy,\n  divider,\n  dx,\n  spaces,\n  dy,\n  divider,\n  dx,\n  spaces,\n  dy,\n]);\n\nexport const pathCommands = new OrComposite(\"pathCommands\", [\n  moveTo,\n  absoluteVerticalLine,\n  relativeVerticalLine,\n  absoluteHorizontalLine,\n  relativeHorizontalLine,\n  absoluteCurvedLine,\n  relativeCurvedLine,\n]);\n\nexport const path = new RepeatComposite(\"path\", pathCommands, spaces);\n","import { CompositeNode, Cursor, Visitor } from \"clarity-pattern-parser\";\nimport BezierCurve from \"./BezierCurve\";\nimport Animation, { AnimationState, IAnimation } from \"./Animation\";\nimport easings, { EasingFunction } from \"./easings\";\nimport Keyframe from \"./Keyframe\";\nimport { path } from \"./patterns/path\";\n\nconst visitor = new Visitor();\n\nexport class PathAnimation implements IAnimation<{ x: number; y: number }> {\n  protected easing: EasingFunction;\n  protected position = { x: 0, y: 0 };\n  protected pathString: string;\n  protected _currentValues = {\n    x: 0,\n    y: 0,\n  };\n  protected _deltaValues = {\n    x: 0,\n    y: 0,\n  };\n\n  readonly xBezierCurves: BezierCurve[] = [];\n  readonly yBezierCurves: BezierCurve[] = [];\n\n  name: string = \"\";\n\n  get curveCount() {\n    return this.xBezierCurves.length;\n  }\n\n  get currentValues(): { x: number; y: number } {\n    return this._currentValues;\n  }\n\n  get deltaValues(): AnimationState<number> {\n    return this._deltaValues;\n  }\n\n  constructor(pathString: string, easing: EasingFunction = easings.linear) {\n    const tree = path.parse(new Cursor(pathString));\n    this.pathString = pathString;\n\n    visitor\n      .setRoot(tree)\n      .selectRoot()\n      .clear()\n      .select((n) => n.name === \"optional-spaces\")\n      .remove()\n      .clear()\n      .select((n) => n.name === \"spaces\")\n      .remove()\n      .clear()\n      .select((n) => n.name === \"divider\")\n      .remove();\n\n    if (tree == null) {\n      throw new Error(\"Invalid path.\");\n    }\n\n    this.easing = easing;\n\n    tree.children.forEach((n, index) => {\n      (this as any)[n.name](n);\n    });\n  }\n\n  private moveTo(n: CompositeNode) {\n    const xValue = Number(n.children[1].value);\n    const yValue = Number(n.children[2].value);\n\n    this.position.x = xValue;\n    this.position.y = yValue;\n  }\n\n  private absoluteVerticalLine(n: CompositeNode) {\n    const yValue = Number(n.children[1].value);\n    const y = new BezierCurve([this.position.y, yValue]);\n    const x = new BezierCurve([this.position.x, this.position.x]);\n\n    this.position.y = yValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  private relativeVerticalLine(n: CompositeNode) {\n    const yValue = Number(n.children[1].value) + this.position.y;\n    const y = new BezierCurve([this.position.y, yValue]);\n    const x = new BezierCurve([this.position.x, this.position.x]);\n\n    this.position.y = yValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  private absoluteHorizontalLine(n: CompositeNode) {\n    const xValue = Number(n.children[1].value);\n    const x = new BezierCurve([this.position.x, xValue]);\n    const y = new BezierCurve([this.position.y, this.position.y]);\n    this.position.x = xValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  private relativeHorizontalLine(n: CompositeNode) {\n    const xValue = Number(n.children[1].value) + this.position.x;\n    const x = new BezierCurve([this.position.x, xValue]);\n    const y = new BezierCurve([this.position.y, this.position.y]);\n\n    this.position.x = xValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  private absoluteCurvedLine(n: CompositeNode, startAt: number, endAt: number) {\n    const startXValue = this.position.x;\n    const startYValue = this.position.y;\n\n    const xControl1 = Number(n.children[1].value);\n    const yControl1 = Number(n.children[2].value);\n\n    const xControl2 = Number(n.children[3].value);\n    const yControl2 = Number(n.children[4].value);\n\n    const endXValue = Number(n.children[5].value);\n    const endYValue = Number(n.children[6].value);\n\n    const x = new BezierCurve([startXValue, xControl1, xControl2, endXValue]);\n    const y = new BezierCurve([startYValue, yControl1, yControl2, endYValue]);\n\n    this.position.x = endXValue;\n    this.position.y = endYValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  private relativeCurvedLine(n: CompositeNode, startAt: number, endAt: number) {\n    const startXValue = this.position.x;\n    const startYValue = this.position.y;\n\n    const xControl1 = Number(n.children[1].value + startXValue);\n    const yControl1 = Number(n.children[2].value + startYValue);\n\n    const xControl2 = Number(n.children[3].value + startXValue);\n    const yControl2 = Number(n.children[4].value + startYValue);\n\n    const endXValue = Number(n.children[5].value + startXValue);\n    const endYValue = Number(n.children[6].value + startYValue);\n\n    const x = new BezierCurve([startXValue, xControl1, xControl2, endXValue]);\n    const y = new BezierCurve([startYValue, yControl1, yControl2, endYValue]);\n\n    this.position.x = endXValue;\n    this.position.y = endYValue;\n\n    this.xBezierCurves.push(x);\n    this.yBezierCurves.push(y);\n  }\n\n  update(time: number): IAnimation<{ x: number; y: number }> {\n    const length = this.xBezierCurves.length;\n    const parts = 1 / length;\n    const adjustedTime = this.easing(time);\n    const index = Math.max(\n      Math.min(Math.floor(adjustedTime / parts), length - 1),\n      0\n    );\n    const indexTime = (adjustedTime % parts) / parts;\n\n    const x = this.xBezierCurves[index].valueAt(indexTime);\n    const y = this.yBezierCurves[index].valueAt(indexTime);\n    const deltaX = this.xBezierCurves[index].deltaAt(indexTime);\n    const deltaY = this.yBezierCurves[index].deltaAt(indexTime);\n\n    this._currentValues.x = x;\n    this._currentValues.y = y;\n    this._deltaValues.x = deltaX;\n    this._deltaValues.y = deltaY;\n\n    return this;\n  }\n\n  clone(): IAnimation<{ x: number; y: number }> {\n    return new PathAnimation(this.pathString, this.easing);\n  }\n}\n","import { PathAnimation } from \"./PathAnimation\";\nimport { IAnimation } from \"./Animation\";\nimport easings, { EasingFunction } from \"./easings\";\nimport { newtonsMethod, simpsonsRule } from \"./math\";\nimport { BezierCurve } from \".\";\nimport { Path } from \"./SvgPath\";\n\ninterface CurveData {\n  x: BezierCurve;\n  y: BezierCurve;\n  distance: number;\n  offsetDistance: number;\n  startAt: number;\n  endAt: number;\n}\n\nexport class UniformPathAnimation\n  implements IAnimation<{ x: number; y: number }>\n{\n  protected _path: Path;\n  protected _distance: number;\n  protected _curveData: CurveData[];\n\n  name = \"\";\n  easing: EasingFunction;\n\n  readonly currentValues = {\n    x: 0,\n    y: 0,\n  };\n\n  get distance() {\n    return this._distance;\n  }\n\n  constructor(path: Path, easing: EasingFunction = easings.linear) {\n    this.easing = easing;\n    this._path = path;\n    this._curveData = this._path.xCurves.map((xCurve, index) => {\n      const yCurve = this._path.yCurves[index];\n\n      const distance = simpsonsRule(\n        0,\n        1,\n        (t: number) => {\n          const x = xCurve.deltaAt(t);\n          const y = yCurve.deltaAt(t);\n\n          return Math.sqrt(x * x + y * y);\n        },\n        4\n      );\n\n      return {\n        x: xCurve,\n        y: yCurve,\n        distance,\n        offsetDistance: 0,\n        startAt: 0,\n        endAt: 0,\n      };\n    });\n\n    this._distance = this._curveData\n      .map((curve) => curve.distance)\n      .reduce((acc, next) => (acc += next), 0);\n\n    let lastTo = 0;\n    let distance = 0;\n    this._curveData.forEach((curve) => {\n      const percentage = curve.distance / this._distance;\n      curve.startAt = lastTo;\n      lastTo = curve.endAt = lastTo + percentage;\n      curve.offsetDistance = distance;\n      distance += curve.distance;\n    });\n  }\n\n  update(time: number) {\n    const easingTime = this.easing(time);\n    const curve = this._curveData.find((curve, index) => {\n      const isLowerBounds = easingTime < 0 && index === 1;\n      const isOverBounds =\n        easingTime > 1 && index === this._curveData.length - 1;\n      return (\n        isLowerBounds ||\n        isOverBounds ||\n        (easingTime >= curve.startAt && easingTime < curve.endAt)\n      );\n    });\n\n    if (curve == null) {\n      return this;\n    }\n\n    const distance = easingTime * this._distance;\n    const adjustedDistance = distance - curve.offsetDistance;\n    const remainder = easingTime - curve.startAt;\n    const adjustedTime = remainder / (curve.endAt - curve.startAt);\n\n    const integrand = (t: number) => {\n      const x = curve.x.normalizedDeltaAt(t);\n      const y = curve.y.normalizedDeltaAt(t);\n\n      return Math.sqrt(x * x + y * y);\n    };\n\n    const uniformTime = newtonsMethod(\n      (t) => {\n        return simpsonsRule(0, t, integrand, 4) - adjustedDistance;\n      },\n      integrand,\n      adjustedTime,\n      10\n    );\n\n    this.currentValues.x = curve.x.valueAt(uniformTime);\n    this.currentValues.y = curve.y.valueAt(uniformTime);\n\n    return this;\n  }\n\n  clone() {\n    return new UniformPathAnimation(this._path, this.easing);\n  }\n}\n","import KeyframesGenerator, { IAnimatedProperties } from \"./KeyframesGenerator\";\nimport Animation from \"./Animation\";\n\nconst keyframesGenerator = new KeyframesGenerator();\n\nexport function createAnimation<T>(animatedProperties: IAnimatedProperties<T>) {\n  const keyframes = keyframesGenerator.generate<T>(animatedProperties);\n  const animation = new Animation<T>(\"\", keyframes);\n\n  return animation;\n}\n","import CssKeyframesGenerator, {\n  ICssAnimatedProperties,\n} from \"./CssKeyframesGenerator\";\nimport Animation from \"./Animation\";\n\nconst cssKeyframesGenerator = new CssKeyframesGenerator();\ntype CssType<T> = { [P in keyof T]: (string | number)[] };\n\nexport function createCssAnimation<T>(\n  animatedProperties: ICssAnimatedProperties<T>\n) {\n  const keyframes = cssKeyframesGenerator.generate<T>(animatedProperties);\n  const animation = new Animation<CssType<T>>(\"\", keyframes);\n\n  return animation;\n}\n","import { CompositeNode, Cursor, Visitor } from \"clarity-pattern-parser\";\nimport BezierCurve from \"./BezierCurve\";\nimport { path } from \"./patterns/path\";\n\nconst visitor = new Visitor();\n\nexport interface Path {\n  xCurves: readonly BezierCurve[];\n  yCurves: readonly BezierCurve[];\n  curveCount: number;\n}\n\nexport class SvgPath implements Path {\n  protected position = { x: 0, y: 0 };\n  protected pathString: string;\n  protected _xBezierCurves: BezierCurve[] = [];\n  protected _yBezierCurves: BezierCurve[] = [];\n\n  get xCurves(): readonly BezierCurve[] {\n    return this._xBezierCurves;\n  }\n\n  get yCurves(): readonly BezierCurve[] {\n    return this._yBezierCurves;\n  }\n\n  get curveCount() {\n    return this._xBezierCurves.length;\n  }\n\n  constructor(pathString: string) {\n    const tree = path.parse(new Cursor(pathString));\n    this.pathString = pathString;\n\n    visitor\n      .setRoot(tree)\n      .selectRoot()\n      .clear()\n      .select((n) => n.name === \"optional-spaces\")\n      .remove()\n      .clear()\n      .select((n) => n.name === \"spaces\")\n      .remove()\n      .clear()\n      .select((n) => n.name === \"divider\")\n      .remove();\n\n    if (tree == null) {\n      throw new Error(\"Invalid path.\");\n    }\n\n    tree.children.forEach((n, index) => {\n      (this as any)[n.name](n);\n    });\n  }\n\n  private moveTo(n: CompositeNode) {\n    const xValue = Number(n.children[1].value);\n    const yValue = Number(n.children[2].value);\n\n    this.position.x = xValue;\n    this.position.y = yValue;\n  }\n\n  private absoluteVerticalLine(n: CompositeNode) {\n    const yValue = Number(n.children[1].value);\n    const y = new BezierCurve([this.position.y, yValue]);\n    const x = new BezierCurve([this.position.x, this.position.x]);\n\n    this.position.y = yValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n\n  private relativeVerticalLine(n: CompositeNode) {\n    const yValue = Number(n.children[1].value) + this.position.y;\n    const y = new BezierCurve([this.position.y, yValue]);\n    const x = new BezierCurve([this.position.x, this.position.x]);\n\n    this.position.y = yValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n\n  private absoluteHorizontalLine(n: CompositeNode) {\n    const xValue = Number(n.children[1].value);\n    const x = new BezierCurve([this.position.x, xValue]);\n    const y = new BezierCurve([this.position.y, this.position.y]);\n    this.position.x = xValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n\n  private relativeHorizontalLine(n: CompositeNode) {\n    const xValue = Number(n.children[1].value) + this.position.x;\n    const x = new BezierCurve([this.position.x, xValue]);\n    const y = new BezierCurve([this.position.y, this.position.y]);\n\n    this.position.x = xValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n\n  private absoluteCurvedLine(n: CompositeNode, startAt: number, endAt: number) {\n    const startXValue = this.position.x;\n    const startYValue = this.position.y;\n\n    const xControl1 = Number(n.children[1].value);\n    const yControl1 = Number(n.children[2].value);\n\n    const xControl2 = Number(n.children[3].value);\n    const yControl2 = Number(n.children[4].value);\n\n    const endXValue = Number(n.children[5].value);\n    const endYValue = Number(n.children[6].value);\n\n    const x = new BezierCurve([startXValue, xControl1, xControl2, endXValue]);\n    const y = new BezierCurve([startYValue, yControl1, yControl2, endYValue]);\n\n    this.position.x = endXValue;\n    this.position.y = endYValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n\n  private relativeCurvedLine(n: CompositeNode, startAt: number, endAt: number) {\n    const startXValue = this.position.x;\n    const startYValue = this.position.y;\n\n    const xControl1 = Number(n.children[1].value + startXValue);\n    const yControl1 = Number(n.children[2].value + startYValue);\n\n    const xControl2 = Number(n.children[3].value + startXValue);\n    const yControl2 = Number(n.children[4].value + startYValue);\n\n    const endXValue = Number(n.children[5].value + startXValue);\n    const endYValue = Number(n.children[6].value + startYValue);\n\n    const x = new BezierCurve([startXValue, xControl1, xControl2, endXValue]);\n    const y = new BezierCurve([startYValue, yControl1, yControl2, endYValue]);\n\n    this.position.x = endXValue;\n    this.position.y = endYValue;\n\n    this._xBezierCurves.push(x);\n    this._yBezierCurves.push(y);\n  }\n}\n","import BezierCurve from \"./BezierCurve\";\nimport { Path } from \"./SvgPath\";\n\nexport class PointPath implements Path {\n  private _xCurves: BezierCurve[] = [];\n  private _yCurves: BezierCurve[] = [];\n\n  get xCurves(): readonly BezierCurve[] {\n    return this._xCurves;\n  }\n\n  get yCurves(): readonly BezierCurve[] {\n    return this._yCurves;\n  }\n\n  get curveCount(): number {\n    return this._xCurves.length;\n  }\n\n  constructor(points: number[]) {\n    const position = [points[0], points[1]];\n\n    if ((points.length - 2) % 6 !== 0) {\n      throw new Error(\"Needs to be two more than a factor of six.\");\n    }\n\n    for (let i = 2; i < points.length; i += 6) {\n      this._xCurves.push(\n        new BezierCurve([position[0], points[i], points[i + 2], points[i + 4]])\n      );\n\n      this._yCurves.push(\n        new BezierCurve([\n          position[1],\n          points[i + 1],\n          points[i + 3],\n          points[i + 5],\n        ])\n      );\n      position[0] = points[i + 4];\n      position[1] = points[i + 5];\n    }\n  }\n}\n"],"names":["space","spaces","values","value","visitor","emptyFn","KeyframeGenerator","CssKeyframesGenerator"],"mappings":"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"}