{"version":3,"file":"index.js","sources":["../src/BezierCurve.ts","../src/Visitor.ts","../src/TreeUtility.ts","../src/GraphsVisitor.ts","../src/Animator.ts","../src/patterns/divider.ts","../src/patterns/number.ts","../src/patterns/unit.ts","../src/patterns/hex.ts","../src/patterns/name.ts","../src/patterns/optionalSpaces.ts","../src/patterns/method.ts","../src/patterns/value.ts","../src/patterns/spaces.ts","../src/patterns/values.ts","../src/patterns/cssValue.ts","../src/HexColor.ts","../src/TreeNormalizer.ts","../src/ParsedValue.ts","../src/KeyframeConfigValidator.ts","../src/easingFunctions/easeInQuad.ts","../src/easingFunctions/easeOutQuad.ts","../src/easingFunctions/easeInOutQuad.ts","../src/easingFunctions/easeInElastic.ts","../src/easingFunctions/easeInOutElastic.ts","../src/easingFunctions/easeOutElastic.ts","../src/easingFunctions/easeInOutBack.ts","../src/easingFunctions/easeOutBounce.ts","../src/easingFunctions/easeInBounce.ts","../src/easingFunctions/easeInOutBounce.ts","../src/easingFunctions/easeInCubic.ts","../src/easingFunctions/easeOutCubic.ts","../src/easingFunctions/easeInOutCubic.ts","../src/easingFunctions/easeInQuart.ts","../src/easingFunctions/easeOutQuart.ts","../src/easingFunctions/easeInOutQuart.ts","../src/easingFunctions/easeInQuint.ts","../src/easingFunctions/easeOutQuint.ts","../src/easingFunctions/easeInOutQuint.ts","../src/easingFunctions/easeInSine.ts","../src/easingFunctions/easeOutSine.ts","../src/easingFunctions/easeInOutSine.ts","../src/easingFunctions/easeInExpo.ts","../src/easingFunctions/easeOutExpo.ts","../src/easingFunctions/easeInOutExpo.ts","../src/easingFunctions/easeInCirc.ts","../src/easingFunctions/easeOutCirc.ts","../src/easingFunctions/easeInOutCirc.ts","../src/easingFunctions/easeInBack.ts","../src/easingFunctions/easeOutBack.ts","../src/easingFunctions/easeLinear.ts","../src/easings.ts","../src/KeyframeUtility.ts","../src/Keyframe.ts","../src/Animation.ts","../src/Observer.ts","../src/TimeObserver.ts","../src/Observable.ts","../src/DefaultClock.ts","../src/GraphOperations.ts","../src/GraphOperator.ts","../src/SlopeAnimationBuilder.ts","../src/BlendedAnimation.ts","../src/Player.ts"],"sourcesContent":["export default class BezierCurve {\n  points: any;\n  reducedPoints: any;\n\n  constructor(points: number[]) {\n    this.setPoints(points);\n  }\n\n  setPoints(points: number[]) {\n    this.points = points;\n    this.reducedPoints = new Array(points.length);\n\n    Object.freeze(this.points);\n  }\n\n  valueAt(percentage: number) {\n    const points = this.points;\n    const reducedPoints = this.reducedPoints;\n    const length = points.length;\n\n    for (let x = 0; x < length; x++) {\n      reducedPoints[x] = points[x];\n    }\n\n    for (let x = 0; x < length; x++) {\n      const innerLength = length - x - 1;\n\n      for (let y = 0; y < innerLength; y++) {\n        const nextPoint = reducedPoints[y + 1];\n        const point = reducedPoints[y];\n\n        reducedPoints[y] = (nextPoint - point) * percentage + point;\n      }\n    }\n\n    return reducedPoints[0];\n  }\n\n  clone() {\n    return new BezierCurve(this.points.slice());\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\n\nconst emptyFn = () => {};\n\nexport default class Visitor {\n  public callback: any;\n\n  constructor(callback: (node: Node) => void = emptyFn) {\n    this.setCallback(callback);\n    this.visitDown = this.visitDown.bind(this);\n    this.visitUp = this.visitUp.bind(this);\n  }\n\n  walkUp(node: Node) {\n    if (Array.isArray(node.children)) {\n      node.children.forEach(this.visitUp);\n    }\n\n    this.callback(node);\n  }\n\n  visitUp(node: Node) {\n    this.walkUp(node);\n  }\n\n  walkDown(node: Node) {\n    this.callback(node);\n\n    if (node.isComposite) {\n      node.children.forEach(this.visitDown);\n    }\n  }\n\n  visitDown(node: Node) {\n    this.walkDown(node);\n  }\n\n  setCallback(callback: (node: Node) => void) {\n    if (typeof callback === \"function\") {\n      this.callback = callback;\n    } else {\n      this.callback = emptyFn;\n    }\n\n    this.callback = callback;\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport Visitor from \"./Visitor\";\n\nconst visitor = new Visitor();\n\nfunction convertNumberNode(node: Node) {\n  if (node.name === \"number\") {\n    (node as any).value = Number(node.value);\n  }\n}\n\n// Hashing function, this may not be the best. So this may need to be replaced.\n// https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\nfunction hash(str: string, seed = 0) {\n  let h1 = 0xdeadbeef ^ seed,\n    h2 = 0x41c6ce57 ^ seed;\n  for (let i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i);\n    h1 = Math.imul(h1 ^ ch, 2654435761);\n    h2 = Math.imul(h2 ^ ch, 1597334677);\n  }\n  h1 =\n    Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^\n    Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n  h2 =\n    Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^\n    Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n  return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n}\n\nexport default class TreeUtility {\n  areTreeStructuresEqual(nodeA: Node, nodeB: Node) {\n    const nodeASequence = this.sequence(nodeA);\n    const nodeBSequence = this.sequence(nodeB);\n    return nodeASequence === nodeBSequence;\n  }\n\n  sequence(node: Node) {\n    const sequence: string[] = [];\n    visitor.setCallback((node: Node) => {\n      sequence.push(node.name);\n    });\n    visitor.visitDown(node);\n\n    return sequence.join(\"|\");\n  }\n\n  sequenceHash(node: Node) {\n    return hash(this.sequence(node));\n  }\n\n  convertNumberNodesToNumberValues(node: Node) {\n    visitor.setCallback(convertNumberNode);\n    visitor.visitDown(node);\n  }\n}\n","import TreeUtility from \"./TreeUtility\";\nimport { Node } from \"clarity-pattern-parser\";\n\nconst emptyFn = () => {};\nconst treeUtility = new TreeUtility();\n\ntype Visitor = (graphs: Node[]) => void;\n\nexport default class GraphsVisitor {\n  private visitor: Visitor = emptyFn;\n\n  constructor(callback: Visitor = emptyFn) {\n    this.setCallback(callback);\n    this.visitDown = this.visitDown.bind(this);\n    this.visitUp = this.visitUp.bind(this);\n  }\n\n  visitUp(graphs: Node[], optimized = false) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    const siblings = graphs.slice(1);\n    const node = graphs[0];\n\n    if (!optimized) {\n      const areEqual = siblings.every((sibling) =>\n        treeUtility.areTreeStructuresEqual(node, sibling)\n      );\n\n      if (!areEqual) {\n        throw new Error(\"The nodes structures need to be the same.\");\n      }\n    }\n\n    this.walkUp(graphs);\n  }\n\n  walkUp(graphs: Node[]) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    const node = graphs[0];\n\n    if (node.isComposite) {\n      for (let index = 0; index < node.children.length; index++) {\n        const childGraphs = graphs.map((node) => {\n          return node.children[index];\n        });\n        this.walkUp(childGraphs);\n      }\n    }\n\n    this.visitor(graphs);\n  }\n\n  visitDown(graphs: Node[], optimized = false) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    const siblings = graphs.slice(1);\n    const node = graphs[0];\n\n    if (!optimized) {\n      const areEqual = siblings.every((sibling) =>\n        treeUtility.areTreeStructuresEqual(node, sibling)\n      );\n\n      if (!areEqual) {\n        throw new Error(\"The nodes structures need to be the same.\");\n      }\n    }\n\n    this.walkDown(graphs);\n  }\n\n  walkDown(graphs: Node[]) {\n    if (!Array.isArray(graphs)) {\n      return;\n    }\n\n    this.visitor(graphs);\n\n    const node = graphs[0];\n    if (Array.isArray(node.children)) {\n      for (let index = 0; index < node.children.length; index++) {\n        const childGraphs = graphs.map((node) => {\n          return node.children[index];\n        });\n        this.walkDown(childGraphs);\n      }\n    }\n  }\n\n  setCallback(visitor: Visitor) {\n    if (typeof visitor === \"function\") {\n      this.visitor = visitor;\n    } else {\n      this.visitor = emptyFn;\n    }\n\n    this.visitor = visitor;\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport BezierCurve from \"./BezierCurve\";\nimport GraphsVisitor from \"./GraphsVisitor\";\nimport Keyframe from \"./Keyframe\";\n\nconst visitor = new GraphsVisitor();\n\nexport default class Animator {\n  public keyframe: Keyframe;\n  public time: number;\n  public bezierCurve: BezierCurve;\n  public keyframeGraphs: Node[];\n\n  constructor(keyframe: Keyframe) {\n    this.keyframe = keyframe;\n    this.visit = this.visit.bind(this);\n    this.time = 0;\n    this.bezierCurve = new BezierCurve([]);\n    this.keyframeGraphs = [];\n    this.updateKeyframeGraphs();\n  }\n\n  private updateKeyframeGraphs() {\n    this.keyframeGraphs.length = 0;\n    this.keyframeGraphs.push(this.keyframe.from.graph);\n\n    for (let x = 0; x < this.keyframe.controls.length; x++) {\n      this.keyframeGraphs.push(this.keyframe.controls[x].graph);\n    }\n\n    this.keyframeGraphs.push(this.keyframe.to.graph);\n    this.keyframeGraphs.push(this.keyframe.result.graph);\n  }\n\n  visit(nodes: Node[]) {\n    const cloneNodes = nodes.slice();\n    const resultNode = cloneNodes.pop();\n    const time = this.time;\n\n    if (resultNode == null) {\n      return;\n    }\n\n    if (cloneNodes[0].name === \"number\") {\n      const elapsedTime = time - this.keyframe.startAt;\n      const animationDuration = this.keyframe.endAt - this.keyframe.startAt;\n      const timeWithEasing = this.keyframe.easing(\n        elapsedTime / animationDuration\n      );\n\n      const points = cloneNodes.map((node) => Number(node.value));\n\n      this.bezierCurve.setPoints(points);\n      resultNode.value = this.bezierCurve.valueAt(timeWithEasing);\n    } else {\n      if (!Array.isArray(resultNode.children)) {\n        if (time >= this.keyframe.startAt) {\n          resultNode.value = cloneNodes[cloneNodes.length - 1].value;\n        } else {\n          resultNode.value = cloneNodes[0].value;\n        }\n      }\n    }\n  }\n\n  update(time: number) {\n    this.updateKeyframeGraphs();\n    this.time = time;\n\n    visitor.setCallback(this.visit);\n    visitor.visitDown(this.keyframeGraphs, true);\n\n    const value = this.keyframe.result.graph.toString();\n    this.keyframe.result.value = value;\n\n    return this.keyframe.result;\n  }\n}\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst divider = new RegexValue(\"divider\", \"\\\\s*[,]\\\\s*\");\n\nexport default divider;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst number = new RegexValue(\n  \"number\",\n  \"[-+]?[0-9]*[.]?[0-9]+([eE][-+]?[0-9]+)?\"\n);\n\nexport default number;\n","import { AndComposite, RegexValue } from \"clarity-pattern-parser\";\n\nimport number from \"./number\";\n\nconst unitType = new RegexValue(\"unit-type\", \"[a-zA-Z%]+\");\nconst unit = new AndComposite(\"unit\", [number, unitType]);\n\nexport default unit;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst hex = new RegexValue(\"hex\", \"#[0-9a-fA-F]{6}|#[0-9a-fA-F]{3}\");\n\nexport default hex;\n","import { RegexValue } from \"clarity-pattern-parser\";\n\nconst name = new RegexValue(\"name\", \"[a-zA-Z]+[a-zA-Z0-9_-]*\");\n\nexport default name;\n","import { Literal, RepeatValue } from \"clarity-pattern-parser\";\nimport { OptionalValue } from \"clarity-pattern-parser\";\n\nconst space = new Literal(\"optional-space\", \" \");\nconst spaces = new RepeatValue(\"optional-spaces\", space);\nconst optionalSpaces = new OptionalValue(spaces);\n\nexport default optionalSpaces;\n","import {\n  Literal,\n  AndComposite,\n  RepeatComposite,\n  RecursivePattern,\n  OptionalComposite\n} from \"clarity-pattern-parser\";\n\nimport name from \"./name\";\nimport optionalSpaces from \"./optionalSpaces\";\nimport divider from \"./divider\";\n\nconst openParen = new Literal(\"open-paren\", \"(\");\nconst closeParen = new Literal(\"close-paren\", \")\");\nconst values = new RecursivePattern(\"values\");\nconst args = new RepeatComposite(\"arguments\", values, divider);\nconst optionalArgs = new OptionalComposite(args);\n\nconst method = new AndComposite(\"method\", [\n  name,\n  openParen,\n  optionalSpaces,\n  optionalArgs,\n  optionalSpaces,\n  closeParen\n]);\n\nexport default method;\n","import { OrComposite } from \"clarity-pattern-parser\";;\nimport unit from \"./unit\";\nimport hex from \"./hex\";\nimport number from \"./number\";\nimport method from \"./method\";\nimport name from \"./name\"\n\nconst value = new OrComposite(\"value\", [hex, method, unit, number, name]);\n\nexport default value;\n","import { Literal, RepeatValue } from \"clarity-pattern-parser\";\n\nconst space = new Literal(\"space\", \" \");\nconst spaces = new RepeatValue(\"spaces\", space);\n\nexport default spaces;\n","import { RepeatComposite } from \"clarity-pattern-parser\";\nimport value from \"./value\";\nimport spaces from \"./spaces\";\n\nconst values = new RepeatComposite(\"values\", value, spaces);\n\nexport default values;\n","import { RepeatComposite } from \"clarity-pattern-parser\";\nimport divider from \"./divider\";\nimport values from \"./values\";\n\nconst cssValue = new RepeatComposite(\"css-value\", values, divider);\n\nexport default cssValue;\n","import { Node, ValueNode } from \"clarity-pattern-parser\";\nimport { CompositeNode } from \"clarity-pattern-parser\";\n\nconst hexRegEx = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})|([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i;\n\nexport default class HexColor {\n  public hexString: any;\n  public rgba: any;\n\n  constructor(hexString: string) {\n    this.setHex(hexString);\n  }\n\n  setHex(hexString: string) {\n    this.hexString = hexString;\n    this.normalizeHex();\n    this.saveRgba();\n  }\n\n  saveRgba() {\n    const hex = this.hexString;\n    hexRegEx.lastIndex = 0;\n    const result = hexRegEx.exec(hex);\n    this.rgba = result\n      ? [\n          parseInt(result[1], 16),\n          parseInt(result[2], 16),\n          parseInt(result[3], 16),\n          1,\n        ]\n      : [0, 0, 0, 1];\n  }\n\n  toComplexNode() {\n    const children = this.rgba\n      .map((number: number) => {\n        const valuesNode = new CompositeNode(\"repeat-composite\", \"values\");\n        valuesNode.children.push(\n          new ValueNode(\"regex-value\", \"number\", number.toString())\n        );\n\n        return valuesNode;\n      })\n      .reduce((acc: Node[], valueNode: Node) => {\n        acc.push(valueNode);\n        acc.push(new ValueNode(\"regex-value\", \"divider\", \", \"));\n        return acc;\n      }, []);\n\n    const node = new CompositeNode(\"and-composite\", \"method\");\n    const name = new ValueNode(\"regex-value\", \"name\", \"rgba\");\n    const openParen = new ValueNode(\"literal\", \"open-paren\", \"(\");\n    const args = new CompositeNode(\"repeat-composite\", \"arguments\");\n    const closeParen = new ValueNode(\"literal\", \"close-paren\", \")\");\n\n    args.children = children;\n\n    node.children.push(name, openParen, args, closeParen);\n\n    return node;\n  }\n\n  toValueNode() {\n    return new ValueNode(\"literal\", \"hex\", this.hexString);\n  }\n\n  toRgbString() {\n    return `rgb(${this.rgba[0]},${this.rgba[1]},${this.rgba[2]})`;\n  }\n\n  normalizeHex() {\n    if (this.hexString.length === 4) {\n      this.hexString = this.hexString + this.hexString.substring(1);\n    }\n  }\n\n  numberToHex(number: number) {\n    if (number > 255) {\n      number = 255;\n    }\n\n    if (number < 0) {\n      number = 0;\n    }\n\n    let hex = number.toString(16);\n    if (hex.length < 2) {\n      hex = \"0\" + hex;\n    }\n\n    return hex;\n  }\n\n  toHexString() {\n    const rgbArray = this.rgba;\n    const red = this.numberToHex(rgbArray[0]);\n    const green = this.numberToHex(rgbArray[1]);\n    const blue = this.numberToHex(rgbArray[2]);\n\n    return `#${red}${green}${blue}`;\n  }\n}\n","import Visitor from \"./Visitor\";\nimport HexColor from \"./HexColor\";\nimport { Node } from \"clarity-pattern-parser\";\n\nconst filterOutSpaces = (child: Node) => child.name !== \"optional-spaces\";\n\nexport default class TreeNormalizer {\n  public visitor: any;\n\n  constructor() {\n    this.visitNode = this.visitNode.bind(this);\n    this.visitor = new Visitor(this.visitNode);\n  }\n\n  visitNode(node: Node) {\n    if (Array.isArray(node.children)) {\n      this.removeOptionalSpaces(node);\n      this.replaceHex(node);\n      this.removeUnnecessaryDividers(node);\n      this.removeUnnecessaryValuesSpaces(node);\n    }\n\n    this.collapseWhiteSpace(node);\n    this.removeSpacesAroundDividers(node);\n  }\n\n  collapseWhiteSpace(node: Node) {\n    if (node.name === \"spaces\") {\n      node.value = \" \";\n    }\n  }\n\n  removeSpacesAroundDividers(node: Node) {\n    if (node.name === \"divider\") {\n      node.value = node.value.trim() + \" \";\n    }\n  }\n\n  removeUnnecessaryDividers(node: Node) {\n    const children = node.children;\n\n    while (\n      children.length > 0 &&\n      children[children.length - 1].name === \"divider\"\n    ) {\n      children.pop();\n    }\n  }\n\n  removeUnnecessaryValuesSpaces(node: Node) {\n    const children = node.children;\n\n    while (\n      node.name === \"values\" &&\n      children.length > 0 &&\n      children[children.length - 1].name === \"spaces\"\n    ) {\n      children.pop();\n    }\n  }\n\n  removeOptionalSpaces(node: Node) {\n    node.children = node.children.filter(filterOutSpaces);\n  }\n\n  replaceHex(node: Node) {\n    node.children = node.children.map((child) => {\n      if (child.name === \"hex\") {\n        const hexColor = new HexColor(child.value);\n        return hexColor.toComplexNode();\n      }\n      return child;\n    });\n  }\n\n  normalize(node: Node) {\n    this.visitor.visitDown(node);\n    return node;\n  }\n}\n","import cssValue from \"./patterns/cssValue\";\nimport TreeNormalizer from \"./TreeNormalizer\";\nimport TreeUtility from \"./TreeUtility\";\nimport { Cursor, Node } from \"clarity-pattern-parser\";\n\nconst treeUtility = new TreeUtility();\nconst treeNormalizer = new TreeNormalizer();\n\nexport default class ParsedValue {\n  public value: string;\n  public graph: Node;\n  public graphHash: string;\n\n  constructor(value: string, graph?: Node, graphHash?: string) {\n    this.value = value;\n\n    if (typeof graph === \"undefined\") {\n      const node = cssValue.parse(new Cursor(value));\n      if (node == null) {\n        throw new Error(\"Couldn't parse css value.\");\n      }\n\n      this.graph = treeNormalizer.normalize(node);\n      treeUtility.convertNumberNodesToNumberValues(this.graph);\n    } else {\n      this.graph = graph;\n    }\n\n    if (typeof graphHash === \"undefined\") {\n      this.graphHash = treeUtility.sequenceHash(this.graph).toString();\n    } else {\n      this.graphHash = graphHash;\n    }\n  }\n\n  clone() {\n    return new ParsedValue(this.value, this.graph.clone(), this.graphHash);\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport { KeyframeConfig } from \"./Keyframe\";\nimport { SimpleKeyframeConfig } from \"./KeyframeUtility\";\nimport ParsedValue from \"./ParsedValue\";\n\nexport default class KeyframeConfigValidator {\n\tpublic config: any;\n\n  constructor() {\n    this.config = null;\n  }\n\n  setConfig(config: KeyframeConfig | SimpleKeyframeConfig) {\n    this.config = config;\n  }\n\n  isSimpleConfig() {\n    return this.hasValidToAsString();\n  }\n\n  validateConfig() {\n    if (this.config == null) {\n      throw new Error(\n        `Invalid Arguments: The \"config\" cannot be null or undefined.`\n      );\n    }\n  }\n\n  validate(config: KeyframeConfig) {\n    this.setConfig(config);\n    this.validateName();\n    this.validateProperty();\n    this.validateToAsParsedValue();\n    this.validateControlsAsParsedValues();\n    this.validateFromAsParsedValue();\n    this.validateStartAt();\n    this.validateEndAt();\n    this.validateEasingFunction();\n    this.validateNodes();\n  }\n\n  validateName() {\n    this.validateConfig();\n\n    if (!this.hasValidName()) {\n      throw new Error(\n        `Invalid Arguments: The \"name\" property needs to be an string.`\n      );\n    }\n  }\n\n  hasValidName() {\n    return typeof this.config.name === \"string\";\n  }\n\n  validateProperty() {\n    this.validateConfig();\n\n    if (!this.hasValidProperty()) {\n      throw new Error(`The \"property\" property needs to be a string.`);\n    }\n  }\n\n  hasValidProperty() {\n    return typeof this.config.property === \"string\";\n  }\n\n  validateToAsString() {\n    this.validateConfig();\n\n    if (!this.hasValidToAsString()) {\n      throw new Error(\n        `The \"to\" property needs to be a string, but found ${this.config.to}.`\n      );\n    }\n  }\n\n  hasValidToAsString() {\n    return typeof this.config.to === \"string\";\n  }\n\n  validateToAsParsedValue() {\n    this.validateConfig();\n\n    if (!this.hasValidToAsParsedValue()) {\n      throw new Error(\n        `The \"to\" property needs to be a ParsedValue, but found ${this.config.to}.`\n      );\n    }\n  }\n\n  hasValidToAsParsedValue() {\n    return this.config.to instanceof ParsedValue;\n  }\n\n  validateFromAsString() {\n    this.validateConfig();\n\n    if (typeof this.config.from !== \"string\") {\n      throw new Error(\n        `The \"from\" property needs to be a string, but found ${this.config.from}.`\n      );\n    }\n  }\n\n  hasValidFromAsString() {\n    return typeof this.config.from === \"string\";\n  }\n\n  validateFromAsParsedValue() {\n    this.validateConfig();\n\n    if (!this.hasValidFromAsParsedValue()) {\n      throw new Error(\n        `The \"from\" property needs to be a ParsedValue, but found ${this.config.from}.`\n      );\n    }\n  }\n\n  hasValidFromAsParsedValue() {\n    return this.config.from instanceof ParsedValue;\n  }\n\n  validateControlsAsStrings() {\n    this.validateConfig();\n\n    if (!this.hasValidControlsAsStrings()) {\n      throw new Error(\n        `The \"controls\" property needs to be made of strings, but found ${this.config.controls}.`\n      );\n    }\n  }\n\n  hasValidControlsAsStrings() {\n    return (\n      Array.isArray(this.config.controls) &&\n      this.config.controls.every((control: string) => typeof control === \"string\")\n    );\n  }\n\n  validateControlsAsParsedValues() {\n    this.validateConfig();\n\n    if (!this.hasValidControlsAsParsedValues()) {\n      throw new Error(\n        `The \"controls\" property needs to be made of ParsedValues, but found ${this.config.controls}.`\n      );\n    }\n  }\n\n  hasValidControlsAsParsedValues() {\n    return this.config.controls.every(\n      (control: ParsedValue) => control instanceof ParsedValue\n    );\n  }\n\n  validateStartAt() {\n    this.validateConfig();\n\n    if (!this.hasValidStartAt) {\n      throw new Error(\n        `The \"startAt\" property must be a number between 0 and 1.`\n      );\n    }\n  }\n\n  hasValidStartAt() {\n    return (\n      typeof this.config.startAt === \"number\" &&\n      this.config.startAt >= 0 &&\n      this.config.startAt <= 1\n    );\n  }\n\n  validateEndAt() {\n    this.validateConfig();\n\n    if (!this.hasValidEndAt()) {\n      throw new Error(`The \"endAt\" property must be a number between 0 and 1.`);\n    }\n  }\n\n  hasValidEndAt() {\n    return (\n      typeof this.config.endAt === \"number\" &&\n      this.config.endAt >= 0 &&\n      this.config.endAt <= 1\n    );\n  }\n\n  validateEasingString() {\n    this.validateConfig();\n\n    if (!this.hasValidEasingString()) {\n      throw new Error(`The \"easing\" property must be a string.`);\n    }\n  }\n\n  hasValidEasingString() {\n    return typeof this.config.easing === \"string\";\n  }\n\n  validateEasingFunction() {\n    this.validateConfig();\n\n    if (!this.hasValidEasingFunction()) {\n      throw new Error(`The \"easing\" property must be a function.`);\n    }\n  }\n\n  hasValidEasingFunction() {\n    return typeof this.config.easing === \"function\";\n  }\n\n  validateNodes() {\n    this.validateConfig();\n    const config = this.config;\n\n    if (!this.areGraphStructuresEqual()) {\n      throw new Error(\n        `Invalid Keyframe: The value types that are being animated do not match. From: ${JSON.stringify(\n          config.from.value\n        )}, To:${JSON.stringify(config.to.value)}, Controls: ${JSON.stringify(\n          config.controls.map((v: Node) => v.value)\n        )}`\n      );\n    }\n  }\n\n  areGraphStructuresEqual() {\n    let allStructuresAreEqual = true;\n    const config = this.config;\n\n    if (config.to.graphHash !== config.from.graphHash) {\n      allStructuresAreEqual = false;\n    }\n\n    for (let x = 0; x < config.controls.length; x++) {\n      const value = config.controls[x];\n\n      if (value.graphHash !== config.from.graphHash) {\n        allStructuresAreEqual = false;\n        break;\n      }\n    }\n\n    return allStructuresAreEqual;\n  }\n}\n","export default (percentage: number) => {\n  return percentage * percentage;\n};\n","export default (percentage: number) => {\n  return -percentage * (percentage - 2);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1) return (1 / 2) * percentage * percentage;\n  return (-1 / 2) * (--percentage * (percentage - 2) - 1);\n};\n","export default (percentage: number) => {\n  const p = 0.3 / 1;\n  const s = p / 4;\n  const a = 1;\n\n  if (percentage <= 0) return 0;\n  if (percentage >= 1) return 1;\n\n  return -(\n    a *\n    Math.pow(2, 10 * (percentage -= 1)) *\n    Math.sin(((percentage - s) * (2 * Math.PI)) / p)\n  );\n};\n","export default (t: number) => {\n  var b = 0;\n  var c = 1;\n  var d = 1;\n  var s = 1.70158;\n  var p = 0;\n  var a = c;\n\n  if (t == 0) return b;\n  if ((t /= d / 2) == 2) return b + c;\n  if (!p) p = d * (0.3 / 1);\n  if (a < Math.abs(c)) {\n    a = c;\n    var s = p / 4;\n  } else var s = (p / (2 * Math.PI)) * Math.asin(c / a);\n  if (t < 1)\n    return (\n      -0.5 *\n        (a *\n          Math.pow(2, 10 * (t -= 1)) *\n          Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\n      b\n    );\n  return (\n    a *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\n      0.5 +\n    c +\n    b\n  );\n};\n","export default (percentage: number) => {\n  const p = 0.3 / 1;\n  const s = p / 4;\n  const a = 1;\n\n  if (percentage <= 0) return 0;\n  if (percentage >= 1) return 1;\n\n  return (\n    a *\n      Math.pow(2, -10 * percentage) *\n      Math.sin(((percentage - s) * (2 * Math.PI)) / p) +\n    1\n  );\n};\n","export default (percentage: number) => {\n  const s = 1.70158 * 1.525;\n\n  if ((percentage /= 1 / 2) < 1) {\n    return (1 / 2) * (percentage * percentage * ((s + 1) * percentage - s));\n  }\n\n  return (\n    (1 / 2) * ((percentage -= 2) * percentage * ((s + 1) * percentage + s) + 2)\n  );\n};\n","export default (percentage: number) => {\n  let t = percentage;\n\n  if ((t /= 1) < 1 / 2.75) {\n    return 7.5625 * t * t;\n  } else if (t < 2 / 2.75) {\n    return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n  } else if (t < 2.5 / 2.75) {\n    return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n  } else {\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  }\n};\n","import easeOutBounce from \"./easeOutBounce\";\n\nexport default (percentage: number) => {\n  return 1 - easeOutBounce(1 - percentage);\n};\n","import easeInBounce from \"./easeInBounce\";\nimport easeOutBounce from \"./easeOutBounce\";\n\nexport default (percentage: number) => {\n  if (percentage < 0.5) {\n    return easeInBounce(percentage * 2) * 0.5;\n  } else {\n    return easeOutBounce(percentage * 2 - 1) * 0.5 + 0.5;\n  }\n};\n","export default (percentage: number) => {\n  return 1 * (percentage /= 1) * percentage * percentage;\n};\n","export default (percentage: number) => {\n  return 1 * ((percentage = percentage / 1 - 1) * percentage * percentage + 1);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * percentage * percentage * percentage;\n  return (1 / 2) * ((percentage -= 2) * percentage * percentage + 2);\n};\n","export default (percentage: number) => {\n  return 1 * (percentage /= 1) * percentage * percentage * percentage;\n};\n","export default (percentage: number) => {\n  return (\n    -1 *\n    ((percentage = percentage / 1 - 1) * percentage * percentage * percentage -\n      1)\n  );\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * percentage * percentage * percentage * percentage;\n  return (\n    (-1 / 2) * ((percentage -= 2) * percentage * percentage * percentage - 2)\n  );\n};\n","export default (percentage: number) => {\n  return (\n    1 * (percentage /= 1) * percentage * percentage * percentage * percentage\n  );\n};\n","export default (percentage: number) => {\n  return (\n    1 *\n    ((percentage = percentage / 1 - 1) *\n      percentage *\n      percentage *\n      percentage *\n      percentage +\n      1)\n  );\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (\n      (1 / 2) * percentage * percentage * percentage * percentage * percentage\n    );\n  return (\n    (1 / 2) *\n    ((percentage -= 2) * percentage * percentage * percentage * percentage + 2)\n  );\n};\n","export default (percentage: number) => {\n  return -Math.cos(percentage * (Math.PI / 2)) + 1;\n};\n","export default (percentage: number) => {\n  return 1 * Math.sin((percentage / 1) * (Math.PI / 2));\n};\n","export default (percentage: number) => {\n  return (-1 / 2) * (Math.cos((Math.PI * percentage) / 1) - 1);\n};\n","export default (percentage: number) => {\n  return percentage == 0 ? 0 : 1 * Math.pow(2, 10 * (percentage / 1 - 1));\n};\n","export default (percentage: number) => {\n  return percentage == 1 ? 1 : 1 * (-Math.pow(2, (-10 * percentage) / 1) + 1);\n};\n","export default (percentage: number) => {\n  if (percentage == 0) return 0;\n  if (percentage == 1) return 1;\n  if ((percentage /= 1 / 2) < 1)\n    return (1 / 2) * Math.pow(2, 10 * (percentage - 1));\n  return (1 / 2) * (-Math.pow(2, -10 * --percentage) + 2);\n};\n","export default (percentage: number) => {\n  return -1 * (Math.sqrt(1 - (percentage /= 1) * percentage) - 1);\n};\n","export default (percentage: number) => {\n  return 1 * Math.sqrt(1 - (percentage = percentage / 1 - 1) * percentage);\n};\n","export default (percentage: number) => {\n  if ((percentage /= 1 / 2) < 1)\n    return (-1 / 2) * (Math.sqrt(1 - percentage * percentage) - 1);\n  return (1 / 2) * (Math.sqrt(1 - (percentage -= 2) * percentage) + 1);\n};\n","export default (percentage: number) => {\n  const s = 1.70158;\n  return 1 * (percentage /= 1) * percentage * ((s + 1) * percentage - s);\n};\n","export default (percentage: number) => {\n  const s = 1.70158;\n  return (\n    1 *\n    ((percentage = percentage / 1 - 1) *\n      percentage *\n      ((s + 1) * percentage + s) +\n      1)\n  );\n};\n","export default (percentage: number) => {\n  return percentage;\n};\n","import easeInQuad from \"./easingFunctions/easeInQuad\";\nimport easeOutQuad from \"./easingFunctions/easeOutQuad\";\nimport easeInOutQuad from \"./easingFunctions/easeInOutQuad\";\nimport easeInElastic from \"./easingFunctions/easeInElastic\";\nimport easeInOutElastic from \"./easingFunctions/easeInOutElastic\";\nimport easeOutElastic from \"./easingFunctions/easeOutElastic\";\nimport easeInOutBack from \"./easingFunctions/easeInOutBack\";\nimport easeInOutBounce from \"./easingFunctions/easeInOutBounce\";\nimport easeInBounce from \"./easingFunctions/easeInBounce\";\nimport easeOutBounce from \"./easingFunctions/easeOutBounce\";\nimport easeInCubic from \"./easingFunctions/easeInCubic\";\nimport easeOutCubic from \"./easingFunctions/easeOutCubic\";\nimport easeInOutCubic from \"./easingFunctions/easeInOutCubic\";\nimport easeInQuart from \"./easingFunctions/easeInQuart\";\nimport easeOutQuart from \"./easingFunctions/easeOutQuart\";\nimport easeInOutQuart from \"./easingFunctions/easeInOutQuart\";\nimport easeInQuint from \"./easingFunctions/easeInQuint\";\nimport easeOutQuint from \"./easingFunctions/easeOutQuint\";\nimport easeInOutQuint from \"./easingFunctions/easeInOutQuint\";\nimport easeInSine from \"./easingFunctions/easeInSine\";\nimport easeOutSine from \"./easingFunctions/easeOutSine\";\nimport easeInOutSine from \"./easingFunctions/easeInOutSine\";\nimport easeInExpo from \"./easingFunctions/easeInExpo\";\nimport easeOutExpo from \"./easingFunctions/easeOutExpo\";\nimport easeInOutExpo from \"./easingFunctions/easeInOutExpo\";\nimport easeInCirc from \"./easingFunctions/easeInCirc\";\nimport easeOutCirc from \"./easingFunctions/easeOutCirc\";\nimport easeInOutCirc from \"./easingFunctions/easeInOutCirc\";\nimport easeInBack from \"./easingFunctions/easeInBack\";\nimport easeOutBack from \"./easingFunctions/easeOutBack\";\nimport easeLinear from \"./easingFunctions/easeLinear\";\n\nexport type EasingFunction = (percentage: number) => number;\n\nexport type EasingNames =\n  | \"easeInQuad\"\n  | \"easeOutQuad\"\n  | \"easeInOutQuad\"\n  | \"easeInCubic\"\n  | \"easeOutCubic\"\n  | \"easeInOutCubic\"\n  | \"easeInQuart\"\n  | \"easeOutQuart\"\n  | \"easeInOutQuart\"\n  | \"easeInQuint\"\n  | \"easeOutQuint\"\n  | \"easeInOutQuint\"\n  | \"easeInSine\"\n  | \"easeOutSine\"\n  | \"easeInOutSine\"\n  | \"easeInExpo\"\n  | \"easeOutExpo\"\n  | \"easeInOutExpo\"\n  | \"easeInCirc\"\n  | \"easeOutCirc\"\n  | \"easeInOutCirc\"\n  | \"easeInElastic\"\n  | \"easeOutElastic\"\n  | \"easeInOutElastic\"\n  | \"easeInBack\"\n  | \"easeOutBack\"\n  | \"easeInOutBack\"\n  | \"easeInBounce\"\n  | \"easeOutBounce\"\n  | \"easeInOutBounce\"\n  | \"easeLinear\";\n\nconst easings = {\n  easeInQuad: easeInQuad,\n  easeOutQuad: easeOutQuad,\n  easeInOutQuad: easeInOutQuad,\n  easeInCubic: easeInCubic,\n  easeOutCubic: easeOutCubic,\n  easeInOutCubic: easeInOutCubic,\n  easeInQuart: easeInQuart,\n  easeOutQuart: easeOutQuart,\n  easeInOutQuart: easeInOutQuart,\n  easeInQuint: easeInQuint,\n  easeOutQuint: easeOutQuint,\n  easeInOutQuint: easeInOutQuint,\n  easeInSine: easeInSine,\n  easeOutSine: easeOutSine,\n  easeInOutSine: easeInOutSine,\n  easeInExpo: easeInExpo,\n  easeOutExpo: easeOutExpo,\n  easeInOutExpo: easeInOutExpo,\n  easeInCirc: easeInCirc,\n  easeOutCirc: easeOutCirc,\n  easeInOutCirc: easeInOutCirc,\n  easeInElastic: easeInElastic,\n  easeOutElastic: easeOutElastic,\n  easeInOutElastic: easeInOutElastic,\n  easeInBack: easeInBack,\n  easeOutBack: easeOutBack,\n  easeInOutBack: easeInOutBack,\n  easeInBounce: easeInBounce,\n  easeOutBounce: easeOutBounce,\n  easeInOutBounce: easeInOutBounce,\n  linear: easeLinear,\n};\n\nexport default easings;\n","import easings, {\n  EasingFunction,\n  EasingNames as EasingAsStrings,\n} from \"./easings\";\nimport { KeyframeConfig } from \"./Keyframe\";\nimport KeyframeConfigValidator from \"./KeyframeConfigValidator\";\nimport ParsedValue from \"./ParsedValue\";\n\nconst validator = new KeyframeConfigValidator();\n\nexport interface SimpleKeyframeConfig {\n  name: string;\n  property: string;\n  to: string;\n  from: string;\n  endAt: number;\n  startAt: number;\n  controls: string[];\n  easing: EasingAsStrings | EasingFunction;\n  value: string;\n}\n\nexport default class KeyframeUtility {\n  public config!: SimpleKeyframeConfig;\n  public result!: KeyframeConfig;\n\n  private _setConfig(config: SimpleKeyframeConfig) {\n    this.config = config;\n    this.result = {} as any;\n    validator.setConfig(config);\n  }\n\n  normalizeConfig(config: SimpleKeyframeConfig) {\n    this._setConfig(config);\n    this._normalizeName();\n    this._normalizeProperty();\n    this._normalizeValue();\n    this._normalizeFrom();\n    this._normalizeControls();\n    this._normalizeTo();\n    this._normalizeStartAt();\n    this._normalizeEndAt();\n    this._normalizeEasing();\n\n    return this.result;\n  }\n\n  private _normalizeName() {\n    this.result.name = this.config.name;\n  }\n\n  private _normalizeProperty() {\n    this.result.property = this.config.property;\n  }\n\n  private _normalizeValue() {\n    if (this.config.value != null) {\n      this.config.to = this.config.value;\n      this.config.from = this.config.value;\n    }\n  }\n\n  private _normalizeFrom() {\n    if (validator.hasValidFromAsString()) {\n      this.result.from = new ParsedValue(this.config.from);\n    } else {\n      validator.validateFromAsString();\n    }\n  }\n\n  private _normalizeControls() {\n    if (!Array.isArray(this.config.controls)) {\n      this.config.controls = [];\n    }\n\n    if (validator.hasValidControlsAsStrings()) {\n      this.result.controls = this.config.controls.map(\n        (control: string) => new ParsedValue(control)\n      );\n    } else {\n      validator.validateControlsAsStrings();\n    }\n  }\n\n  private _normalizeTo() {\n    if (validator.hasValidToAsString()) {\n      this.result.to = new ParsedValue(this.config.to);\n    } else {\n      validator.validateToAsString();\n    }\n  }\n\n  private _normalizeStartAt() {\n    if (validator.hasValidStartAt()) {\n      this.result.startAt = this.config.startAt;\n    } else {\n      this.result.startAt = 0;\n    }\n  }\n\n  private _normalizeEndAt() {\n    if (validator.hasValidEndAt()) {\n      this.result.endAt = this.config.endAt;\n    } else {\n      this.result.endAt = 1;\n    }\n  }\n\n  private _normalizeEasing() {\n    if (\n      !validator.hasValidEasingString() &&\n      !validator.hasValidEasingFunction()\n    ) {\n      this.result.easing = easings.linear;\n    } else if (validator.hasValidEasingString()) {\n      this.result.easing =\n        (easings as any)[this.config.easing as EasingAsStrings] ||\n        easings.linear;\n    } else if (validator.hasValidEasingFunction()) {\n      this.result.easing = this.config.easing as EasingFunction;\n    }\n  }\n}\n","import { EasingFunction } from \"./easings\";\nimport KeyframeConfigValidator from \"./KeyframeConfigValidator\";\nimport KeyframeUtility, { SimpleKeyframeConfig } from \"./KeyframeUtility\";\nimport ParsedValue from \"./ParsedValue\";\n\nconst validator = new KeyframeConfigValidator();\nconst utility = new KeyframeUtility();\n\nexport interface KeyframeConfig {\n  name: string;\n  property: string;\n  to: ParsedValue;\n  from: ParsedValue;\n  endAt: number;\n  startAt: number;\n  controls: ParsedValue[];\n  easing: EasingFunction;\n}\n\nexport default class Keyframe {\n  public name: any;\n  public property: any;\n  public to: any;\n  public from: any;\n  public result: any;\n  public startAt: any;\n  public endAt: any;\n  public controls: any;\n  public easing: any;\n\n  constructor(config: KeyframeConfig) {\n    validator.setConfig(config);\n    validator.validate(config);\n\n    this.name = config.name;\n    this.property = config.property;\n    this.to = config.to;\n    this.from = config.from;\n    this.result = config.from.clone();\n    this.startAt = config.startAt;\n    this.endAt = config.endAt;\n    this.controls = config.controls;\n    this.easing = config.easing;\n  }\n\n  static fromSimpleConfig(config: SimpleKeyframeConfig) {\n    return new Keyframe(utility.normalizeConfig(config));\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport Animator from \"./Animator\";\nimport Keyframe from \"./Keyframe\";\nimport ParsedValue from \"./ParsedValue\";\n\nconst sortAsc = (animatorA: Animator, animatorB: Animator) => {\n  return animatorA.keyframe.startAt - animatorB.keyframe.startAt;\n};\n\ntype AnimationState = {\n  [key: string]: { [key: string]: ParsedValue } \n}\n\nexport default class Animation {\n  public animators: Animator[] = [];\n  public _time: number = 0;\n  public _currentValues!: AnimationState;\n\n  constructor(keyframes: Keyframe[]) {\n    this.initialize(keyframes);\n  }\n\n  initialize(keyframes: Keyframe[]) {\n    this._currentValues = {};\n\n    this.animators = keyframes\n      .map((keyframe) => {\n        if (keyframe instanceof Keyframe) {\n          return keyframe;\n        } else {\n          return Keyframe.fromSimpleConfig(keyframe);\n        }\n      })\n      .map((keyframe) => new Animator(keyframe));\n\n    this._createCurrentValues();\n\n    // Sort by time.\n    this.animators.sort(sortAsc);\n  }\n\n  private _createCurrentValues() {\n    this._currentValues = this.animators.reduce((results: AnimationState, animator) => {\n      const name = animator.keyframe.name;\n      const property = animator.keyframe.property;\n\n      let keyframe = results[name];\n\n      if (keyframe == null) {\n        keyframe = results[name] = {};\n      }\n\n      if (keyframe[property] == null) {\n        keyframe[property] = animator.keyframe.result.clone();\n      }\n\n      return results;\n    }, {});\n  }\n\n  private _assignValue(keyframe: Keyframe) {\n    const currentValue = this._currentValues[keyframe.name][keyframe.property];\n\n    currentValue.value = keyframe.result.value;\n    currentValue.graph = keyframe.result.graph;\n    currentValue.graphHash = keyframe.result.graphHash;\n  }\n\n  private _saveCurrentValues() {\n    const visitedMap = new Map();\n    const animators = this.animators;\n    const length = animators.length;\n\n    // Assign all values at least once.\n    // This initials values beyond the time we are at.\n    for (let x = 0; x < length; x++) {\n      const keyframe = animators[x].keyframe;\n      const key = `${keyframe.name}|${keyframe.property}`;\n\n      if (!visitedMap.has(key)) {\n        visitedMap.set(key, true);\n        this._assignValue(keyframe);\n      }\n    }\n\n    // Assign if the value of the start at was before the time now.\n    // Since we have it sorted, the most current will win.\n    for (let x = 0; x < length; x++) {\n      const keyframe = animators[x].keyframe;\n\n      if (keyframe.startAt <= this._time) {\n        this._assignValue(keyframe);\n      }\n    }\n  }\n\n  update(time: number) {\n    this._time = time;\n    // Update all keyframes\n    this.animators.forEach((animator) => {\n      animator.update(time);\n    });\n\n    this._saveCurrentValues();\n\n    return this;\n  }\n\n  getCurrentValues() {\n    return this._currentValues;\n  }\n\n  merge(animation: Animation) {\n    const oldKeyframes = this.animators.map((a) => a.keyframe);\n    const newKeyframes = animation.animators.map((a) => a.keyframe);\n\n    this.initialize([...oldKeyframes, ...newKeyframes]);\n\n    return this;\n  }\n}\n","const states = {\n  ACTIVE: 1,\n  STOPPED: 0,\n  DISPOSED: -1,\n};\n\nexport interface IEvent {\n  type: string;\n}\n\nexport default class Observer<TEvent extends IEvent> {\n  protected type: any;\n  protected callback: any;\n  protected unbind: any;\n  protected state: any;\n\n  constructor(\n    type: string,\n    callback: (event: TEvent) => void,\n    unbind: () => void\n  ) {\n    this.type = type;\n    this.callback = callback;\n    this.unbind = unbind;\n    this.state = states.ACTIVE;\n  }\n\n  notify(event: TEvent) {\n    if (event.type === this.type) {\n      this.callback(event);\n    }\n  }\n\n  stop() {\n    if (this.state === states.ACTIVE) {\n      this.state = states.STOPPED;\n    }\n  }\n\n  start() {\n    if (this.state !== states.DISPOSED) {\n      this.state = states.ACTIVE;\n    }\n  }\n\n  dispose() {\n    this.state = states.DISPOSED;\n    this.unbind();\n  }\n}\n","import Observer, { IEvent } from \"./Observer\";\n\nexport interface ITimeEvent extends IEvent {\n    time: number;\n    lastTime: number;\n}\n\nexport default class TimeObserver<\n  TEvent extends ITimeEvent\n> extends Observer<TEvent> {\n  public time: any;\n\n  constructor(\n    time: number,\n    callback: (event: TEvent) => void,\n    unbind: () => void\n  ) {\n    super(\"TIME_OBSERVER\", callback, unbind);\n    this.time = time;\n  }\n\n  notify(event: TEvent) {\n    if (typeof event.lastTime === \"number\" && typeof event.time === \"number\") {\n      const high = Math.max(event.time, event.lastTime);\n      const low = Math.min(event.time, event.lastTime);\n\n      if (this.time >= low && this.time <= high) {\n        this.callback(event);\n      }\n    }\n  }\n}\n","import Observer, { IEvent } from \"./Observer\";\nimport TimeObserver, { ITimeEvent } from \"./TimeObserver\";\n\nexport default class Observable {\n  private observers: any;\n\n  constructor() {\n    this.observers = [];\n  }\n\n  observeTime<TEvent extends ITimeEvent>(\n    time: number,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = new TimeObserver(time, callback, () => {\n      const index = this.observers.indexOf(observer);\n      if (index > -1) {\n        this.observers.splice(index, 1);\n      }\n    });\n\n    this.observers.push(observer);\n    return observer;\n  }\n\n  observe<TEvent extends IEvent>(\n    type: string,\n    callback: (event: TEvent) => void\n  ) {\n    const observer = new Observer<TEvent>(type, callback, () => {\n      const index = this.observers.indexOf(observer);\n      if (index > -1) {\n        this.observers.splice(index, 1);\n      }\n    });\n\n    this.observers.push(observer);\n    return observer;\n  }\n\n  notify<TEvent extends IEvent>(event: TEvent) {\n    this.observers.forEach((observer: Observer<TEvent>) => {\n      observer.notify(event);\n    });\n  }\n\n  dispose() {\n    this.observers = [];\n  }\n}\n","import {IClock, TickCallback} from \"./IClock\";\n\nexport default class DefaultClock implements IClock {\n  public registeredCallbacks: Map<TickCallback, TickCallback>;\n  public animationFrame: any;\n\n  constructor() {\n    this.registeredCallbacks = new Map();\n    this._tick = this._tick.bind(this);\n    this.animationFrame = null;\n  }\n\n  _tick() {\n    this.registeredCallbacks.forEach((callback) => {\n      callback();\n    });\n\n    if (this.registeredCallbacks.size > 0) {\n      this.animationFrame = window.requestAnimationFrame(this._tick);\n    } else {\n      this.animationFrame = null;\n    }\n  }\n\n  register(callback: TickCallback) {\n    this.registeredCallbacks.set(callback, callback);\n\n    if (this.animationFrame == null) {\n      this._tick();\n    }\n  }\n\n  unregister(callback: TickCallback) {\n    this.registeredCallbacks.delete(callback);\n  }\n\n  now() {\n    return performance.now();\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\n\nexport default class GraphOperations {\n  constructor() {\n    this.add = this.add.bind(this);\n    this.subtract = this.subtract.bind(this);\n    this.multiply = this.multiply.bind(this);\n    this.divide = this.divide.bind(this);\n  }\n\n  add(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      resultNode.value = leftNode.value + rightNode.value;\n    }\n  }\n\n  subtract(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      (resultNode as any).value =\n        (leftNode as any).value - (rightNode as any).value;\n    }\n  }\n\n  multiply(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      (resultNode as any).value =\n        (leftNode as any).value * (rightNode as any).value;\n    }\n  }\n\n  divide(nodes: Node[]) {\n    if (this.canOperate(nodes) && this.isNumberNode(nodes)) {\n      const leftNode = nodes[0];\n      const rightNode = nodes[1];\n      const resultNode = nodes[2];\n\n      (resultNode as any).value =\n        (leftNode as any).value / (rightNode as any).value;\n    }\n  }\n\n  isNumberNode(nodes: Node[]) {\n    return nodes[0].name === \"number\";\n  }\n\n  canOperate(nodes: Node[]) {\n    return nodes.length === 3;\n  }\n}\n","import { Node } from \"clarity-pattern-parser\";\nimport GraphOperations from \"./GraphOperations\";\nimport GraphsVisitor from \"./GraphsVisitor\";\nimport Visitor from \"./Visitor\";\n\nexport default class GraphOperator {\n  public graphsVisitor: any;\n  public visitor: any;\n  public graphOperations: any;\n\n  constructor() {\n    this.graphsVisitor = new GraphsVisitor();\n    this.visitor = new Visitor();\n    this.graphOperations = new GraphOperations();\n  }\n\n  assign(graph: Node, number: number) {\n    this.visitor.setCallback((node: Node) => {\n      if (node.name === \"number\") {\n        (node as any).value = number;\n      }\n    });\n\n    this.visitor.visitDown(graph);\n  }\n\n  add(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.add);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  subtract(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.subtract);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  multiply(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.multiply);\n    this.graphsVisitor.visitDown(graphs);\n  }\n\n  divide(graphs: Node[]) {\n    this.graphsVisitor.setCallback(this.graphOperations.divide);\n    this.graphsVisitor.visitDown(graphs);\n  }\n}\n","import easings from \"./easings\";\nimport GraphOperator from \"./GraphOperator\";\nimport Keyframe from \"./Keyframe\";\nimport Animation from \"./Animation\";\nimport { RepeatDirection } from \"./Player\";\n\nconst FORWARD = 1;\nconst BACKWARD = -1;\n\nexport default class SlopeAnimationBuilder {\n  public animation: any;\n  public slopeAnimation: any;\n  public direction: any;\n  public newDuration: any;\n  public duration: any;\n  public offset: any;\n  public delta: any;\n  public deltaStepValues: any;\n  public scaledValues: any;\n  public deltaValues: any;\n  public nowValues: any;\n  public diffValues: any;\n  public derivativeValues: any;\n  public toValues: any;\n  public graphOperator: any;\n  public scaleValues: any;\n\n  constructor() {\n    this.animation = null;\n    this.slopeAnimation = null;\n    this.direction = 0;\n    this.newDuration = 0;\n    this.duration = 0;\n    this.offset = 0;\n    this.delta = 0.0001;\n    this.deltaStepValues = null;\n    this.scaledValues = null;\n    this.deltaValues = null;\n    this.nowValues = null;\n    this.diffValues = null;\n    this.derivativeValues = null;\n    this.scaledValues = null;\n    this.toValues = null;\n    this.graphOperator = new GraphOperator();\n  }\n\n  private cloneValues(values: any) {\n    return Object.keys(values).reduce((clone: any, name) => {\n      clone[name] = Object.keys(values[name]).reduce((clone: any, property) => {\n        clone[property] = values[name][property].clone();\n        return clone;\n      }, {});\n      return clone;\n    }, {});\n  }\n\n  build(\n    animation: Animation,\n    offset: number,\n    duration: number,\n    newDuration: number,\n    direction: RepeatDirection\n  ) {\n    this.animation = animation;\n    this.offset = offset;\n    this.duration = duration;\n    this.newDuration = newDuration;\n    this.direction = direction;\n\n    this.cacheValues();\n    this.calculate();\n    this.createSlopeTimeline();\n\n    return this.slopeAnimation;\n  }\n\n  private cacheValues() {\n    this.animation.update(this.offset);\n    this.nowValues = this.cloneValues(this.animation.getCurrentValues());\n\n    this.deltaStepValues = this.cloneValues(this.nowValues);\n    this.scaleValues = this.cloneValues(this.nowValues);\n    this.diffValues = this.cloneValues(this.nowValues);\n    this.derivativeValues = this.cloneValues(this.nowValues);\n    this.scaledValues = this.cloneValues(this.nowValues);\n    this.toValues = this.cloneValues(this.nowValues);\n\n    this.cacheDeltaStepValues();\n    this.cacheScaleValues();\n\n    if (this.direction === FORWARD) {\n      this.cacheDeltaValueForward();\n    } else if (this.direction === BACKWARD) {\n      this.cacheDeltaValueBackward();\n    } else {\n      this.cacheDeltaValueStopped();\n    }\n  }\n\n  private cacheDeltaStepValues() {\n    Object.keys(this.deltaStepValues).forEach((name) => {\n      Object.keys(this.deltaStepValues[name]).forEach((property) => {\n        this.graphOperator.assign(\n          this.deltaStepValues[name][property].graph,\n          this.delta\n        );\n      });\n    });\n  }\n\n  private cacheScaleValues() {\n    const scale = this.newDuration / this.duration;\n\n    Object.keys(this.scaleValues).forEach((name) => {\n      Object.keys(this.scaleValues[name]).forEach((property) => {\n        this.graphOperator.assign(\n          this.scaleValues[name][property].graph,\n          scale\n        );\n      });\n    });\n  }\n\n  private cacheDeltaValueForward() {\n    this.animation.update(this.offset + this.delta);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  private cacheDeltaValueBackward() {\n    this.animation.update(this.offset - this.delta);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  private cacheDeltaValueStopped() {\n    this.animation.update(this.offset);\n    this.deltaValues = this.cloneValues(this.animation.getCurrentValues());\n  }\n\n  private calculate() {\n    Object.keys(this.nowValues).forEach((name) => {\n      Object.keys(this.nowValues[name]).forEach((property) => {\n        const now = this.nowValues[name][property].graph;\n        const delta = this.deltaValues[name][property].graph;\n        const diff = this.diffValues[name][property].graph;\n\n        const deltaStep = this.deltaStepValues[name][property].graph;\n        const derivative = this.derivativeValues[name][property].graph;\n        const scale = this.scaleValues[name][property].graph;\n        const scaled = this.scaledValues[name][property].graph;\n        const to = this.toValues[name][property].graph;\n\n        this.graphOperator.subtract([delta, now, diff]);\n        this.graphOperator.divide([diff, deltaStep, derivative]);\n        this.graphOperator.multiply([derivative, scale, scaled]);\n        this.graphOperator.add([now, scaled, to]);\n\n        // Lets update the ParsedValue.value.\n        this.toValues[name][property].value = to.toString();\n      });\n    });\n  }\n\n  private createSlopeTimeline() {\n    const keyframes = Object.keys(this.nowValues)\n      .map((name) => {\n        return Object.keys(this.nowValues[name]).map((property) => {\n          return new Keyframe({\n            name,\n            property,\n            from: this.nowValues[name][property],\n            controls: [],\n            to: this.toValues[name][property],\n            startAt: 0,\n            endAt: 1,\n            easing: easings.linear,\n          });\n        });\n      })\n      .flat();\n\n    this.slopeAnimation = new Animation(keyframes);\n  }\n}\n","import Animation from \"./Animation\";\nimport Keyframe from \"./Keyframe\";\nimport easings, { EasingFunction } from \"./easings\";\n\nexport default class BlendedAnimation extends Animation {\n  public fromAnimation: any;\n  public toAnimation: any;\n\n  constructor(\n    fromAnimation: Animation,\n    toAnimation: Animation,\n    easing: EasingFunction\n  ) {\n    const fromValues = fromAnimation.getCurrentValues();\n    const toValues = toAnimation.getCurrentValues();\n\n    const animations = Object.keys(fromValues)\n      .map((name) => {\n        const fromValue = fromValues[name];\n        const toValue = toValues[name];\n\n        return Object.keys(fromValue).map((property) => {\n          const from = fromValue[property];\n          const to = toValue[property];\n\n          return new Keyframe({\n            name,\n            property,\n            startAt: 0,\n            endAt: 1,\n            from,\n            to,\n            controls: [],\n            easing: easing || easings.linear,\n          });\n        });\n      })\n      .flat();\n\n    super(animations);\n\n    this.fromAnimation = fromAnimation;\n    this.toAnimation = toAnimation;\n  }\n\n  update(time: number) {\n    this.fromAnimation.update(time);\n    this.toAnimation.update(time);\n\n    super.update(time);\n    return this;\n  }\n}\n","import Observable from \"./Observable\";\nimport DefaultClock from \"./DefaultClock\";\nimport SlopeAnimationBuilder from \"./SlopeAnimationBuilder\";\nimport BlendedAnimation from \"./BlendedAnimation\";\nimport { IClock } from \"./IClock\";\nimport { EasingFunction } from \"./easings\";\nimport Animation from \"./Animation\";\n\nconst defaultClock = new DefaultClock();\n\nconst DEFAULT = 0;\nconst ALTERNATE = 1;\n\nconst FORWARD = 1;\nconst REVERSE = -1;\nconst STOPPED = 0;\n\nconst repeatDirections = {\n  DEFAULT,\n  ALTERNATE,\n};\n\nconst states = {\n  FORWARD,\n  REVERSE,\n  STOPPED,\n};\n\nfunction defaultRender() {}\n\nexport type RepeatDirection = 0 | 1;\nexport type States = 1 | -1 | 0;\n\nexport interface PlayerOptions {\n  clock?: IClock;\n  duration: number;\n  repeatDirection: RepeatDirection;\n  states: States;\n  timeScale: number;\n  render: ()=>void;\n}\n\nexport default class Player extends Observable {\n\tpublic _timeScale: number;\n\tpublic _time: number;\n\tpublic _step: any;\n\tpublic _duration: number;\n\tpublic _lastTimestamp: number;\n\tpublic _animationFrame: any;\n\tpublic _iterations: any;\n\tpublic _repeat: any;\n\tpublic _repeatDirection: any;\n\tpublic _animation: any;\n\tpublic _clock: any;\n\tpublic _state: any;\n\tpublic _render: any;\n\tpublic _slopeAnimationBuilder: any;\n\n  constructor(\n    animation: Animation,\n    { clock, duration, timeScale, repeatDirection, render }: PlayerOptions\n  ) {\n    super();\n    this._timeScale = typeof timeScale === \"number\" ? timeScale : 1;\n    this._time = 0;\n    this._step = 0;\n    this._duration = duration;\n    this._lastTimestamp = 0;\n    this._animationFrame = null;\n    this._iterations = 0;\n    this._repeat = 1;\n    this._repeatDirection =\n      typeof repeatDirection === \"number\" ? repeatDirection : DEFAULT;\n    this._animation = animation;\n    this._clock = clock || defaultClock;\n    this._state = STOPPED;\n    this._render = typeof render === \"function\" ? render : defaultRender;\n    this._slopeAnimationBuilder = new SlopeAnimationBuilder();\n\n    this.tick = this.tick.bind(this);\n  }\n\n  get time() {\n    return this._time;\n  }\n\n  get timeScale() {\n    return this._timeScale;\n  }\n\n  set timeScale(value) {\n    if (value > 0) {\n      this._timeScale = value;\n    }\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(value) {\n    if (typeof value !== \"number\") {\n      value = 0;\n    }\n\n    // Virtually Nothing. All Math blows up if the duration is \"0\".\n    if (value <= 0) {\n      value = 0.00001;\n    }\n\n    this._duration = value;\n  }\n\n  get repeat() {\n    return this._repeat;\n  }\n\n  set repeat(value) {\n    if (typeof value !== \"number\" && value > 0) {\n      return;\n    }\n\n    this._repeat = value;\n  }\n\n  get repeatDirection() {\n    return this._repeatDirection;\n  }\n\n  set repeatDirection(value: RepeatDirection) {\n    if ((value !== 0) && (value !== 1)) {\n      return;\n    }\n\n    this._repeatDirection = value;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  get animation() {\n    return this._animation;\n  }\n\n  set animation(animation) {\n    if (typeof animation.render === \"function\") {\n      this._animation = animation;\n    }\n  }\n\n  get iterations() {\n    return this._iterations;\n  }\n\n  play() {\n    if (this._state !== FORWARD) {\n      this._lastTimestamp = this._clock.now();\n      this._state = FORWARD;\n      this._clock.register(this.tick);\n\n      this.notify({\n        type: \"PLAYED\",\n        animation: this._animation,\n      });\n    }\n  }\n\n  tick() {\n    const timestamp = this._clock.now();\n    const deltaTime = timestamp - this._lastTimestamp;\n    this._step = (deltaTime / this._duration) * this._timeScale;\n\n    if (this._step > 1) {\n      this._step = 1;\n    }\n\n    if (deltaTime === 0) {\n      return;\n    }\n\n    if (this._state === REVERSE) {\n      this.stepBackward();\n    } else if (this._state === FORWARD) {\n      this.stepForward();\n    }\n\n    this._lastTimestamp = timestamp;\n  }\n\n  stepForward() {\n    let time = this._time + this._step;\n    let lastTime = this._time;\n\n    const repeatDirection = this._repeatDirection;\n\n    if (time >= 1) {\n      this._iterations++;\n\n      if (this._iterations >= this._repeat) {\n        this.seek(1);\n        this.stop();\n        return;\n      }\n\n      if (repeatDirection === ALTERNATE) {\n        const adjustedTime = 1 - (time - 1);\n\n        this.notify({\n          type: \"TICK\",\n          time: 1,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 1;\n        this.seek(adjustedTime);\n        this._state = REVERSE;\n      } else {\n        const adjustedTime = time - 1;\n\n        this.notify({\n          type: \"TICK\",\n          time: 1,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 0;\n        this.seek(adjustedTime);\n        this._state = FORWARD;\n      }\n    } else {\n      this.seek(time);\n    }\n  }\n\n  stepBackward() {\n    let time = this._time - this._step;\n    let lastTime = this._time;\n\n    const repeatDirection = this._repeatDirection;\n\n    if (time <= 0) {\n      this._iterations++;\n\n      if (this._iterations >= this._repeat) {\n        this.seek(0);\n        this.stop();\n        return;\n      }\n\n      if (repeatDirection === ALTERNATE) {\n        const adjustedTime = time * -1;\n\n        this.notify({\n          type: \"TICK\",\n          time: 0,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 0;\n        this.seek(adjustedTime);\n        this._state = FORWARD;\n      } else {\n        const adjustedTime = 1 + time;\n\n        this.notify({\n          type: \"TICK\",\n          time: 1,\n          lastTime,\n          animation: this._animation,\n        });\n\n        this._time = 1;\n        this.seek(adjustedTime);\n        this._state = REVERSE;\n      }\n    } else {\n      this.seek(time);\n    }\n  }\n\n  seek(time: number) {\n    const lastTime = this._time;\n    this._time = time;\n\n    this._animation.update(this._time);\n    this._render(this._animation);\n\n    this.notify({\n      type: \"TICK\",\n      time,\n      lastTime,\n      animation: this._animation,\n    });\n  }\n\n  stop() {\n    if (this._state !== STOPPED) {\n      this._state = STOPPED;\n      this._clock.unregister(this.tick);\n\n      this.notify({\n        type: \"STOPPED\",\n        animation: this._animation,\n      });\n    }\n  }\n\n  reverse() {\n    if (this._state !== REVERSE) {\n      this._lastTimestamp = this._clock.now();\n      this._state = REVERSE;\n      this._clock.register(this.tick);\n\n      this.notify({\n        type: \"REVERSED\",\n        animation: this._animation,\n      });\n    }\n  }\n\n  transitionToTimeline(animation: Animation, duration: number, easing: EasingFunction) {\n    const slopeAnimation = this._slopeAnimationBuilder.build(\n      this._animation,\n      this._time,\n      this._duration,\n      duration,\n      this._state\n    );\n\n    const blendedAnimation = new BlendedAnimation(\n      slopeAnimation,\n      animation,\n      easing\n    );\n\n    this._animation = blendedAnimation;\n    this._time = 0;\n    this._duration = duration;\n\n    this.notify({\n      type: \"TRANSITION\",\n      animation: this._animation,\n    });\n\n    const observer = this.observeTime(1, () => {\n      this._animation = animation;\n      observer.dispose();\n      transitionObserver.dispose();\n    });\n\n    const transitionObserver = this.observe(\"TRANSITION\", () => {\n      observer.dispose();\n      transitionObserver.dispose();\n    });\n\n    return this;\n  }\n\n  dispose() {\n    this.stop();\n    super.dispose();\n  }\n\n  static get repeatDirections() {\n    return repeatDirections;\n  }\n\n  static get states() {\n    return states;\n  }\n}\n"],"names":["emptyFn","visitor","treeUtility","RegexValue","AndComposite","space","Literal","spaces","RepeatValue","OptionalValue","values","RecursivePattern","RepeatComposite","OptionalComposite","OrComposite","CompositeNode","ValueNode","Cursor","validator","states","FORWARD"],"mappings":"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"}